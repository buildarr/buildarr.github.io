{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Buildarr! # This is Buildarr, a solution to automating deployment and configuration of your *Arr stack. Have you spent many hours getting your setup for one or more linked Sonarr/Radarr/Prowlarr instances just right, only to have no way to reproduce this setup apart from UI screenshots and database backups? Buildarr aims to alleviate those concerns by using a static configuration file to store settings for all your *Arr applications, and automatically configure them as defined. It can just once using an ad-hoc user command, or as a service to keep your application configurations up to date. Buildarr runs idempotently, only making changes to your instance if they are required. It can also automatically retrieve optimal configuration values from TRaSH-Guides for many things such as quality definitions and release profiles, so not only is there no need to manually input them into your configuration, Buildarr will also continually keep them up to date for you. Similar projects # Buildarr attempts to fulfill some of the needs of users of the following projects. Bobarr - An all-in-one package containing Sonarr, Radarr, Jackett etc Still requires manual configuration of many components, and there is no way to store the configuration as code. Flemmarr - Uses API parameters stored in YAML configuration files to push configuration changes to Sonarr, Radarr, Lidarr etc Requires users to comprehensively learn how the APIs of each application work, going through often poor documentation. Since the values are machine-oriented, configuration files are difficult to write and understand. Does not support idempotent updates ( at this time ). Recyclarr - Automatically syncs recommended TRaSH-Guides settings to Sonarr/Radarr instances Buildarr has support for this built-in, and in the case of Sonarr release profiles, supports the same filtering syntax. Installation # Buildarr is available on Docker Hub as a Docker image. All available plugins at the time of release are bundled into the official Docker container for Buildarr, so you can manage instances of those types right away. $ docker pull callum027/buildarr:latest Buildarr can also be installed using pip . Python 3.8 or later is required. Windows is natively supported. As of version 0.4.0, the Python package for Buildarr no longer includes plugins for applications. In order to use Buildarr to manage an application instance, you will also need to install its corresponding plugin. $ python3 -m venv buildarr-venv $ . buildarr-venv/bin/activate $ python3 -m pip install buildarr You can deploy Buildarr as a service within a Docker Compose environment, or use configuration management tools such as Ansible to automatically deploy it. For more information, check the installation instructions . Plugins # Buildarr supports external plugins to allow additional applications to be supported. At the time of this release the following plugins are available: buildarr-sonarr - Sonarr PVR for TV shows buildarr-radarr - Radarr PVR for movies buildarr-prowlarr - Prowlarr indexer manager for Arr applications buildarr-jellyseerr - Jellyseerr media request manager for Jellyfin, Sonarr and Radarr For more information on installing plugins, check the plugin documentation . Configuration # Buildarr uses YAML as its configuration file format. By default, Buildarr looks for buildarr.yml in the current directory. It contains not only the settings for Buildarr itself, but also the application instances to be managed. Multiple instances of the same application type can be defined (for example, a common use case would be separate Sonarr instances for HD TV shows, 4K TV shows, and anime). Any configuration on the remote instance not explicitly defined in the Buildarr configuration is not modified. For more information on how Buildarr uses configuration and how to configure Buildarr itself, check the configuration documentation . Here is an example of a simple Buildarr configuration that changes some settings on a Sonarr instance: --- # buildarr.yml # Buildarr example configuration file. # Buildarr configuration (all settings have sane default values) buildarr : watch_config : true update_days : - \"monday\" - \"tuesday\" - \"wednesday\" - \"thursday\" - \"friday\" - \"saturday\" - \"sunday\" update_times : - \"03:00\" # Sonarr instance configuration sonarr : hostname : \"localhost\" port : 8989 protocol : \"http\" settings : # General settings (all options supported except for changing the API key) general : host : instance_name : \"Sonarr (Buildarr Example)\" If you have an already configured application instance, its configuration can be dumped. For example, to get the configuration of a Sonarr instance, this can be done using the following command (Buildarr will prompt for your API key): $ docker run -it --rm callum027/buildarr:latest sonarr dump-config http://sonarr.example.com:8989 Once you have this configuration, you can insert it into buildarr.yml and ensure this configuration is maintained. Running Buildarr # Once you have a valid configuration file, you can try Buildarr on your local machine using the Docker image. The following command will mount the current folder into the Docker container so buildarr.yml can be read, and start Buildarr in daemon mode. $ docker run -d --name buildarr -v $( pwd ) :/config -e PUID = $( id -u ) -e PGID = $( id -g ) callum027/buildarr:latest If installed using pip , simply run the buildarr CLI command. $ buildarr daemon On startup, Buildarr daemon will do an initial sync with the defined instances, updating their configuration immediately. After this initial run, Buildarr will wake up at the scheduled times to periodically run updates as required. 2023-03-29 20:40:39,958 buildarr:1 buildarr.cli.daemon [INFO] Buildarr version 0.4.0 (log level: INFO) 2023-03-29 20:40:39,958 buildarr:1 buildarr.cli.daemon [INFO] Loading configuration file '/config/buildarr.yml' 2023-03-29 20:40:39,977 buildarr:1 buildarr.cli.daemon [INFO] Finished loading configuration file 2023-03-29 20:40:39,977 buildarr:1 buildarr.cli.daemon [INFO] Daemon configuration: 2023-03-29 20:40:39,978 buildarr:1 buildarr.cli.daemon [INFO] - Watch configuration files: Yes 2023-03-29 20:40:39,978 buildarr:1 buildarr.cli.daemon [INFO] - Configuration files to watch: 2023-03-29 20:40:39,978 buildarr:1 buildarr.cli.daemon [INFO] - /config/buildarr.yml 2023-03-29 20:40:39,978 buildarr:1 buildarr.cli.daemon [INFO] - Update at: 2023-03-29 20:40:39,978 buildarr:1 buildarr.cli.daemon [INFO] - Monday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] - Tuesday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] - Wednesday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] - Thursday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] - Friday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] - Saturday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] - Sunday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] Applying initial configuration 2023-03-29 20:40:39,981 buildarr:1 buildarr.cli.run [INFO] Loaded plugins: sonarr (0.4.0) 2023-03-29 20:40:39,981 buildarr:1 buildarr.cli.run [INFO] Loading instance configurations 2023-03-29 20:40:39,983 buildarr:1 buildarr.cli.run [INFO] Finished loading instance configurations 2023-03-29 20:40:39,983 buildarr:1 buildarr.cli.run [INFO] Running with plugins: sonarr 2023-03-29 20:40:39,983 buildarr:1 buildarr.cli.run [INFO] Resolving instance dependencies 2023-03-29 20:40:39,984 buildarr:1 buildarr.cli.run [INFO] Finished resolving instance dependencies 2023-03-29 20:40:39,984 buildarr:1 buildarr.cli.run [INFO] Loading secrets file from '/config/secrets.json' 2023-03-29 20:40:39,989 buildarr:1 buildarr.cli.run [INFO] Finished loading secrets file 2023-03-29 20:40:39,989 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Checking secrets 2023-03-29 20:40:40,015 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Connection test successful using cached secrets 2023-03-29 20:40:40,015 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished checking secrets 2023-03-29 20:40:40,015 buildarr:1 buildarr.cli.run [INFO] Saving updated secrets file to '/config/secrets.json' 2023-03-29 20:40:40,017 buildarr:1 buildarr.cli.run [INFO] Finished saving updated secrets file 2023-03-29 20:40:40,017 buildarr:1 buildarr.cli.run [INFO] Updating configuration on remote instances 2023-03-29 20:40:40,017 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Getting remote configuration 2023-03-29 20:40:40,599 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished getting remote configuration 2023-03-29 20:40:40,662 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Updating remote configuration 2023-03-29 20:40:41,129 buildarr:1 buildarr.config.base [INFO] <sonarr> (default) sonarr.settings.general.host.instance_name: 'Sonarr' -> 'Sonarr (Buildarr Example)' 2023-03-29 20:40:41,204 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Remote configuration successfully updated 2023-03-29 20:40:41,204 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished updating remote configuration 2023-03-29 20:40:41,205 buildarr:1 buildarr.cli.run [INFO] Finished updating configuration on remote instances 2023-03-29 20:40:41,205 buildarr:1 buildarr.cli.daemon [INFO] Finished applying initial configuration 2023-03-29 20:40:41,205 buildarr:1 buildarr.cli.daemon [INFO] Scheduling update jobs 2023-03-29 20:40:41,206 buildarr:1 buildarr.cli.daemon [INFO] Finished scheduling update jobs 2023-03-29 20:40:41,206 buildarr:1 buildarr.cli.daemon [INFO] The next run will be at 2023-03-30 03:00 2023-03-29 20:40:41,206 buildarr:1 buildarr.cli.daemon [INFO] Setting up config file monitoring 2023-03-29 20:40:41,216 buildarr:1 buildarr.cli.daemon [INFO] Finished setting up config file monitoring 2023-03-29 20:40:41,216 buildarr:1 buildarr.cli.daemon [INFO] Setting up signal handlers 2023-03-29 20:40:41,216 buildarr:1 buildarr.cli.daemon [INFO] Finished setting up signal handlers 2023-03-29 20:40:41,216 buildarr:1 buildarr.cli.daemon [INFO] Buildarr ready. For more information on how to interfact with Buildarr, check the usage documentation . To-do list # Test updates for all available attributes in the existing Sonarr plugin Unit tests and code coverage Split Sonarr plugin to its own repository (completed in version 0.4.0 ) Create plugins for the following applications: Sonarr V4 Radarr Prowlarr (now available as buildarr-prowlarr ) Bazarr Unmanic Tdarr (maybe) Unpackerr Lidarr Instance linking (e.g. Prowlarr-to-Sonarr/Radarr) and dependency resolution (added in version 0.3.0 ) Stable plugin API between major versions Auto-generation of Docker Compose environment files reflecting the Buildarr configuration (added in version 0.4.0 ) Contributions # Buildarr is still early in development, and even currently implemented features still require testing and fixing. There are so many possible configurations to cover that I simply cannot feasibly test every feature at this time. If you encounter an issue or error while using Buildarr, please do a Buildarr ad-hoc run with verbose log output by executing buildarr --log-level DEBUG run and making an issue on our GitHub repository explaining the issue and attaching the output. (Please ensure that any API keys or other sensitive information are obfuscated before submitting.) $ docker run -d --name buildarr -v $( pwd ) :/config -e PUID = $( id -u ) -e PGID = $( id -g ) callum027/buildarr:latest --log-level DEBUG run Bug reports and pull requests for Buildarr itself are welcome in the Buildarr base package repository. For reporting issues and making contributions to application plugins, check out their repositories: Sonarr plugin: https://github.com/buildarr/buildarr-sonarr For developers looking to make a contribution to this project, thank you! Documentation of the internal APIs is still in the works, so for now, the best way to learn how Buildarr works is to clone the project and have a look at the comments and docstrings. Pre-commit hooks are configured for this project. In this pre-commit hook, Black , Ruff and Mypy are run to automatically format source files, ensure grammatical correctness and variable type consistency. To enable them, ensure the pre-commit Python package is installed in your local environment and run the following command: $ pre-commit install Poetry is used to manage the Python package definition and dependencies in this project. If you're looking to develop a new plugin for adding support for a new application, please develop it as a new package and configure entry points in your Python package definitions to allow Buildarr to load your plugin. Setuptools setup.py entry point definition example: from setuptools import setup setup ( # ..., entry_points = { \"buildarr.plugins\" : [ \"example = buildarr_example.plugin:ExamplePlugin\" , ], }, ) Setuptools setup.cfg entry point definition example: [options.entry_points] buildarr.plugins = example = buildarr_example.plugin:ExamplePlugin Setuptools pyproject.toml entry point definition example: [project.entry-points.\"buildarr.plugins\"] \"example\" = \"buildarr_example.plugin:ExamplePlugin\" Poetry plugin definition example: [tool.poetry.plugins.\"buildarr.plugins\"] \"example\" = \"buildarr_example.plugin:ExamplePlugin\"","title":"Welcome to Buildarr!"},{"location":"#welcome-to-buildarr","text":"This is Buildarr, a solution to automating deployment and configuration of your *Arr stack. Have you spent many hours getting your setup for one or more linked Sonarr/Radarr/Prowlarr instances just right, only to have no way to reproduce this setup apart from UI screenshots and database backups? Buildarr aims to alleviate those concerns by using a static configuration file to store settings for all your *Arr applications, and automatically configure them as defined. It can just once using an ad-hoc user command, or as a service to keep your application configurations up to date. Buildarr runs idempotently, only making changes to your instance if they are required. It can also automatically retrieve optimal configuration values from TRaSH-Guides for many things such as quality definitions and release profiles, so not only is there no need to manually input them into your configuration, Buildarr will also continually keep them up to date for you.","title":"Welcome to Buildarr!"},{"location":"#similar-projects","text":"Buildarr attempts to fulfill some of the needs of users of the following projects. Bobarr - An all-in-one package containing Sonarr, Radarr, Jackett etc Still requires manual configuration of many components, and there is no way to store the configuration as code. Flemmarr - Uses API parameters stored in YAML configuration files to push configuration changes to Sonarr, Radarr, Lidarr etc Requires users to comprehensively learn how the APIs of each application work, going through often poor documentation. Since the values are machine-oriented, configuration files are difficult to write and understand. Does not support idempotent updates ( at this time ). Recyclarr - Automatically syncs recommended TRaSH-Guides settings to Sonarr/Radarr instances Buildarr has support for this built-in, and in the case of Sonarr release profiles, supports the same filtering syntax.","title":"Similar projects"},{"location":"#installation","text":"Buildarr is available on Docker Hub as a Docker image. All available plugins at the time of release are bundled into the official Docker container for Buildarr, so you can manage instances of those types right away. $ docker pull callum027/buildarr:latest Buildarr can also be installed using pip . Python 3.8 or later is required. Windows is natively supported. As of version 0.4.0, the Python package for Buildarr no longer includes plugins for applications. In order to use Buildarr to manage an application instance, you will also need to install its corresponding plugin. $ python3 -m venv buildarr-venv $ . buildarr-venv/bin/activate $ python3 -m pip install buildarr You can deploy Buildarr as a service within a Docker Compose environment, or use configuration management tools such as Ansible to automatically deploy it. For more information, check the installation instructions .","title":"Installation"},{"location":"#plugins","text":"Buildarr supports external plugins to allow additional applications to be supported. At the time of this release the following plugins are available: buildarr-sonarr - Sonarr PVR for TV shows buildarr-radarr - Radarr PVR for movies buildarr-prowlarr - Prowlarr indexer manager for Arr applications buildarr-jellyseerr - Jellyseerr media request manager for Jellyfin, Sonarr and Radarr For more information on installing plugins, check the plugin documentation .","title":"Plugins"},{"location":"#configuration","text":"Buildarr uses YAML as its configuration file format. By default, Buildarr looks for buildarr.yml in the current directory. It contains not only the settings for Buildarr itself, but also the application instances to be managed. Multiple instances of the same application type can be defined (for example, a common use case would be separate Sonarr instances for HD TV shows, 4K TV shows, and anime). Any configuration on the remote instance not explicitly defined in the Buildarr configuration is not modified. For more information on how Buildarr uses configuration and how to configure Buildarr itself, check the configuration documentation . Here is an example of a simple Buildarr configuration that changes some settings on a Sonarr instance: --- # buildarr.yml # Buildarr example configuration file. # Buildarr configuration (all settings have sane default values) buildarr : watch_config : true update_days : - \"monday\" - \"tuesday\" - \"wednesday\" - \"thursday\" - \"friday\" - \"saturday\" - \"sunday\" update_times : - \"03:00\" # Sonarr instance configuration sonarr : hostname : \"localhost\" port : 8989 protocol : \"http\" settings : # General settings (all options supported except for changing the API key) general : host : instance_name : \"Sonarr (Buildarr Example)\" If you have an already configured application instance, its configuration can be dumped. For example, to get the configuration of a Sonarr instance, this can be done using the following command (Buildarr will prompt for your API key): $ docker run -it --rm callum027/buildarr:latest sonarr dump-config http://sonarr.example.com:8989 Once you have this configuration, you can insert it into buildarr.yml and ensure this configuration is maintained.","title":"Configuration"},{"location":"#running-buildarr","text":"Once you have a valid configuration file, you can try Buildarr on your local machine using the Docker image. The following command will mount the current folder into the Docker container so buildarr.yml can be read, and start Buildarr in daemon mode. $ docker run -d --name buildarr -v $( pwd ) :/config -e PUID = $( id -u ) -e PGID = $( id -g ) callum027/buildarr:latest If installed using pip , simply run the buildarr CLI command. $ buildarr daemon On startup, Buildarr daemon will do an initial sync with the defined instances, updating their configuration immediately. After this initial run, Buildarr will wake up at the scheduled times to periodically run updates as required. 2023-03-29 20:40:39,958 buildarr:1 buildarr.cli.daemon [INFO] Buildarr version 0.4.0 (log level: INFO) 2023-03-29 20:40:39,958 buildarr:1 buildarr.cli.daemon [INFO] Loading configuration file '/config/buildarr.yml' 2023-03-29 20:40:39,977 buildarr:1 buildarr.cli.daemon [INFO] Finished loading configuration file 2023-03-29 20:40:39,977 buildarr:1 buildarr.cli.daemon [INFO] Daemon configuration: 2023-03-29 20:40:39,978 buildarr:1 buildarr.cli.daemon [INFO] - Watch configuration files: Yes 2023-03-29 20:40:39,978 buildarr:1 buildarr.cli.daemon [INFO] - Configuration files to watch: 2023-03-29 20:40:39,978 buildarr:1 buildarr.cli.daemon [INFO] - /config/buildarr.yml 2023-03-29 20:40:39,978 buildarr:1 buildarr.cli.daemon [INFO] - Update at: 2023-03-29 20:40:39,978 buildarr:1 buildarr.cli.daemon [INFO] - Monday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] - Tuesday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] - Wednesday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] - Thursday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] - Friday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] - Saturday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] - Sunday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] Applying initial configuration 2023-03-29 20:40:39,981 buildarr:1 buildarr.cli.run [INFO] Loaded plugins: sonarr (0.4.0) 2023-03-29 20:40:39,981 buildarr:1 buildarr.cli.run [INFO] Loading instance configurations 2023-03-29 20:40:39,983 buildarr:1 buildarr.cli.run [INFO] Finished loading instance configurations 2023-03-29 20:40:39,983 buildarr:1 buildarr.cli.run [INFO] Running with plugins: sonarr 2023-03-29 20:40:39,983 buildarr:1 buildarr.cli.run [INFO] Resolving instance dependencies 2023-03-29 20:40:39,984 buildarr:1 buildarr.cli.run [INFO] Finished resolving instance dependencies 2023-03-29 20:40:39,984 buildarr:1 buildarr.cli.run [INFO] Loading secrets file from '/config/secrets.json' 2023-03-29 20:40:39,989 buildarr:1 buildarr.cli.run [INFO] Finished loading secrets file 2023-03-29 20:40:39,989 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Checking secrets 2023-03-29 20:40:40,015 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Connection test successful using cached secrets 2023-03-29 20:40:40,015 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished checking secrets 2023-03-29 20:40:40,015 buildarr:1 buildarr.cli.run [INFO] Saving updated secrets file to '/config/secrets.json' 2023-03-29 20:40:40,017 buildarr:1 buildarr.cli.run [INFO] Finished saving updated secrets file 2023-03-29 20:40:40,017 buildarr:1 buildarr.cli.run [INFO] Updating configuration on remote instances 2023-03-29 20:40:40,017 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Getting remote configuration 2023-03-29 20:40:40,599 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished getting remote configuration 2023-03-29 20:40:40,662 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Updating remote configuration 2023-03-29 20:40:41,129 buildarr:1 buildarr.config.base [INFO] <sonarr> (default) sonarr.settings.general.host.instance_name: 'Sonarr' -> 'Sonarr (Buildarr Example)' 2023-03-29 20:40:41,204 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Remote configuration successfully updated 2023-03-29 20:40:41,204 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished updating remote configuration 2023-03-29 20:40:41,205 buildarr:1 buildarr.cli.run [INFO] Finished updating configuration on remote instances 2023-03-29 20:40:41,205 buildarr:1 buildarr.cli.daemon [INFO] Finished applying initial configuration 2023-03-29 20:40:41,205 buildarr:1 buildarr.cli.daemon [INFO] Scheduling update jobs 2023-03-29 20:40:41,206 buildarr:1 buildarr.cli.daemon [INFO] Finished scheduling update jobs 2023-03-29 20:40:41,206 buildarr:1 buildarr.cli.daemon [INFO] The next run will be at 2023-03-30 03:00 2023-03-29 20:40:41,206 buildarr:1 buildarr.cli.daemon [INFO] Setting up config file monitoring 2023-03-29 20:40:41,216 buildarr:1 buildarr.cli.daemon [INFO] Finished setting up config file monitoring 2023-03-29 20:40:41,216 buildarr:1 buildarr.cli.daemon [INFO] Setting up signal handlers 2023-03-29 20:40:41,216 buildarr:1 buildarr.cli.daemon [INFO] Finished setting up signal handlers 2023-03-29 20:40:41,216 buildarr:1 buildarr.cli.daemon [INFO] Buildarr ready. For more information on how to interfact with Buildarr, check the usage documentation .","title":"Running Buildarr"},{"location":"#to-do-list","text":"Test updates for all available attributes in the existing Sonarr plugin Unit tests and code coverage Split Sonarr plugin to its own repository (completed in version 0.4.0 ) Create plugins for the following applications: Sonarr V4 Radarr Prowlarr (now available as buildarr-prowlarr ) Bazarr Unmanic Tdarr (maybe) Unpackerr Lidarr Instance linking (e.g. Prowlarr-to-Sonarr/Radarr) and dependency resolution (added in version 0.3.0 ) Stable plugin API between major versions Auto-generation of Docker Compose environment files reflecting the Buildarr configuration (added in version 0.4.0 )","title":"To-do list"},{"location":"#contributions","text":"Buildarr is still early in development, and even currently implemented features still require testing and fixing. There are so many possible configurations to cover that I simply cannot feasibly test every feature at this time. If you encounter an issue or error while using Buildarr, please do a Buildarr ad-hoc run with verbose log output by executing buildarr --log-level DEBUG run and making an issue on our GitHub repository explaining the issue and attaching the output. (Please ensure that any API keys or other sensitive information are obfuscated before submitting.) $ docker run -d --name buildarr -v $( pwd ) :/config -e PUID = $( id -u ) -e PGID = $( id -g ) callum027/buildarr:latest --log-level DEBUG run Bug reports and pull requests for Buildarr itself are welcome in the Buildarr base package repository. For reporting issues and making contributions to application plugins, check out their repositories: Sonarr plugin: https://github.com/buildarr/buildarr-sonarr For developers looking to make a contribution to this project, thank you! Documentation of the internal APIs is still in the works, so for now, the best way to learn how Buildarr works is to clone the project and have a look at the comments and docstrings. Pre-commit hooks are configured for this project. In this pre-commit hook, Black , Ruff and Mypy are run to automatically format source files, ensure grammatical correctness and variable type consistency. To enable them, ensure the pre-commit Python package is installed in your local environment and run the following command: $ pre-commit install Poetry is used to manage the Python package definition and dependencies in this project. If you're looking to develop a new plugin for adding support for a new application, please develop it as a new package and configure entry points in your Python package definitions to allow Buildarr to load your plugin. Setuptools setup.py entry point definition example: from setuptools import setup setup ( # ..., entry_points = { \"buildarr.plugins\" : [ \"example = buildarr_example.plugin:ExamplePlugin\" , ], }, ) Setuptools setup.cfg entry point definition example: [options.entry_points] buildarr.plugins = example = buildarr_example.plugin:ExamplePlugin Setuptools pyproject.toml entry point definition example: [project.entry-points.\"buildarr.plugins\"] \"example\" = \"buildarr_example.plugin:ExamplePlugin\" Poetry plugin definition example: [tool.poetry.plugins.\"buildarr.plugins\"] \"example\" = \"buildarr_example.plugin:ExamplePlugin\"","title":"Contributions"},{"location":"configuration/","text":"Configuring Buildarr # Buildarr uses YAML as its configuration file format. By default, Buildarr looks for buildarr.yml in the current directory. It contains not only the settings for Buildarr itself, but also the application instances to be managed. When an update run of the managed instances is performed, Buildarr will check the remote instances against this configuration, and if there are any differences, Buildarr will update the instance to match the configuration. Here is an abbreviated example of a buildarr.yml where Buildarr is managing a single Sonarr instance. --- buildarr : watch_config : true update_days : - \"monday\" - \"tuesday\" - \"wednesday\" - \"thursday\" - \"friday\" - \"saturday\" - \"sunday\" update_times : - \"03:00\" sonarr : host : \"sonarr.example.com\" port : 8989 protocol : \"http\" settings : ... Multiple configuration files # Using the includes block, multiple configuration files can be included and read from one buildarr.yml file. Nested inclusion is allowed (included files can include other files). All the loaded configuration files are merged into a single structure in a breadth-first fashion. If any configuration attributes in files overlap, the last-read value will take precedence. Note that any overlapping attributes that are lists will be overwritten, rather than combined. Note In order to evaluate per-file relative paths, configuration files will be parsed and validated individually first, and then validated again as a combined configuration structure. Take care to ensure that the individual configuration files do not depend on each other being combined to become valid. Instances that depend on other instances via e.g. instance_name are not subject to this limitation, and can freely be defined in separate files. To make troubleshooting easier and to ensure readability, overly complicated include structures in configuration files should be avoided. Here is an example of a global buildarr.yml configuration file including two Sonarr instance configuration from separate files in the same directory as buildarr.yml : buildarr.yml : --- includes : - sonarr1.yml - sonarr2.yml buildarr : watch_config : true update_days : - \"monday\" - \"tuesday\" - \"wednesday\" - \"thursday\" - \"friday\" - \"saturday\" - \"sunday\" update_times : - \"03:00\" sonarr : # Configuration common to all Sonarr instances. settings : ... sonarr1.yml : --- sonarr : instances : # Sonarr instance 1 connection information and configuration. sonarr1 : host : \"sonarr1.example.com\" port : 8989 protocol : \"http\" settings : ... sonarr2.yml : --- sonarr : instances : # Sonarr instance 2 connection information and configuration. sonarr2 : host : \"sonarr2.example.com\" port : 8989 protocol : \"http\" settings : ... Multiple instances of the same type # Using the instances attribute, multiple instances of the same type can be administered using a single Buildarr instance. Globally set configuration will apply to all defined instances, and settings defined under a single instance only apply to that instance. sonarr : # Configuration common to all Sonarr instances. settings : ... instances : # Sonarr instance 1 connection information and configuration. sonarr1 : host : \"sonarr1.example.com\" port : 8989 protocol : \"http\" settings : ... # Sonarr instance 1 connection information and configuration. sonarr2 : host : \"sonarr2.example.com\" port : 8989 protocol : \"http\" settings : ... How does configuration get pushed to instances? # Buildarr operates on a principle of \"don't touch what is not explicitly defined\", and idempotent operation. Buildarr downloads the active configuration of a remote instance, and compares it to the configuration file. If a configuration value is not explicitly defined in the Buildarr configuration, it is not updated. If the explicitly set local configuration value matches the remote instance, it is not updated (unless other parameters set using the same API command have been changed). Only if a configuration update is available will it be pushed to the remote instance. Buildarr Settings # The buildarr configuration section is used to configure the behaviour of Buildarr itself. Some of the configuration options set here may be overridden on the command line. Note that the log level cannot be set within buildarr.yml , as logging starts before the configuration is loaded. The log level can be set using the $BUILDARR_LOG_LEVEL environment variable, or using the --log-level command line argument. --- buildarr : watch_config : true update_days : - \"monday\" - \"tuesday\" - \"wednesday\" - \"thursday\" - \"friday\" - \"saturday\" - \"sunday\" update_times : - \"03:00\" secrets_file_path : \"secrets.json\" watch_config : bool = False class-attribute instance-attribute # When set to true , the Buildarr daemon will watch the loaded configuration files for changes, and reload them and update remote instances if they are changed. Sending SIGHUP to the Buildarr daemon process on supported operating systems will also perform this operation, whether watch_config is enabled or not. This configuration option can be overridden using the --watch-config command line argument. update_days : Set [ DayOfWeek ] = set ( day for day in DayOfWeek ) class-attribute instance-attribute # The days Buildarr daemon will run update operations on. By default, updates are scheduled to run every day. Days are specified as a list of case-insensitive strings, in English. The days do not need to be in order. buildarr : update_days : - \"monday\" - \"wednesday\" - \"friday\" This configuration option can be overridden using the --update-days command line argument. update_times : Set [ time ] = { time ( hour = 3 )} class-attribute instance-attribute # The times Buildarr daemon will run update operations on each scheduled day. By default, updates are scheduled to run at 3:00am local time. Times are specified in the HH:MM format, in 24-hour time. The times do not need to be in order. Days are specified as a list of case-insensitive strings, in English. The days do not need to be in order. buildarr : update_times : - \"06:00\" - \"12:00\" - \"18:00\" - \"00:00\" This configuration option can be overridden using the --update-times command line argument. secrets_file_path : LocalPath = LocalPath ( 'secrets.json' ) class-attribute instance-attribute # Path to store the Buildarr instance secrets file. By default, this will create a file called secrets.json in the same folder the first loaded configuration file is located. New in version 0.4.0 : This configuration option can now be overridden using the --secrets-file command line argument. Changed in version 0.4.0 : Relative file paths are now evaluated relative to the directory the configuration file that defined the attribute is located, not the current working directory of the Buildarr process. If the attribute is undefined, the secrets file will be created in the directory the originally loaded configuration file is located. request_timeout : PositiveFloat = 30 class-attribute instance-attribute # The timeout for any API requests Buildarr makes (in seconds). If the timeout is reached, an error will occur and Buildarr will stop the update process. New in version 0.3.0. trash_metadata_download_url : AnyHttpUrl = 'https://github.com/TRaSH-/Guides/archive/refs/heads/master.zip' class-attribute instance-attribute # URL to download the latest TRaSH-Guides metadata from. trash_metadata_dir_prefix : Path = Path ( 'Guides-master' ) class-attribute instance-attribute # Metadata directory name within the downloaded ZIP file. docker_image_uri : NonEmptyStr = os . environ . get ( 'BUILDARR_DOCKER_IMAGE_URI' , 'callum027/buildarr' ) class-attribute instance-attribute # Default image URI to use for the Buildarr service when generating Docker Compose files. If undefined in the configuration file, use the value defined in the $BUILDARR_DOCKER_IMAGE_URI environment variable. This allows third-party Docker images to customise the version of Buildarr used in the command. If no environment variable is found, use callum027/buildarr (the official Docker image). New in version 0.4.0.","title":"Configuration"},{"location":"configuration/#configuring-buildarr","text":"Buildarr uses YAML as its configuration file format. By default, Buildarr looks for buildarr.yml in the current directory. It contains not only the settings for Buildarr itself, but also the application instances to be managed. When an update run of the managed instances is performed, Buildarr will check the remote instances against this configuration, and if there are any differences, Buildarr will update the instance to match the configuration. Here is an abbreviated example of a buildarr.yml where Buildarr is managing a single Sonarr instance. --- buildarr : watch_config : true update_days : - \"monday\" - \"tuesday\" - \"wednesday\" - \"thursday\" - \"friday\" - \"saturday\" - \"sunday\" update_times : - \"03:00\" sonarr : host : \"sonarr.example.com\" port : 8989 protocol : \"http\" settings : ...","title":"Configuring Buildarr"},{"location":"configuration/#multiple-configuration-files","text":"Using the includes block, multiple configuration files can be included and read from one buildarr.yml file. Nested inclusion is allowed (included files can include other files). All the loaded configuration files are merged into a single structure in a breadth-first fashion. If any configuration attributes in files overlap, the last-read value will take precedence. Note that any overlapping attributes that are lists will be overwritten, rather than combined. Note In order to evaluate per-file relative paths, configuration files will be parsed and validated individually first, and then validated again as a combined configuration structure. Take care to ensure that the individual configuration files do not depend on each other being combined to become valid. Instances that depend on other instances via e.g. instance_name are not subject to this limitation, and can freely be defined in separate files. To make troubleshooting easier and to ensure readability, overly complicated include structures in configuration files should be avoided. Here is an example of a global buildarr.yml configuration file including two Sonarr instance configuration from separate files in the same directory as buildarr.yml : buildarr.yml : --- includes : - sonarr1.yml - sonarr2.yml buildarr : watch_config : true update_days : - \"monday\" - \"tuesday\" - \"wednesday\" - \"thursday\" - \"friday\" - \"saturday\" - \"sunday\" update_times : - \"03:00\" sonarr : # Configuration common to all Sonarr instances. settings : ... sonarr1.yml : --- sonarr : instances : # Sonarr instance 1 connection information and configuration. sonarr1 : host : \"sonarr1.example.com\" port : 8989 protocol : \"http\" settings : ... sonarr2.yml : --- sonarr : instances : # Sonarr instance 2 connection information and configuration. sonarr2 : host : \"sonarr2.example.com\" port : 8989 protocol : \"http\" settings : ...","title":"Multiple configuration files"},{"location":"configuration/#multiple-instances-of-the-same-type","text":"Using the instances attribute, multiple instances of the same type can be administered using a single Buildarr instance. Globally set configuration will apply to all defined instances, and settings defined under a single instance only apply to that instance. sonarr : # Configuration common to all Sonarr instances. settings : ... instances : # Sonarr instance 1 connection information and configuration. sonarr1 : host : \"sonarr1.example.com\" port : 8989 protocol : \"http\" settings : ... # Sonarr instance 1 connection information and configuration. sonarr2 : host : \"sonarr2.example.com\" port : 8989 protocol : \"http\" settings : ...","title":"Multiple instances of the same type"},{"location":"configuration/#how-does-configuration-get-pushed-to-instances","text":"Buildarr operates on a principle of \"don't touch what is not explicitly defined\", and idempotent operation. Buildarr downloads the active configuration of a remote instance, and compares it to the configuration file. If a configuration value is not explicitly defined in the Buildarr configuration, it is not updated. If the explicitly set local configuration value matches the remote instance, it is not updated (unless other parameters set using the same API command have been changed). Only if a configuration update is available will it be pushed to the remote instance.","title":"How does configuration get pushed to instances?"},{"location":"configuration/#buildarr-settings","text":"The buildarr configuration section is used to configure the behaviour of Buildarr itself. Some of the configuration options set here may be overridden on the command line. Note that the log level cannot be set within buildarr.yml , as logging starts before the configuration is loaded. The log level can be set using the $BUILDARR_LOG_LEVEL environment variable, or using the --log-level command line argument. --- buildarr : watch_config : true update_days : - \"monday\" - \"tuesday\" - \"wednesday\" - \"thursday\" - \"friday\" - \"saturday\" - \"sunday\" update_times : - \"03:00\" secrets_file_path : \"secrets.json\"","title":"Buildarr Settings"},{"location":"configuration/#buildarr.config.buildarr.BuildarrConfig.watch_config","text":"When set to true , the Buildarr daemon will watch the loaded configuration files for changes, and reload them and update remote instances if they are changed. Sending SIGHUP to the Buildarr daemon process on supported operating systems will also perform this operation, whether watch_config is enabled or not. This configuration option can be overridden using the --watch-config command line argument.","title":"watch_config"},{"location":"configuration/#buildarr.config.buildarr.BuildarrConfig.update_days","text":"The days Buildarr daemon will run update operations on. By default, updates are scheduled to run every day. Days are specified as a list of case-insensitive strings, in English. The days do not need to be in order. buildarr : update_days : - \"monday\" - \"wednesday\" - \"friday\" This configuration option can be overridden using the --update-days command line argument.","title":"update_days"},{"location":"configuration/#buildarr.config.buildarr.BuildarrConfig.update_times","text":"The times Buildarr daemon will run update operations on each scheduled day. By default, updates are scheduled to run at 3:00am local time. Times are specified in the HH:MM format, in 24-hour time. The times do not need to be in order. Days are specified as a list of case-insensitive strings, in English. The days do not need to be in order. buildarr : update_times : - \"06:00\" - \"12:00\" - \"18:00\" - \"00:00\" This configuration option can be overridden using the --update-times command line argument.","title":"update_times"},{"location":"configuration/#buildarr.config.buildarr.BuildarrConfig.secrets_file_path","text":"Path to store the Buildarr instance secrets file. By default, this will create a file called secrets.json in the same folder the first loaded configuration file is located. New in version 0.4.0 : This configuration option can now be overridden using the --secrets-file command line argument. Changed in version 0.4.0 : Relative file paths are now evaluated relative to the directory the configuration file that defined the attribute is located, not the current working directory of the Buildarr process. If the attribute is undefined, the secrets file will be created in the directory the originally loaded configuration file is located.","title":"secrets_file_path"},{"location":"configuration/#buildarr.config.buildarr.BuildarrConfig.request_timeout","text":"The timeout for any API requests Buildarr makes (in seconds). If the timeout is reached, an error will occur and Buildarr will stop the update process. New in version 0.3.0.","title":"request_timeout"},{"location":"configuration/#buildarr.config.buildarr.BuildarrConfig.trash_metadata_download_url","text":"URL to download the latest TRaSH-Guides metadata from.","title":"trash_metadata_download_url"},{"location":"configuration/#buildarr.config.buildarr.BuildarrConfig.trash_metadata_dir_prefix","text":"Metadata directory name within the downloaded ZIP file.","title":"trash_metadata_dir_prefix"},{"location":"configuration/#buildarr.config.buildarr.BuildarrConfig.docker_image_uri","text":"Default image URI to use for the Buildarr service when generating Docker Compose files. If undefined in the configuration file, use the value defined in the $BUILDARR_DOCKER_IMAGE_URI environment variable. This allows third-party Docker images to customise the version of Buildarr used in the command. If no environment variable is found, use callum027/buildarr (the official Docker image). New in version 0.4.0.","title":"docker_image_uri"},{"location":"installation/","text":"Installing and running Buildarr # Many users will already have configuraton management automatically deploying their *Arr stacks, and Buildarr is designed to seamlessly integrate into existing setups. Standalone application # Buildarr can be installed as a standalone Python application using pip . Python 3.8 or later is required. Buildarr also runs natively on Windows. As Buildarr can be extended with external plugins, it is recommended to create a dedicated virtual environment to install Buildarr. $ python3 -m venv buildarr-venv $ . buildarr-venv/bin/activate $ python3 -m pip install buildarr Note As of Buildarr v0.4.0, plugins are no longer bundled with the Buildarr base package. For more information on the available plugins and installing them, see Plugins . Once installed and a configuration file has been created, you can execute an update of your stack by running the following command. $ buildarr run Buildar can also be run as a daemon to schedule periodic updates of your stack. $ buildarr daemon Docker # Buildarr is available on Docker Hub as a Docker image. $ docker pull callum027/buildarr:latest Note Because the Docker container is a bundle of packages consisting of Buildarr and implementing plugins, it has a separate version number from Buildarr itself. For more information, check out the Docker Hub page for the Buildarr Docker container. Once you have a configuration file, create a folder to store the configuration and auto-generated secrets files to mount into the Docker container. As API keys and login credentials are to be stored here, they should have strict permissions set, with ownership exclusively set to the PUID (process user ID) and PGID (process group ID) to be configured on the container. $ mkdir --mode = 700 /path/to/config $ sudo chown -R <PUID>:<PGID> /path/to/config You can start a Buildarr container by calling docker run , bind mounting the configuration directory as /config . By default, the Buildarr Docker container runs in daemon mode. $ docker run -d --name buildarr --restart = always -v /path/to/config:/config -e PUID = <PUID> -e PGID = <PGID> callum027/buildarr:latest For configuration testing purposes, you can call buildarr run using the Docker image to run an update of your stack and exit. $ docker run --rm -v /path/to/config:/config -e PUID = <PUID> -e PGID = <PGID> callum027/buildarr:latest run The Docker container for Buildarr is bundled with the following plugins (allowing out-of-the-box configuration): buildarr-sonarr - Sonarr PVR for TV shows buildarr-radarr - Radarr PVR for movies buildarr-prowlarr - Prowlarr indexer manager for Arr applications buildarr-jellyseerr - Jellyseerr media request manager for Jellyfin, Sonarr and Radarr If you would like to install external plugins into the Docker container, see Installing plugins into the Docker container . Docker Compose # Buildarr can be integrated into a Docker Compose environment containing your *Arr stack instances. depends_on should be used to ensure Docker Compose services are started in the correct order. Here is an example of a docker-compose.yml file with Buildarr managing one Sonarr instance. version : \"3.7\" services : sonarr : image : linuxserver/sonarr:3.0.9 container_name : sonarr restart : always ports : - 127.0.0.1:8989:8989 volumes : - ./sonarr:/config - /path/to/downloads:/downloads - /path/to/videos:/videos environment : TZ : Pacific/Auckland PUID : \"1000\" PGID : \"1000\" buildarr : image : callum027/buildarr:latest container_name : buildarr restart : always volumes : - type : bind source : ./buildarr target : /config environment : TZ : Pacific/Auckland PUID : \"1000\" PGID : \"1000\" depends_on : - sonarr The corresponding instance configuration in buildarr.yml would look something like this: --- buildarr : watch_config : true update_days : - \"monday\" - \"tuesday\" - \"wednesday\" - \"thursday\" - \"friday\" - \"saturday\" - \"sunday\" update_times : - \"03:00\" sonarr : # Configuration common to all Sonarr instances can be defined here. # settings: # ... instances : # Name of the instance as referred to by Buildarr. # Assign instance-specific configuration to it. sonarr : host : \"sonarr\" port : 8989 protocol : \"http\" # Define instance-specific Sonarr settings here. settings : ... New in version 0.4.0 : Buildarr now supports generating a Docker Compose file from a Buildarr configuration file, using the buildarr compose command. Automatic deployment using Ansible # Buildarr is designed to be automatically deployed with your *Arr stack using tools such as Ansible . The easiest way to do this is to create a Docker Compose environment, and deploy it using the community.docker.docker_compose module. For applications that expose their API key on an unauthenticated endpoint (such as Sonarr V3), Buildarr will automatically retrieve and use the API keys. For these applications, no manual configuration is required once Buildarr and the managed applications are deployed. Applications that require an account to be setup (Sonarr V4) are not yet supported.","title":"Installation"},{"location":"installation/#installing-and-running-buildarr","text":"Many users will already have configuraton management automatically deploying their *Arr stacks, and Buildarr is designed to seamlessly integrate into existing setups.","title":"Installing and running Buildarr"},{"location":"installation/#standalone-application","text":"Buildarr can be installed as a standalone Python application using pip . Python 3.8 or later is required. Buildarr also runs natively on Windows. As Buildarr can be extended with external plugins, it is recommended to create a dedicated virtual environment to install Buildarr. $ python3 -m venv buildarr-venv $ . buildarr-venv/bin/activate $ python3 -m pip install buildarr Note As of Buildarr v0.4.0, plugins are no longer bundled with the Buildarr base package. For more information on the available plugins and installing them, see Plugins . Once installed and a configuration file has been created, you can execute an update of your stack by running the following command. $ buildarr run Buildar can also be run as a daemon to schedule periodic updates of your stack. $ buildarr daemon","title":"Standalone application"},{"location":"installation/#docker","text":"Buildarr is available on Docker Hub as a Docker image. $ docker pull callum027/buildarr:latest Note Because the Docker container is a bundle of packages consisting of Buildarr and implementing plugins, it has a separate version number from Buildarr itself. For more information, check out the Docker Hub page for the Buildarr Docker container. Once you have a configuration file, create a folder to store the configuration and auto-generated secrets files to mount into the Docker container. As API keys and login credentials are to be stored here, they should have strict permissions set, with ownership exclusively set to the PUID (process user ID) and PGID (process group ID) to be configured on the container. $ mkdir --mode = 700 /path/to/config $ sudo chown -R <PUID>:<PGID> /path/to/config You can start a Buildarr container by calling docker run , bind mounting the configuration directory as /config . By default, the Buildarr Docker container runs in daemon mode. $ docker run -d --name buildarr --restart = always -v /path/to/config:/config -e PUID = <PUID> -e PGID = <PGID> callum027/buildarr:latest For configuration testing purposes, you can call buildarr run using the Docker image to run an update of your stack and exit. $ docker run --rm -v /path/to/config:/config -e PUID = <PUID> -e PGID = <PGID> callum027/buildarr:latest run The Docker container for Buildarr is bundled with the following plugins (allowing out-of-the-box configuration): buildarr-sonarr - Sonarr PVR for TV shows buildarr-radarr - Radarr PVR for movies buildarr-prowlarr - Prowlarr indexer manager for Arr applications buildarr-jellyseerr - Jellyseerr media request manager for Jellyfin, Sonarr and Radarr If you would like to install external plugins into the Docker container, see Installing plugins into the Docker container .","title":"Docker"},{"location":"installation/#docker-compose","text":"Buildarr can be integrated into a Docker Compose environment containing your *Arr stack instances. depends_on should be used to ensure Docker Compose services are started in the correct order. Here is an example of a docker-compose.yml file with Buildarr managing one Sonarr instance. version : \"3.7\" services : sonarr : image : linuxserver/sonarr:3.0.9 container_name : sonarr restart : always ports : - 127.0.0.1:8989:8989 volumes : - ./sonarr:/config - /path/to/downloads:/downloads - /path/to/videos:/videos environment : TZ : Pacific/Auckland PUID : \"1000\" PGID : \"1000\" buildarr : image : callum027/buildarr:latest container_name : buildarr restart : always volumes : - type : bind source : ./buildarr target : /config environment : TZ : Pacific/Auckland PUID : \"1000\" PGID : \"1000\" depends_on : - sonarr The corresponding instance configuration in buildarr.yml would look something like this: --- buildarr : watch_config : true update_days : - \"monday\" - \"tuesday\" - \"wednesday\" - \"thursday\" - \"friday\" - \"saturday\" - \"sunday\" update_times : - \"03:00\" sonarr : # Configuration common to all Sonarr instances can be defined here. # settings: # ... instances : # Name of the instance as referred to by Buildarr. # Assign instance-specific configuration to it. sonarr : host : \"sonarr\" port : 8989 protocol : \"http\" # Define instance-specific Sonarr settings here. settings : ... New in version 0.4.0 : Buildarr now supports generating a Docker Compose file from a Buildarr configuration file, using the buildarr compose command.","title":"Docker Compose"},{"location":"installation/#automatic-deployment-using-ansible","text":"Buildarr is designed to be automatically deployed with your *Arr stack using tools such as Ansible . The easiest way to do this is to create a Docker Compose environment, and deploy it using the community.docker.docker_compose module. For applications that expose their API key on an unauthenticated endpoint (such as Sonarr V3), Buildarr will automatically retrieve and use the API keys. For these applications, no manual configuration is required once Buildarr and the managed applications are deployed. Applications that require an account to be setup (Sonarr V4) are not yet supported.","title":"Automatic deployment using Ansible"},{"location":"release-notes/","text":"Release Notes (Buildarr Core) # v0.6.1 - 2023-09-11 # This is a backwards-compatible feature release that adds built-in support for parsing, decoding and encoding email attribute types that include a name (e.g. Example Admin <admin@example.com> ). Some plugins use this attribute type ( NameEmail in Pydantic) without explicitly defining parameters for parsing it, so this adds sane defaults for that attribute type to ensure parsing works appropriately. This will not be done for every possible type, but this application is generic and common enough that it is advantageous to build it into the core Buildarr application. Added # Add built-in support for handling NameEmail attribute types ( #138 ) v0.6.0 - 2023-09-02 # This is a backwards-compatible feature and bugfix release. The main addition is a new run stage for Buildarr plugins: post-initialisation rendering. This is similar to the existing (henceforth called pre-initialisation) rendering stage, but runs after the instance initialisation stage. This allows it to expose the instance secrets, giving the plugin access to the remote instance while rendering the configuration. This can be useful for things such as resolving select option names from names via the API schema, which is sometimes used when rendering TRaSH-Guides metadata. The new stage is used in the upcoming Radarr plugin for Buildarr. The following issues have also been resolved: Buildarr daemon stopped watching configuration file changes, if an unexpected error occurred while performing the initial run following reloading the configuration files. Added # Add post-initialisation rendering step ( #126 ) Changed # Detect plugins that do not use config rendering ( #116 ) Fix running plugins that do not perform config rendering ( #132 ) Improve daemon reloading ( #131 ) v0.5.0 - 2023-04-16 # This is a backwards-incompatible feature release. The main changes are behind-the-scenes improvements to the plugin API. Plugins will need to be updated to support this new version. Due to requiring more work than anticipated to keep working, the deprecated --dry-run option has been removed from the buildarr run command. If you require more testing for your configuration than buildarr test-config does, it is recommended to create a staging environment for your Arr stack, and test configuration changes against that. The following issues have also been addressed: Added a new request_timeout global state attribute, which provides a valid value even when the Buildarr configuration is not loaded (e.g. plugin-specific ad-hoc commands). This allows plugins to fix an issue where when dumping instance configurations, they were trying to access the corresponding attribute in the Buildarr config, which isn't loaded for that command. Added # Add request_timeout global state attribute ( #114 ) Changed # Set validate_assignment to True by default for config models ( #115 ) Change ConfigBase.uses_trash_metadata to a function ( #116 ) Removed # Remove deprecated features for Buildarr v0.5.0 ( #112 ) Remove the deprecated ad-hoc run --dry-run option ( #113 ) v0.4.2 - 2023-04-14 # This is a backwards-compatible feature and bugfix release. This release mainly introduces new behind-the-scenes plugin API functionality to accommodate for new Buildarr plugins currently in development. Add a new generic rendering stage to Buildarr runs for populating dynamic configuration attributes (e.g. TRaSH-Guides metadata), that is not specific to TRaSH-Guides metadata. The current TRaSH-Guides metadata rendering function is now deprecated, and scheduled to be removed in Buildarr v0.5.0. Add a new stage to Buildarr runs for initialising new instances (e.g. with admin credentials or environment settings), that runs after rendering dynamic configuration attributes, but before secrets or remote configuration fetching takes place. This is intended to be used if an application requires initialising before the main API can be used by Buildarr, even before secrets metadata can be checked/fetched. Add a new stage to Buildarr runs for deleting resources from the remote instance if they are not managed by Buildarr or unused, and deletion is allowed in the configuration. This runs after the main configuration update stage, and improves stability of resource deletions by performing them in the reverse instance dependency order, ensuring resources that require resources on another instance are removed first. Any plugins that perform resource deletions are expected to move this functionality to this new Buildarr run stage. Some bugs that are likely to be encountered when setting up a complex Arr stack with linked instances have also been fixed: Partially fix an issue where attributes of the integer enumeration type ( BaseIntEnum ) were not properly handled, resulting in strange logging and potentially validation errors. Since it is not feasible to fully resolve the issue, the BaseIntEnum type is now deprecated, and scheduled to be removed in Buildarr v0.5.0. Allow the default instance of an application plugin (a configuration specified without using instances: ) to be referenced in instance links, by specifying the reserved default instance name. A validation check has been added to disallow the user from defining an instance-specific configuration named default , as that is now (and always has been) a reserved name with respect to instance names in Buildarr. Fix an issue where some non-empty data structure types were not evaluated properly when reading the active configuration of a remote instance, resulting in a Buildarr internal error. Added # Add Buildarr run stage for initialising new instances ( #99 ) Add generic configuration rendering stage ( #101 ) Add resource deletion stage after configuration updates ( #102 ) Changed # Deprecate BaseIntEnum ( #95 ) Allow the default instance to be used in instance links ( #98 ) Update development dependencies ( #103 ) Fix default config attribute decoder type discovery ( #105 ) Delete resources using the reverse execution order ( #106 ) v0.4.1 - 2023-04-09 # This is a backwards-compatible feature and bugfix release that resolves some issues when running Buildarr in a Docker container, and other small bugs. A bug was fixed where Buildarr would not always detect configuration file changes in the Docker environment, particularly if run in Docker Desktop or Docker on WSL2. The default settings for the YAML encoder for configurations were adjusted, changing the configuration attribute order to be closer to the intended order, and making automatically generated configuration easier to read. The documentation has been updated to note the release of the Prowlarr plugin for Buildarr , and the installation instructions for the Docker image have been extended to reflect changes in the way the Docker container can be used. The plugin API has been extended to add a hook for overriding the function that Buildarr uses to compare local and remote configuration attribute values, for when custom code for that is required. Added # Add overriding the value compare function to remote maps ( #84 ) Changed # Fix config file monitoring in the Docker container ( #82 ) Fix mistakes in error messages ( #85 ) Update Buildarr docs ( #87 ) Improve built-in YAML encoding ( #88 ) v0.4.0 - 2023-03-31 # This is a semi backwards-incompatible feature and bugfix release that undertakes large refactors to move Buildarr closer to the final form it will take for stable release. As major strides have been taken to stabilise the plugin API, the Sonarr plugin for Buildarr has been forked into a separate package, buildarr-sonarr . From this version onwards, Buildarr no longer bundles application plugins. The Docker container still bundles the Sonarr plugin for ease of use, but when upgrading an existing standalone installation of Buildarr, the Sonarr plugin package will need to be installed using pip . $ pip install buildarr-sonarr This will allow the Sonarr plugin to deliver releases independently of the base Buildarr package, allowing for more rapid releases of both packages, while ensuring compability between Buildarr and its plugins through plugin version pinning of the Buildarr base package. Buildarr uses semantic versioning . While Buildarr is in beta, point releases (e.g. 0.x.0 ) signify there may be a breaking change to the plugin API, which plugins should accommodate with corresponding changes and adjustment of their dependency requirements. After Buildarr releases its first stable version ( v1.0.0 ), major version increases (e.g. v2.0.0 ) will be used for backward-incompatible releases, while point releases (e.g. v1.x.0 ) will be made for backward-compatible feature releases. A number of other features and bugfixes have been added in this release: Add support for dry runs in Buildarr ad-hoc runs, for testing configuration changes against live instances without modifying them Add configuration validity testing using the buildarr test-config command Add support for overriding the secrets file path using the --secrets-file option Add automatic generation of Docker Compose files from Buildarr configuration files using the buildarr compose command Improve configuration parsing so that local relative paths read by Buildarr are resolved relative to the parent directory of the file the attribute was read from, rather than the current directory of the Buildarr process Improve validation to output easier-to-read error messages in some cases Improve logging so that it is clearer what source file the log message came from, and what plugin and instance name the message relates to Relax Buildarr base package dependency version requirements, for improved compatibility with external plugins Added # Add the --dry-run option to buildarr run ( #56 ) Add instance-specific configs to global state and fix Sonarr dry-run bug ( #59 ) Add the buildarr test-config command ( #60 ) Add --secrets-file option to daemon and run modes ( #67 ) Add the buildarr compose command ( #73 ) Reintroduce buildarr.__version__ and use it internally ( #75 ) Add version attribute to plugin metadata object ( #78 ) Changed # Convert most root validators to attribute-specific validators ( #54 ) Remove unused code and fix pre-commit job ( #58 ) Enable validating default config/secrets attribute values ( #63 ) Reduce usage of initialize.js endpoints ( #66 ) Refactor logging infrastructure ( #68 ) Relax dependency version requirements ( #69 ) Improve and add missing docs for new features ( #70 ) Evaluate local paths relative to the config file ( #71 ) Add temporary ignore for watchdog.Observer type hint ( #72 ) Fork the Sonarr plugin into its own package ( #76 ) v0.3.0 - 2023-03-15 # This is a feature and bugfix release that extends the groundwork laid in the previous version for making Buildarr more usable, and future-proof for the planned new plugins. A major bug where running Buildarr when secrets.json does not exist would result in an error, even if valid instance credentials were found, has been fixed. This would have prevented many people from trying out Buildarr, and for this I would like to apologise. In the future automated unit tests are planned, and major refactors of the Buildarr codebase are now less likely to happen as a result of development, so bugs like this should not happen as often in the future. The major new feature this release introduces is instance linking: the ability to define relationships between two instances. Most of the work went into the internal implementation to make it possible to use in plugins, but one use case within the Sonarr plugin itself is now supported: Sonarr instances using another Sonarr instance as an import list, via the new instance_name attribute. When using this attribute, Buildarr will automatically fill in the API key attribute so you don't have to, and instead of using IDs to reference quality profiles/language profiles/tags in the source instance, names can now be used: sonarr : instances : sonarr-hd : hostname : \"localhost\" port : 8989 sonarr-4k : hostname : \"localhost\" port : 8990 settings : import_lists : definitions : Sonarr (HD) : type : \"sonarr\" # Global import list options. root_folder : \"/path/to/videos\" quality_profile : \"4K\" language_profile : \"English\" # Sonarr import list-specific options. full_url : \"http://sonarr:8989\" instance_name : \"sonarr-hd\" source_quality_profiles : - \"HD/SD\" source_language_profiles : - \"English\" source_tags : - \"shows\" When instance links are made, Buildarr automatically adjusts the order of execution such that the target instance is always processed before the instance linking to the target. This ensures the state of the target instance is consistent when they are both updated to establish the link. A number of other improvements and bugfixes were made, such as: Fix configuration validation to allow local and non-qualified domains on all URL-type attributes (fixes localhost API URL references) Rename the following Sonarr import list attributes (and retain the old names as aliases to ensure backwards compatibility): source_quality_profile_ids renamed to source_quality_profiles source_language_profile_ids renamed to source_language_profiles source_tag_ids renamed to source_tags Fix reading the $BUILDARR_LOG_LEVEL environment variable to be case-insensitive Clean up runtime state after individual update runs in daemon mode, to ensure no state leakage into subsequent runs Add a new buildarr.request_timeout configuration attribute for adjusting API request timeouts (the default is 30 seconds) Improve Sonarr quality definition min and max validation so that 400 is also a valid value for max , and enforce min - max value difference constraints Major internal code refactor through the introduction of Ruff to the development pipeline, fixing a large number of minor code quality issues Changed # Fix fetching new instance secrets ( #44 ) Accept local and non-qualified domain names in URLs ( #46 ) Add instance referencing and dependency resolution ( #47 ) Replace isort and Flake8 with Ruff and reformat source files ( #49 ) v0.2.0 - 2023-02-23 # This is a feature release that comprehensively refactors the internal structure of Buildarr and the plugin API, and introduces a new, formally defined global state architecture that Buildarr and plugins can utilise. These changes improve maintainability of the codebase, allow for more accurate type validation of global state objects, make the plugin API easier to understand for developers, and pave the way for planned new features such as configuring instance-to-instance links within Buildarr. This release also introduces connection testing of cached and auto-retrieved instance secrets, to ensure Buildarr can communicate and authenticate with instances before it tries to update them. A handful of bugs were fixed, including but not limited to: Work around a parsing bug in Pydantic that causes Buildarr to error out when specifying Sonarr instance API keys in the Buildarr configuration More accurate resource type detection eliminating the chance of parsing errors for Sonarr import list, indexer, download client and connection definitions Set better constraints on some Sonarr configuration attributes: To handle suboptimal configuration (e.g. ignore duplicate elements) To reject invalid configuration (e.g. require at least one recipient e-mail address on Mailgun and Sendgrid connection types) Added # Implement testing of cached and fetched instance secrets ( #32 ) Refactor the internals of Buildarr to improve maintainability ( #30 ) Changed # Convert Password and SonarrApiKey to subclasses of SecretStr ( #34 ) Fix CLI exception class inheritance ( #35 ) Use discriminated unions to accurately determine resource type ( #36 ) Change log types of some TRaSH logs to INFO ( #37 ) Set better constraints on Sonarr configuration attributes ( #38 ) v0.1.2 - 2023-02-20 # This is a bugfix release that fixes updates of certain types of Sonarr instance configuration, improving usability of the Sonarr plugin. The following types of Sonarr instance configuration have had bugfixes and improvements made, and are confirmed to work without errors: Media Management Ensure that minimum_free_space is set to a minimum of 100 MB Fix unmonitor_deleted_episodes so that it is now checked and updated by Buildarr Add a delete_unmanaged_root_folders option to allow Buildarr to delete undefined root folders (disabled by default) Improve other configuration constraints so that it more closely matches Sonarr Fix a minor logging bug in root folder updates Profiles Quality Profiles / Language Profiles Improve attribute constraints e.g. ensure duplicate quality values cannot be defined, enforce upgrade_until being required when allow_upgrades is True Fix conversion between Buildarr and Sonarr configuration state so that no errors occur when upgrades are disabled Internal refactor to make the code easier to understand Delay Profiles - Confirmed to work properly as of v0.1.1 (and likely v0.1.0 ) Release Profiles Fix bug introduced in v0.1.1 where internal validation is not done on release profiles downloaded from TRaSH-Guides, resulting in preferred word lists being updated on each run, and potential errors not being caught if there are invalid values in the profile Internal refactor to simplify implementation Quality Fix bug introduced in v0.1.1 where internal validation is not done on quality profiles downloaded from TRaSH-Guides, resulting in potential errors not being caught if there are invalid values in the profile Metadata - Confirmed to work properly as of v0.1.1 (and likely v0.1.0 ) Small logging bug fixed where it was ambiguous which metadata type was being modified on update Tags - Confirmed to work properly as of v0.1.1 (and likely v0.1.0 ) General Improve behaviour when setting an authentication username and password so that configuration updates are idempotent when authentication is disabled Fix setting a proxy password Fix setting backup intervals and retentions so that it is no longer possible to set a value not supported by Sonarr Incorrect syntax in some examples in the documentation were also found and fixed. Added # Added the sonarr.settings.media_management.delete_unmanaged_root_folders configuration attribute ( #24 ) Changed # Improve and fix Sonarr general settings configuration updates ( #19 ) Fix Sonarr UI settings updates ( #20 ) Fix small bug Sonarr metadata definition update logging ( #21 ) Improve Sonarr quality profile definition parsing ( #22 ) Make improvements and bug fixes to quality/language/release profile and quality definition parsing ( #23 ) Fix Sonarr media management settings and improve root folder handling ( #24 ) v0.1.1 - 2023-02-19 # This is a support release that fixes quality definition and backup configuration updates on remote Sonarr instances. A new Dummy plugin is now included with Buildarr, used for testing Buildarr and its plugin API, and also serves as a reference implementation for plugin developers. Other behind-the-scenes improvements include a refactor of the plugin API to allow for accurate type hints for configuration objects in secrets metadata classes (and vice versa), and numerous updates to the documentation to correct errors and add more detail. Added # Add a GitHub Action to push releases to PyPI ( #11 ) Create a buildarr-dummy plugin for testing the Buildarr plugin API ( #12 ) Changed # Fix $PUID and $GUID declarations ( b5110f3 ) Fix Docker Hub link ( be0ba12 ) Fix Docker volume mount docs ( fe328aa ) Fix troubleshooting Buildarr run docs ( e3b8833 ) Update dependency versions ( 3c19ede ) Fix debug Docker command in the GitHub Pages site ( 1e17741 ) Disable automatic dependency version updates ( c5c61cd ) Add missing download client documentation ( d07936f ) Fix incorrect config value definition in docs ( d1807a0 ) Fix to-do list indenting ( bca56e5 ) Add a link to the configuration documentation in README.md ( a5c0e6d ) Clean up and update Sonarr plugin internals ( #14 ) Fix updates to Sonarr quality definitions ( #15 ) Fix updates to Sonarr backup general settings ( #16 ) Removed # Removed buildarr.__version__ (please use importlib.metadata instead) v0.1.0 - 2023-02-11 # Release the initial version of Buildarr (v0.1.0).","title":"Buildarr Core"},{"location":"release-notes/#release-notes-buildarr-core","text":"","title":"Release Notes (Buildarr Core)"},{"location":"release-notes/#v061-2023-09-11","text":"This is a backwards-compatible feature release that adds built-in support for parsing, decoding and encoding email attribute types that include a name (e.g. Example Admin <admin@example.com> ). Some plugins use this attribute type ( NameEmail in Pydantic) without explicitly defining parameters for parsing it, so this adds sane defaults for that attribute type to ensure parsing works appropriately. This will not be done for every possible type, but this application is generic and common enough that it is advantageous to build it into the core Buildarr application.","title":"v0.6.1 - 2023-09-11"},{"location":"release-notes/#added","text":"Add built-in support for handling NameEmail attribute types ( #138 )","title":"Added"},{"location":"release-notes/#v060-2023-09-02","text":"This is a backwards-compatible feature and bugfix release. The main addition is a new run stage for Buildarr plugins: post-initialisation rendering. This is similar to the existing (henceforth called pre-initialisation) rendering stage, but runs after the instance initialisation stage. This allows it to expose the instance secrets, giving the plugin access to the remote instance while rendering the configuration. This can be useful for things such as resolving select option names from names via the API schema, which is sometimes used when rendering TRaSH-Guides metadata. The new stage is used in the upcoming Radarr plugin for Buildarr. The following issues have also been resolved: Buildarr daemon stopped watching configuration file changes, if an unexpected error occurred while performing the initial run following reloading the configuration files.","title":"v0.6.0 - 2023-09-02"},{"location":"release-notes/#added_1","text":"Add post-initialisation rendering step ( #126 )","title":"Added"},{"location":"release-notes/#changed","text":"Detect plugins that do not use config rendering ( #116 ) Fix running plugins that do not perform config rendering ( #132 ) Improve daemon reloading ( #131 )","title":"Changed"},{"location":"release-notes/#v050-2023-04-16","text":"This is a backwards-incompatible feature release. The main changes are behind-the-scenes improvements to the plugin API. Plugins will need to be updated to support this new version. Due to requiring more work than anticipated to keep working, the deprecated --dry-run option has been removed from the buildarr run command. If you require more testing for your configuration than buildarr test-config does, it is recommended to create a staging environment for your Arr stack, and test configuration changes against that. The following issues have also been addressed: Added a new request_timeout global state attribute, which provides a valid value even when the Buildarr configuration is not loaded (e.g. plugin-specific ad-hoc commands). This allows plugins to fix an issue where when dumping instance configurations, they were trying to access the corresponding attribute in the Buildarr config, which isn't loaded for that command.","title":"v0.5.0 - 2023-04-16"},{"location":"release-notes/#added_2","text":"Add request_timeout global state attribute ( #114 )","title":"Added"},{"location":"release-notes/#changed_1","text":"Set validate_assignment to True by default for config models ( #115 ) Change ConfigBase.uses_trash_metadata to a function ( #116 )","title":"Changed"},{"location":"release-notes/#removed","text":"Remove deprecated features for Buildarr v0.5.0 ( #112 ) Remove the deprecated ad-hoc run --dry-run option ( #113 )","title":"Removed"},{"location":"release-notes/#v042-2023-04-14","text":"This is a backwards-compatible feature and bugfix release. This release mainly introduces new behind-the-scenes plugin API functionality to accommodate for new Buildarr plugins currently in development. Add a new generic rendering stage to Buildarr runs for populating dynamic configuration attributes (e.g. TRaSH-Guides metadata), that is not specific to TRaSH-Guides metadata. The current TRaSH-Guides metadata rendering function is now deprecated, and scheduled to be removed in Buildarr v0.5.0. Add a new stage to Buildarr runs for initialising new instances (e.g. with admin credentials or environment settings), that runs after rendering dynamic configuration attributes, but before secrets or remote configuration fetching takes place. This is intended to be used if an application requires initialising before the main API can be used by Buildarr, even before secrets metadata can be checked/fetched. Add a new stage to Buildarr runs for deleting resources from the remote instance if they are not managed by Buildarr or unused, and deletion is allowed in the configuration. This runs after the main configuration update stage, and improves stability of resource deletions by performing them in the reverse instance dependency order, ensuring resources that require resources on another instance are removed first. Any plugins that perform resource deletions are expected to move this functionality to this new Buildarr run stage. Some bugs that are likely to be encountered when setting up a complex Arr stack with linked instances have also been fixed: Partially fix an issue where attributes of the integer enumeration type ( BaseIntEnum ) were not properly handled, resulting in strange logging and potentially validation errors. Since it is not feasible to fully resolve the issue, the BaseIntEnum type is now deprecated, and scheduled to be removed in Buildarr v0.5.0. Allow the default instance of an application plugin (a configuration specified without using instances: ) to be referenced in instance links, by specifying the reserved default instance name. A validation check has been added to disallow the user from defining an instance-specific configuration named default , as that is now (and always has been) a reserved name with respect to instance names in Buildarr. Fix an issue where some non-empty data structure types were not evaluated properly when reading the active configuration of a remote instance, resulting in a Buildarr internal error.","title":"v0.4.2 - 2023-04-14"},{"location":"release-notes/#added_3","text":"Add Buildarr run stage for initialising new instances ( #99 ) Add generic configuration rendering stage ( #101 ) Add resource deletion stage after configuration updates ( #102 )","title":"Added"},{"location":"release-notes/#changed_2","text":"Deprecate BaseIntEnum ( #95 ) Allow the default instance to be used in instance links ( #98 ) Update development dependencies ( #103 ) Fix default config attribute decoder type discovery ( #105 ) Delete resources using the reverse execution order ( #106 )","title":"Changed"},{"location":"release-notes/#v041-2023-04-09","text":"This is a backwards-compatible feature and bugfix release that resolves some issues when running Buildarr in a Docker container, and other small bugs. A bug was fixed where Buildarr would not always detect configuration file changes in the Docker environment, particularly if run in Docker Desktop or Docker on WSL2. The default settings for the YAML encoder for configurations were adjusted, changing the configuration attribute order to be closer to the intended order, and making automatically generated configuration easier to read. The documentation has been updated to note the release of the Prowlarr plugin for Buildarr , and the installation instructions for the Docker image have been extended to reflect changes in the way the Docker container can be used. The plugin API has been extended to add a hook for overriding the function that Buildarr uses to compare local and remote configuration attribute values, for when custom code for that is required.","title":"v0.4.1 - 2023-04-09"},{"location":"release-notes/#added_4","text":"Add overriding the value compare function to remote maps ( #84 )","title":"Added"},{"location":"release-notes/#changed_3","text":"Fix config file monitoring in the Docker container ( #82 ) Fix mistakes in error messages ( #85 ) Update Buildarr docs ( #87 ) Improve built-in YAML encoding ( #88 )","title":"Changed"},{"location":"release-notes/#v040-2023-03-31","text":"This is a semi backwards-incompatible feature and bugfix release that undertakes large refactors to move Buildarr closer to the final form it will take for stable release. As major strides have been taken to stabilise the plugin API, the Sonarr plugin for Buildarr has been forked into a separate package, buildarr-sonarr . From this version onwards, Buildarr no longer bundles application plugins. The Docker container still bundles the Sonarr plugin for ease of use, but when upgrading an existing standalone installation of Buildarr, the Sonarr plugin package will need to be installed using pip . $ pip install buildarr-sonarr This will allow the Sonarr plugin to deliver releases independently of the base Buildarr package, allowing for more rapid releases of both packages, while ensuring compability between Buildarr and its plugins through plugin version pinning of the Buildarr base package. Buildarr uses semantic versioning . While Buildarr is in beta, point releases (e.g. 0.x.0 ) signify there may be a breaking change to the plugin API, which plugins should accommodate with corresponding changes and adjustment of their dependency requirements. After Buildarr releases its first stable version ( v1.0.0 ), major version increases (e.g. v2.0.0 ) will be used for backward-incompatible releases, while point releases (e.g. v1.x.0 ) will be made for backward-compatible feature releases. A number of other features and bugfixes have been added in this release: Add support for dry runs in Buildarr ad-hoc runs, for testing configuration changes against live instances without modifying them Add configuration validity testing using the buildarr test-config command Add support for overriding the secrets file path using the --secrets-file option Add automatic generation of Docker Compose files from Buildarr configuration files using the buildarr compose command Improve configuration parsing so that local relative paths read by Buildarr are resolved relative to the parent directory of the file the attribute was read from, rather than the current directory of the Buildarr process Improve validation to output easier-to-read error messages in some cases Improve logging so that it is clearer what source file the log message came from, and what plugin and instance name the message relates to Relax Buildarr base package dependency version requirements, for improved compatibility with external plugins","title":"v0.4.0 - 2023-03-31"},{"location":"release-notes/#added_5","text":"Add the --dry-run option to buildarr run ( #56 ) Add instance-specific configs to global state and fix Sonarr dry-run bug ( #59 ) Add the buildarr test-config command ( #60 ) Add --secrets-file option to daemon and run modes ( #67 ) Add the buildarr compose command ( #73 ) Reintroduce buildarr.__version__ and use it internally ( #75 ) Add version attribute to plugin metadata object ( #78 )","title":"Added"},{"location":"release-notes/#changed_4","text":"Convert most root validators to attribute-specific validators ( #54 ) Remove unused code and fix pre-commit job ( #58 ) Enable validating default config/secrets attribute values ( #63 ) Reduce usage of initialize.js endpoints ( #66 ) Refactor logging infrastructure ( #68 ) Relax dependency version requirements ( #69 ) Improve and add missing docs for new features ( #70 ) Evaluate local paths relative to the config file ( #71 ) Add temporary ignore for watchdog.Observer type hint ( #72 ) Fork the Sonarr plugin into its own package ( #76 )","title":"Changed"},{"location":"release-notes/#v030-2023-03-15","text":"This is a feature and bugfix release that extends the groundwork laid in the previous version for making Buildarr more usable, and future-proof for the planned new plugins. A major bug where running Buildarr when secrets.json does not exist would result in an error, even if valid instance credentials were found, has been fixed. This would have prevented many people from trying out Buildarr, and for this I would like to apologise. In the future automated unit tests are planned, and major refactors of the Buildarr codebase are now less likely to happen as a result of development, so bugs like this should not happen as often in the future. The major new feature this release introduces is instance linking: the ability to define relationships between two instances. Most of the work went into the internal implementation to make it possible to use in plugins, but one use case within the Sonarr plugin itself is now supported: Sonarr instances using another Sonarr instance as an import list, via the new instance_name attribute. When using this attribute, Buildarr will automatically fill in the API key attribute so you don't have to, and instead of using IDs to reference quality profiles/language profiles/tags in the source instance, names can now be used: sonarr : instances : sonarr-hd : hostname : \"localhost\" port : 8989 sonarr-4k : hostname : \"localhost\" port : 8990 settings : import_lists : definitions : Sonarr (HD) : type : \"sonarr\" # Global import list options. root_folder : \"/path/to/videos\" quality_profile : \"4K\" language_profile : \"English\" # Sonarr import list-specific options. full_url : \"http://sonarr:8989\" instance_name : \"sonarr-hd\" source_quality_profiles : - \"HD/SD\" source_language_profiles : - \"English\" source_tags : - \"shows\" When instance links are made, Buildarr automatically adjusts the order of execution such that the target instance is always processed before the instance linking to the target. This ensures the state of the target instance is consistent when they are both updated to establish the link. A number of other improvements and bugfixes were made, such as: Fix configuration validation to allow local and non-qualified domains on all URL-type attributes (fixes localhost API URL references) Rename the following Sonarr import list attributes (and retain the old names as aliases to ensure backwards compatibility): source_quality_profile_ids renamed to source_quality_profiles source_language_profile_ids renamed to source_language_profiles source_tag_ids renamed to source_tags Fix reading the $BUILDARR_LOG_LEVEL environment variable to be case-insensitive Clean up runtime state after individual update runs in daemon mode, to ensure no state leakage into subsequent runs Add a new buildarr.request_timeout configuration attribute for adjusting API request timeouts (the default is 30 seconds) Improve Sonarr quality definition min and max validation so that 400 is also a valid value for max , and enforce min - max value difference constraints Major internal code refactor through the introduction of Ruff to the development pipeline, fixing a large number of minor code quality issues","title":"v0.3.0 - 2023-03-15"},{"location":"release-notes/#changed_5","text":"Fix fetching new instance secrets ( #44 ) Accept local and non-qualified domain names in URLs ( #46 ) Add instance referencing and dependency resolution ( #47 ) Replace isort and Flake8 with Ruff and reformat source files ( #49 )","title":"Changed"},{"location":"release-notes/#v020-2023-02-23","text":"This is a feature release that comprehensively refactors the internal structure of Buildarr and the plugin API, and introduces a new, formally defined global state architecture that Buildarr and plugins can utilise. These changes improve maintainability of the codebase, allow for more accurate type validation of global state objects, make the plugin API easier to understand for developers, and pave the way for planned new features such as configuring instance-to-instance links within Buildarr. This release also introduces connection testing of cached and auto-retrieved instance secrets, to ensure Buildarr can communicate and authenticate with instances before it tries to update them. A handful of bugs were fixed, including but not limited to: Work around a parsing bug in Pydantic that causes Buildarr to error out when specifying Sonarr instance API keys in the Buildarr configuration More accurate resource type detection eliminating the chance of parsing errors for Sonarr import list, indexer, download client and connection definitions Set better constraints on some Sonarr configuration attributes: To handle suboptimal configuration (e.g. ignore duplicate elements) To reject invalid configuration (e.g. require at least one recipient e-mail address on Mailgun and Sendgrid connection types)","title":"v0.2.0 - 2023-02-23"},{"location":"release-notes/#added_6","text":"Implement testing of cached and fetched instance secrets ( #32 ) Refactor the internals of Buildarr to improve maintainability ( #30 )","title":"Added"},{"location":"release-notes/#changed_6","text":"Convert Password and SonarrApiKey to subclasses of SecretStr ( #34 ) Fix CLI exception class inheritance ( #35 ) Use discriminated unions to accurately determine resource type ( #36 ) Change log types of some TRaSH logs to INFO ( #37 ) Set better constraints on Sonarr configuration attributes ( #38 )","title":"Changed"},{"location":"release-notes/#v012-2023-02-20","text":"This is a bugfix release that fixes updates of certain types of Sonarr instance configuration, improving usability of the Sonarr plugin. The following types of Sonarr instance configuration have had bugfixes and improvements made, and are confirmed to work without errors: Media Management Ensure that minimum_free_space is set to a minimum of 100 MB Fix unmonitor_deleted_episodes so that it is now checked and updated by Buildarr Add a delete_unmanaged_root_folders option to allow Buildarr to delete undefined root folders (disabled by default) Improve other configuration constraints so that it more closely matches Sonarr Fix a minor logging bug in root folder updates Profiles Quality Profiles / Language Profiles Improve attribute constraints e.g. ensure duplicate quality values cannot be defined, enforce upgrade_until being required when allow_upgrades is True Fix conversion between Buildarr and Sonarr configuration state so that no errors occur when upgrades are disabled Internal refactor to make the code easier to understand Delay Profiles - Confirmed to work properly as of v0.1.1 (and likely v0.1.0 ) Release Profiles Fix bug introduced in v0.1.1 where internal validation is not done on release profiles downloaded from TRaSH-Guides, resulting in preferred word lists being updated on each run, and potential errors not being caught if there are invalid values in the profile Internal refactor to simplify implementation Quality Fix bug introduced in v0.1.1 where internal validation is not done on quality profiles downloaded from TRaSH-Guides, resulting in potential errors not being caught if there are invalid values in the profile Metadata - Confirmed to work properly as of v0.1.1 (and likely v0.1.0 ) Small logging bug fixed where it was ambiguous which metadata type was being modified on update Tags - Confirmed to work properly as of v0.1.1 (and likely v0.1.0 ) General Improve behaviour when setting an authentication username and password so that configuration updates are idempotent when authentication is disabled Fix setting a proxy password Fix setting backup intervals and retentions so that it is no longer possible to set a value not supported by Sonarr Incorrect syntax in some examples in the documentation were also found and fixed.","title":"v0.1.2 - 2023-02-20"},{"location":"release-notes/#added_7","text":"Added the sonarr.settings.media_management.delete_unmanaged_root_folders configuration attribute ( #24 )","title":"Added"},{"location":"release-notes/#changed_7","text":"Improve and fix Sonarr general settings configuration updates ( #19 ) Fix Sonarr UI settings updates ( #20 ) Fix small bug Sonarr metadata definition update logging ( #21 ) Improve Sonarr quality profile definition parsing ( #22 ) Make improvements and bug fixes to quality/language/release profile and quality definition parsing ( #23 ) Fix Sonarr media management settings and improve root folder handling ( #24 )","title":"Changed"},{"location":"release-notes/#v011-2023-02-19","text":"This is a support release that fixes quality definition and backup configuration updates on remote Sonarr instances. A new Dummy plugin is now included with Buildarr, used for testing Buildarr and its plugin API, and also serves as a reference implementation for plugin developers. Other behind-the-scenes improvements include a refactor of the plugin API to allow for accurate type hints for configuration objects in secrets metadata classes (and vice versa), and numerous updates to the documentation to correct errors and add more detail.","title":"v0.1.1 - 2023-02-19"},{"location":"release-notes/#added_8","text":"Add a GitHub Action to push releases to PyPI ( #11 ) Create a buildarr-dummy plugin for testing the Buildarr plugin API ( #12 )","title":"Added"},{"location":"release-notes/#changed_8","text":"Fix $PUID and $GUID declarations ( b5110f3 ) Fix Docker Hub link ( be0ba12 ) Fix Docker volume mount docs ( fe328aa ) Fix troubleshooting Buildarr run docs ( e3b8833 ) Update dependency versions ( 3c19ede ) Fix debug Docker command in the GitHub Pages site ( 1e17741 ) Disable automatic dependency version updates ( c5c61cd ) Add missing download client documentation ( d07936f ) Fix incorrect config value definition in docs ( d1807a0 ) Fix to-do list indenting ( bca56e5 ) Add a link to the configuration documentation in README.md ( a5c0e6d ) Clean up and update Sonarr plugin internals ( #14 ) Fix updates to Sonarr quality definitions ( #15 ) Fix updates to Sonarr backup general settings ( #16 )","title":"Changed"},{"location":"release-notes/#removed_1","text":"Removed buildarr.__version__ (please use importlib.metadata instead)","title":"Removed"},{"location":"release-notes/#v010-2023-02-11","text":"Release the initial version of Buildarr (v0.1.0).","title":"v0.1.0 - 2023-02-11"},{"location":"usage/","text":"Using Buildarr # Apart from the configuration, most of the interactions with Buildarr are done via the command line. The following commands are available for Buildarr: buildarr run - Manually perform an update run on one or more instances and exit buildarr daemon - Run Buildarr forever: perform an initial update run, and then schedule periodic updates buildarr test-config - Test a configuration file for correctness ( New in version 0.4.0 ) buildarr compose - Generate a Docker Compose file from Buildarr configuration ( New in version 0.4.0 ) buildarr <plugin-name> <command...> - Ad-hoc commands defined by any loaded plugins Note Every time Buildarr performs an update run, a file named secrets.json is created in the folder the configuration file is located. This file caches secrets metadata for every configured instance. Ensure that the Buildarr configuration is located in a folder that is not world-viewable, to avoid exposing secrets. If you are using Docker, ensure that the folder mounted as /config into the container has appropriately secure permissions. The location of secrets.json can be configured using the --secrets-file command line option, or the buildarr.secrets_file_path attribute in the configuration file. The verbosity of Buildarr logging output can be adjusted using the --log-level option. This option can also be set using the $BUILDARR_LOG_LEVEL environment variable. For more interactive documentation, you can pass --help to any individual command. $ buildarr --help Usage: buildarr [OPTIONS] COMMAND [ARGS]... Construct and configure Arr PVR stacks. Can be run as a daemon or as an ad-hoc command. Supports external plugins to allow for adding support for multiple types of instances. Options: -l, --log-level [ERROR|WARNING|INFO|DEBUG] Buildarr logging system log level. Can also be set using the `$BUILDARR_LOG_LEVEL' environment variable. [default: INFO] --help Show this message and exit. Commands: daemon Run as a daemon and periodically update defined instances. run Update configured instances, and exit. sonarr Sonarr instance ad-hoc commands. test-config Test a Buildarr configuration file for correctness. Manual runs # Buildarr is capable of executing individual update runs, optionally passing an arbitrary configuration file to parse. This is useful to test configuration files before formally deploying Buildarr. $ buildarr run [ /path/to/config.yml ] If using Docker, the command would look something like this: $ docker run --rm -v /path/to/config:/config -e PUID = <PUID> -e PGID = <PGID> callum027/buildarr:latest run [ /config/buildarr.yml ] Executing buildarr run will result in something resembling the following output. $ buildarr run 2023-03-29 20:39:50,856 buildarr:1 buildarr.cli.run [INFO] Buildarr version 0.4.0 (log level: INFO) 2023-03-29 20:39:50,856 buildarr:1 buildarr.cli.run [INFO] Loading configuration file '/config/buildarr.yml' 2023-03-29 20:39:50,872 buildarr:1 buildarr.cli.run [INFO] Finished loading configuration file 2023-03-29 20:39:50,874 buildarr:1 buildarr.cli.run [INFO] Loaded plugins: sonarr (0.4.0) 2023-03-29 20:39:50,875 buildarr:1 buildarr.cli.run [INFO] Loading instance configurations 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Finished loading instance configurations 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Running with plugins: sonarr 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Resolving instance dependencies 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Finished resolving instance dependencies 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Loading secrets file from '/config/secrets.json' 2023-03-29 20:39:50,886 buildarr:1 buildarr.cli.run [INFO] Finished loading secrets file 2023-03-29 20:39:50,886 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Checking secrets 2023-03-29 20:39:50,912 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Connection test successful using cached secrets 2023-03-29 20:39:50,912 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished checking secrets 2023-03-29 20:39:50,912 buildarr:1 buildarr.cli.run [INFO] Saving updated secrets file to '/config/secrets.json' 2023-03-29 20:39:50,914 buildarr:1 buildarr.cli.run [INFO] Finished saving updated secrets file 2023-03-29 20:39:50,914 buildarr:1 buildarr.cli.run [INFO] Updating configuration on remote instances 2023-03-29 20:39:50,914 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Getting remote configuration 2023-03-29 20:39:51,406 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished getting remote configuration 2023-03-29 20:39:51,463 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Updating remote configuration 2023-03-29 20:39:51,927 buildarr:1 buildarr.config.base [INFO] <sonarr> (default) sonarr.settings.general.host.instance_name: 'Sonarr' -> 'Sonarr (Buildarr Example)' 2023-03-29 20:39:52,019 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Remote configuration successfully updated 2023-03-29 20:39:52,019 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished updating remote configuration 2023-03-29 20:39:52,019 buildarr:1 buildarr.cli.run [INFO] Finished updating configuration on remote instances Of note in particular is the following line: 2023-03-29 20:39:51,927 buildarr:1 buildarr.config.base [INFO] <sonarr> (default) sonarr.settings.general.host.instance_name: 'Sonarr' -> 'Sonarr (Buildarr Example)' When Buildarr detects that the remote configuration differs from the locally defined configuration, the remote configuration will be updated. In this case, Buildarr detected that on the default instance configured in the Sonarr plugin, the configured GUI instance name is different from the locally defined value, so it updated the Sonarr instance to reflect the change. If the run fails for one reason or another, an error message will be logged and Buildarr will exit with a non-zero status code. Changed in version 0.5.0 : Dry runs have been removed from Buildarr. If testing your configuration does not cover your needs, consider creating a staging environment for your Arr stack, and test changes there before rolling it out to your production stack. As a service (daemon mode) # This is the mode in which that Buildarr is intended to run in most cases. Buildarr will run as a daemon in the foreground. First, an initial update run is performed, similar to buildarr run . If the initial run is successful, Buildarr will then schedule updates to run at specific times according to the configuration, logging when the next scheduled run will occur. This is intended to be used to keep a *Arr stack continually up to date, particularly if it has TRaSH-Guides metadata configured. Every scheduled run, the TRaSH-Guides metadata is updated, ensuring that any instances using it will always be using the most up to date profiles. There are several options for changing how Buildarr daemon runs in the Buildarr configuration . 2023-03-29 20:40:39,958 buildarr:1 buildarr.cli.daemon [INFO] Buildarr version 0.4.0 (log level: INFO) 2023-03-29 20:40:39,958 buildarr:1 buildarr.cli.daemon [INFO] Loading configuration file '/config/buildarr.yml' 2023-03-29 20:40:39,977 buildarr:1 buildarr.cli.daemon [INFO] Finished loading configuration file 2023-03-29 20:40:39,977 buildarr:1 buildarr.cli.daemon [INFO] Daemon configuration: 2023-03-29 20:40:39,978 buildarr:1 buildarr.cli.daemon [INFO] - Watch configuration files: Yes 2023-03-29 20:40:39,978 buildarr:1 buildarr.cli.daemon [INFO] - Configuration files to watch: 2023-03-29 20:40:39,978 buildarr:1 buildarr.cli.daemon [INFO] - /config/buildarr.yml 2023-03-29 20:40:39,978 buildarr:1 buildarr.cli.daemon [INFO] - Update at: 2023-03-29 20:40:39,978 buildarr:1 buildarr.cli.daemon [INFO] - Monday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] - Tuesday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] - Wednesday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] - Thursday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] - Friday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] - Saturday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] - Sunday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] Applying initial configuration 2023-03-29 20:40:39,981 buildarr:1 buildarr.cli.run [INFO] Loaded plugins: sonarr (0.4.0) 2023-03-29 20:40:39,981 buildarr:1 buildarr.cli.run [INFO] Loading instance configurations 2023-03-29 20:40:39,983 buildarr:1 buildarr.cli.run [INFO] Finished loading instance configurations 2023-03-29 20:40:39,983 buildarr:1 buildarr.cli.run [INFO] Running with plugins: sonarr 2023-03-29 20:40:39,983 buildarr:1 buildarr.cli.run [INFO] Resolving instance dependencies 2023-03-29 20:40:39,984 buildarr:1 buildarr.cli.run [INFO] Finished resolving instance dependencies 2023-03-29 20:40:39,984 buildarr:1 buildarr.cli.run [INFO] Loading secrets file from '/config/secrets.json' 2023-03-29 20:40:39,989 buildarr:1 buildarr.cli.run [INFO] Finished loading secrets file 2023-03-29 20:40:39,989 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Checking secrets 2023-03-29 20:40:40,015 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Connection test successful using cached secrets 2023-03-29 20:40:40,015 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished checking secrets 2023-03-29 20:40:40,015 buildarr:1 buildarr.cli.run [INFO] Saving updated secrets file to '/config/secrets.json' 2023-03-29 20:40:40,017 buildarr:1 buildarr.cli.run [INFO] Finished saving updated secrets file 2023-03-29 20:40:40,017 buildarr:1 buildarr.cli.run [INFO] Updating configuration on remote instances 2023-03-29 20:40:40,017 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Getting remote configuration 2023-03-29 20:40:40,599 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished getting remote configuration 2023-03-29 20:40:40,662 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Updating remote configuration 2023-03-29 20:40:41,129 buildarr:1 buildarr.config.base [INFO] <sonarr> (default) sonarr.settings.general.host.instance_name: 'Sonarr' -> 'Sonarr (Buildarr Example)' 2023-03-29 20:40:41,204 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Remote configuration successfully updated 2023-03-29 20:40:41,204 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished updating remote configuration 2023-03-29 20:40:41,205 buildarr:1 buildarr.cli.run [INFO] Finished updating configuration on remote instances 2023-03-29 20:40:41,205 buildarr:1 buildarr.cli.daemon [INFO] Finished applying initial configuration 2023-03-29 20:40:41,205 buildarr:1 buildarr.cli.daemon [INFO] Scheduling update jobs 2023-03-29 20:40:41,206 buildarr:1 buildarr.cli.daemon [INFO] Finished scheduling update jobs 2023-03-29 20:40:41,206 buildarr:1 buildarr.cli.daemon [INFO] The next run will be at 2023-03-30 03:00 2023-03-29 20:40:41,206 buildarr:1 buildarr.cli.daemon [INFO] Setting up config file monitoring 2023-03-29 20:40:41,216 buildarr:1 buildarr.cli.daemon [INFO] Finished setting up config file monitoring 2023-03-29 20:40:41,216 buildarr:1 buildarr.cli.daemon [INFO] Setting up signal handlers 2023-03-29 20:40:41,216 buildarr:1 buildarr.cli.daemon [INFO] Finished setting up signal handlers 2023-03-29 20:40:41,216 buildarr:1 buildarr.cli.daemon [INFO] Buildarr ready. Buildarr daemon supports the following signal types: SIGTERM / SIGINT - Gracefully shutdown the Buildarr daemon. SIGHUP - Reload the Buildarr configuration file and perform an update run (the same action taken as when the watch_config option is enabled and Buildarr detects configuration changes). Not supported on Windows. Testing configuration # New in version 0.4.0. This is a mode for testing whether or not a configuration file is syntactically correct, can be loaded, and contains valid instance-to-instance link references and TRaSH-Guides metadata IDs. This mode is intended for the user to test that a configuration will be loaded properly by Buildarr, before attempting to connect with any remote instances. $ buildarr test-config [ /path/to/config.yml ] If a configuration file is valid, the output from Buildarr will be similar to the following: $ buildarr test-config /config/buildarr.yml 2023-03-19 10:59:27,819 buildarr:1 buildarr.main [INFO] Buildarr version 0.4.0 (log level: INFO) 2023-03-19 10:59:27,820 buildarr:1 buildarr.main [INFO] Plugins loaded: sonarr (0.4.0) 2023-03-19 10:59:27,820 buildarr:1 buildarr.main [INFO] Testing configuration file: /config/buildarr.yml 2023-03-19 10:59:27,947 buildarr:1 buildarr.main [INFO] Loading configuration: PASSED 2023-03-19 10:59:27,947 buildarr:1 buildarr.main [INFO] Loading plugin managers: PASSED 2023-03-19 10:59:27,971 buildarr:1 buildarr.main [INFO] Loading instance configurations: PASSED 2023-03-19 10:59:27,971 buildarr:1 buildarr.main [INFO] Checking configured plugins: PASSED 2023-03-19 10:59:27,971 buildarr:1 buildarr.main [INFO] Resolving instance dependencies: PASSED 2023-03-19 10:59:31,634 buildarr:1 buildarr.main [INFO] Fetching TRaSH-Guides metadata: PASSED 2023-03-19 10:59:31,708 buildarr:1 buildarr.main [INFO] Rendering TRaSH-Guides metadata: PASSED 2023-03-19 10:59:32,053 buildarr:1 buildarr.main [INFO] Configuration test successful. Since Buildarr does not connect to any remote instances in this mode, even if a configuration file passes the tests performed by buildarr test-config , it will not necessarily successfully communicate with them. Generating a Docker Compose file # New in version 0.4.0. This is an ad-hoc command that can be used to automatically generate a Docker Compose file from a given Buildarr configuration file. The generated Docker Compose file is guaranteed to have: Image tags matching the instance versions defined in the Buildarr configuration file Restart policy set on all services Any required volumes created Service dependencies added based on instance-to-instance links present in the Buildarr configuration Buildarr itself added as a service in daemon mode, to deploy instance configurations and keep them up to date The resulting file will be relatively basic and might require some additional changes to suit your environment, but it should provide a good starting point for setting up automatic deployment and configuration of your *Arr stack. Note There are a few additional limitations on the instance configurations, on top of Buildarr's regular constraints: Instance hostnames must not be set to IP addresses. All instances must have unique hostnames, unless the --ignore-hostnames option is set. Given the following example Buildarr configuration file, located at /opt/buildarr/buildarr.yml : --- sonarr : instances : sonarr-hd : {} sonarr-4k : settings : media_management : root_folders : - /tmp/videos profiles : language_profiles : definitions : English : languages : - \"English\" import_lists : definitions : \"Sonarr (HD)\" : type : \"sonarr\" root_folder : \"/tmp/videos\" quality_profile : \"Any\" language_profile : \"English\" full_url : \"http://sonarr-hd:8989\" instance_name : \"sonarr-hd\" We can use the following command to create a corresponding Docker Compose file. $ buildarr compose /opt/buildarr/buildarr.yml > /opt/buildarr/docker-compose.yml The resulting file located at /opt/buildarr/docker-compose.yml will look like this: --- version : '3.7' services : sonarr_sonarr-hd : image : lscr.io/linuxserver/sonarr:latest volumes : sonarr_sonarr-hd : /config hostname : sonarr-hd restart : always sonarr_sonarr-4k : image : lscr.io/linuxserver/sonarr:latest volumes : sonarr_sonarr-4k : /config hostname : sonarr-4k restart : always depends_on : - sonarr_sonarr-hd buildarr : image : callum027/buildarr:0.4.0 command : - daemon - /config/buildarr.yml volumes : - type : bind source : /opt/buildarr target : /config restart : always depends_on : - sonarr_sonarr-hd - sonarr_sonarr-4k volumes : - sonarr_sonarr-4k - sonarr_sonarr-hd Plugin-specific commands # Plugins can implement their own ad-hoc commands. These are mainly used for things such as dumping configuration from running instances. For more information, refer to the user guide for the respective plugin.","title":"Usage"},{"location":"usage/#using-buildarr","text":"Apart from the configuration, most of the interactions with Buildarr are done via the command line. The following commands are available for Buildarr: buildarr run - Manually perform an update run on one or more instances and exit buildarr daemon - Run Buildarr forever: perform an initial update run, and then schedule periodic updates buildarr test-config - Test a configuration file for correctness ( New in version 0.4.0 ) buildarr compose - Generate a Docker Compose file from Buildarr configuration ( New in version 0.4.0 ) buildarr <plugin-name> <command...> - Ad-hoc commands defined by any loaded plugins Note Every time Buildarr performs an update run, a file named secrets.json is created in the folder the configuration file is located. This file caches secrets metadata for every configured instance. Ensure that the Buildarr configuration is located in a folder that is not world-viewable, to avoid exposing secrets. If you are using Docker, ensure that the folder mounted as /config into the container has appropriately secure permissions. The location of secrets.json can be configured using the --secrets-file command line option, or the buildarr.secrets_file_path attribute in the configuration file. The verbosity of Buildarr logging output can be adjusted using the --log-level option. This option can also be set using the $BUILDARR_LOG_LEVEL environment variable. For more interactive documentation, you can pass --help to any individual command. $ buildarr --help Usage: buildarr [OPTIONS] COMMAND [ARGS]... Construct and configure Arr PVR stacks. Can be run as a daemon or as an ad-hoc command. Supports external plugins to allow for adding support for multiple types of instances. Options: -l, --log-level [ERROR|WARNING|INFO|DEBUG] Buildarr logging system log level. Can also be set using the `$BUILDARR_LOG_LEVEL' environment variable. [default: INFO] --help Show this message and exit. Commands: daemon Run as a daemon and periodically update defined instances. run Update configured instances, and exit. sonarr Sonarr instance ad-hoc commands. test-config Test a Buildarr configuration file for correctness.","title":"Using Buildarr"},{"location":"usage/#manual-runs","text":"Buildarr is capable of executing individual update runs, optionally passing an arbitrary configuration file to parse. This is useful to test configuration files before formally deploying Buildarr. $ buildarr run [ /path/to/config.yml ] If using Docker, the command would look something like this: $ docker run --rm -v /path/to/config:/config -e PUID = <PUID> -e PGID = <PGID> callum027/buildarr:latest run [ /config/buildarr.yml ] Executing buildarr run will result in something resembling the following output. $ buildarr run 2023-03-29 20:39:50,856 buildarr:1 buildarr.cli.run [INFO] Buildarr version 0.4.0 (log level: INFO) 2023-03-29 20:39:50,856 buildarr:1 buildarr.cli.run [INFO] Loading configuration file '/config/buildarr.yml' 2023-03-29 20:39:50,872 buildarr:1 buildarr.cli.run [INFO] Finished loading configuration file 2023-03-29 20:39:50,874 buildarr:1 buildarr.cli.run [INFO] Loaded plugins: sonarr (0.4.0) 2023-03-29 20:39:50,875 buildarr:1 buildarr.cli.run [INFO] Loading instance configurations 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Finished loading instance configurations 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Running with plugins: sonarr 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Resolving instance dependencies 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Finished resolving instance dependencies 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Loading secrets file from '/config/secrets.json' 2023-03-29 20:39:50,886 buildarr:1 buildarr.cli.run [INFO] Finished loading secrets file 2023-03-29 20:39:50,886 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Checking secrets 2023-03-29 20:39:50,912 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Connection test successful using cached secrets 2023-03-29 20:39:50,912 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished checking secrets 2023-03-29 20:39:50,912 buildarr:1 buildarr.cli.run [INFO] Saving updated secrets file to '/config/secrets.json' 2023-03-29 20:39:50,914 buildarr:1 buildarr.cli.run [INFO] Finished saving updated secrets file 2023-03-29 20:39:50,914 buildarr:1 buildarr.cli.run [INFO] Updating configuration on remote instances 2023-03-29 20:39:50,914 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Getting remote configuration 2023-03-29 20:39:51,406 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished getting remote configuration 2023-03-29 20:39:51,463 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Updating remote configuration 2023-03-29 20:39:51,927 buildarr:1 buildarr.config.base [INFO] <sonarr> (default) sonarr.settings.general.host.instance_name: 'Sonarr' -> 'Sonarr (Buildarr Example)' 2023-03-29 20:39:52,019 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Remote configuration successfully updated 2023-03-29 20:39:52,019 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished updating remote configuration 2023-03-29 20:39:52,019 buildarr:1 buildarr.cli.run [INFO] Finished updating configuration on remote instances Of note in particular is the following line: 2023-03-29 20:39:51,927 buildarr:1 buildarr.config.base [INFO] <sonarr> (default) sonarr.settings.general.host.instance_name: 'Sonarr' -> 'Sonarr (Buildarr Example)' When Buildarr detects that the remote configuration differs from the locally defined configuration, the remote configuration will be updated. In this case, Buildarr detected that on the default instance configured in the Sonarr plugin, the configured GUI instance name is different from the locally defined value, so it updated the Sonarr instance to reflect the change. If the run fails for one reason or another, an error message will be logged and Buildarr will exit with a non-zero status code. Changed in version 0.5.0 : Dry runs have been removed from Buildarr. If testing your configuration does not cover your needs, consider creating a staging environment for your Arr stack, and test changes there before rolling it out to your production stack.","title":"Manual runs"},{"location":"usage/#as-a-service-daemon-mode","text":"This is the mode in which that Buildarr is intended to run in most cases. Buildarr will run as a daemon in the foreground. First, an initial update run is performed, similar to buildarr run . If the initial run is successful, Buildarr will then schedule updates to run at specific times according to the configuration, logging when the next scheduled run will occur. This is intended to be used to keep a *Arr stack continually up to date, particularly if it has TRaSH-Guides metadata configured. Every scheduled run, the TRaSH-Guides metadata is updated, ensuring that any instances using it will always be using the most up to date profiles. There are several options for changing how Buildarr daemon runs in the Buildarr configuration . 2023-03-29 20:40:39,958 buildarr:1 buildarr.cli.daemon [INFO] Buildarr version 0.4.0 (log level: INFO) 2023-03-29 20:40:39,958 buildarr:1 buildarr.cli.daemon [INFO] Loading configuration file '/config/buildarr.yml' 2023-03-29 20:40:39,977 buildarr:1 buildarr.cli.daemon [INFO] Finished loading configuration file 2023-03-29 20:40:39,977 buildarr:1 buildarr.cli.daemon [INFO] Daemon configuration: 2023-03-29 20:40:39,978 buildarr:1 buildarr.cli.daemon [INFO] - Watch configuration files: Yes 2023-03-29 20:40:39,978 buildarr:1 buildarr.cli.daemon [INFO] - Configuration files to watch: 2023-03-29 20:40:39,978 buildarr:1 buildarr.cli.daemon [INFO] - /config/buildarr.yml 2023-03-29 20:40:39,978 buildarr:1 buildarr.cli.daemon [INFO] - Update at: 2023-03-29 20:40:39,978 buildarr:1 buildarr.cli.daemon [INFO] - Monday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] - Tuesday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] - Wednesday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] - Thursday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] - Friday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] - Saturday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] - Sunday 03:00 2023-03-29 20:40:39,979 buildarr:1 buildarr.cli.daemon [INFO] Applying initial configuration 2023-03-29 20:40:39,981 buildarr:1 buildarr.cli.run [INFO] Loaded plugins: sonarr (0.4.0) 2023-03-29 20:40:39,981 buildarr:1 buildarr.cli.run [INFO] Loading instance configurations 2023-03-29 20:40:39,983 buildarr:1 buildarr.cli.run [INFO] Finished loading instance configurations 2023-03-29 20:40:39,983 buildarr:1 buildarr.cli.run [INFO] Running with plugins: sonarr 2023-03-29 20:40:39,983 buildarr:1 buildarr.cli.run [INFO] Resolving instance dependencies 2023-03-29 20:40:39,984 buildarr:1 buildarr.cli.run [INFO] Finished resolving instance dependencies 2023-03-29 20:40:39,984 buildarr:1 buildarr.cli.run [INFO] Loading secrets file from '/config/secrets.json' 2023-03-29 20:40:39,989 buildarr:1 buildarr.cli.run [INFO] Finished loading secrets file 2023-03-29 20:40:39,989 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Checking secrets 2023-03-29 20:40:40,015 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Connection test successful using cached secrets 2023-03-29 20:40:40,015 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished checking secrets 2023-03-29 20:40:40,015 buildarr:1 buildarr.cli.run [INFO] Saving updated secrets file to '/config/secrets.json' 2023-03-29 20:40:40,017 buildarr:1 buildarr.cli.run [INFO] Finished saving updated secrets file 2023-03-29 20:40:40,017 buildarr:1 buildarr.cli.run [INFO] Updating configuration on remote instances 2023-03-29 20:40:40,017 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Getting remote configuration 2023-03-29 20:40:40,599 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished getting remote configuration 2023-03-29 20:40:40,662 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Updating remote configuration 2023-03-29 20:40:41,129 buildarr:1 buildarr.config.base [INFO] <sonarr> (default) sonarr.settings.general.host.instance_name: 'Sonarr' -> 'Sonarr (Buildarr Example)' 2023-03-29 20:40:41,204 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Remote configuration successfully updated 2023-03-29 20:40:41,204 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished updating remote configuration 2023-03-29 20:40:41,205 buildarr:1 buildarr.cli.run [INFO] Finished updating configuration on remote instances 2023-03-29 20:40:41,205 buildarr:1 buildarr.cli.daemon [INFO] Finished applying initial configuration 2023-03-29 20:40:41,205 buildarr:1 buildarr.cli.daemon [INFO] Scheduling update jobs 2023-03-29 20:40:41,206 buildarr:1 buildarr.cli.daemon [INFO] Finished scheduling update jobs 2023-03-29 20:40:41,206 buildarr:1 buildarr.cli.daemon [INFO] The next run will be at 2023-03-30 03:00 2023-03-29 20:40:41,206 buildarr:1 buildarr.cli.daemon [INFO] Setting up config file monitoring 2023-03-29 20:40:41,216 buildarr:1 buildarr.cli.daemon [INFO] Finished setting up config file monitoring 2023-03-29 20:40:41,216 buildarr:1 buildarr.cli.daemon [INFO] Setting up signal handlers 2023-03-29 20:40:41,216 buildarr:1 buildarr.cli.daemon [INFO] Finished setting up signal handlers 2023-03-29 20:40:41,216 buildarr:1 buildarr.cli.daemon [INFO] Buildarr ready. Buildarr daemon supports the following signal types: SIGTERM / SIGINT - Gracefully shutdown the Buildarr daemon. SIGHUP - Reload the Buildarr configuration file and perform an update run (the same action taken as when the watch_config option is enabled and Buildarr detects configuration changes). Not supported on Windows.","title":"As a service (daemon mode)"},{"location":"usage/#testing-configuration","text":"New in version 0.4.0. This is a mode for testing whether or not a configuration file is syntactically correct, can be loaded, and contains valid instance-to-instance link references and TRaSH-Guides metadata IDs. This mode is intended for the user to test that a configuration will be loaded properly by Buildarr, before attempting to connect with any remote instances. $ buildarr test-config [ /path/to/config.yml ] If a configuration file is valid, the output from Buildarr will be similar to the following: $ buildarr test-config /config/buildarr.yml 2023-03-19 10:59:27,819 buildarr:1 buildarr.main [INFO] Buildarr version 0.4.0 (log level: INFO) 2023-03-19 10:59:27,820 buildarr:1 buildarr.main [INFO] Plugins loaded: sonarr (0.4.0) 2023-03-19 10:59:27,820 buildarr:1 buildarr.main [INFO] Testing configuration file: /config/buildarr.yml 2023-03-19 10:59:27,947 buildarr:1 buildarr.main [INFO] Loading configuration: PASSED 2023-03-19 10:59:27,947 buildarr:1 buildarr.main [INFO] Loading plugin managers: PASSED 2023-03-19 10:59:27,971 buildarr:1 buildarr.main [INFO] Loading instance configurations: PASSED 2023-03-19 10:59:27,971 buildarr:1 buildarr.main [INFO] Checking configured plugins: PASSED 2023-03-19 10:59:27,971 buildarr:1 buildarr.main [INFO] Resolving instance dependencies: PASSED 2023-03-19 10:59:31,634 buildarr:1 buildarr.main [INFO] Fetching TRaSH-Guides metadata: PASSED 2023-03-19 10:59:31,708 buildarr:1 buildarr.main [INFO] Rendering TRaSH-Guides metadata: PASSED 2023-03-19 10:59:32,053 buildarr:1 buildarr.main [INFO] Configuration test successful. Since Buildarr does not connect to any remote instances in this mode, even if a configuration file passes the tests performed by buildarr test-config , it will not necessarily successfully communicate with them.","title":"Testing configuration"},{"location":"usage/#generating-a-docker-compose-file","text":"New in version 0.4.0. This is an ad-hoc command that can be used to automatically generate a Docker Compose file from a given Buildarr configuration file. The generated Docker Compose file is guaranteed to have: Image tags matching the instance versions defined in the Buildarr configuration file Restart policy set on all services Any required volumes created Service dependencies added based on instance-to-instance links present in the Buildarr configuration Buildarr itself added as a service in daemon mode, to deploy instance configurations and keep them up to date The resulting file will be relatively basic and might require some additional changes to suit your environment, but it should provide a good starting point for setting up automatic deployment and configuration of your *Arr stack. Note There are a few additional limitations on the instance configurations, on top of Buildarr's regular constraints: Instance hostnames must not be set to IP addresses. All instances must have unique hostnames, unless the --ignore-hostnames option is set. Given the following example Buildarr configuration file, located at /opt/buildarr/buildarr.yml : --- sonarr : instances : sonarr-hd : {} sonarr-4k : settings : media_management : root_folders : - /tmp/videos profiles : language_profiles : definitions : English : languages : - \"English\" import_lists : definitions : \"Sonarr (HD)\" : type : \"sonarr\" root_folder : \"/tmp/videos\" quality_profile : \"Any\" language_profile : \"English\" full_url : \"http://sonarr-hd:8989\" instance_name : \"sonarr-hd\" We can use the following command to create a corresponding Docker Compose file. $ buildarr compose /opt/buildarr/buildarr.yml > /opt/buildarr/docker-compose.yml The resulting file located at /opt/buildarr/docker-compose.yml will look like this: --- version : '3.7' services : sonarr_sonarr-hd : image : lscr.io/linuxserver/sonarr:latest volumes : sonarr_sonarr-hd : /config hostname : sonarr-hd restart : always sonarr_sonarr-4k : image : lscr.io/linuxserver/sonarr:latest volumes : sonarr_sonarr-4k : /config hostname : sonarr-4k restart : always depends_on : - sonarr_sonarr-hd buildarr : image : callum027/buildarr:0.4.0 command : - daemon - /config/buildarr.yml volumes : - type : bind source : /opt/buildarr target : /config restart : always depends_on : - sonarr_sonarr-hd - sonarr_sonarr-4k volumes : - sonarr_sonarr-4k - sonarr_sonarr-hd","title":"Generating a Docker Compose file"},{"location":"usage/#plugin-specific-commands","text":"Plugins can implement their own ad-hoc commands. These are mainly used for things such as dumping configuration from running instances. For more information, refer to the user guide for the respective plugin.","title":"Plugin-specific commands"},{"location":"docker/release-notes/","text":"Release Notes (Buildarr Docker Container) # v0.6.2 - 2023-09-11 # Update Buildarr Core to v0.6.1 v0.6.1 Update the Sonarr plugin for Buildarr to v0.5.3 v0.6.1 - 2023-09-09 # Update the Radarr plugin for Buildarr to v0.1.1 Update the Prowlarr plugin for Buildarr to v0.3.1 v0.6.0 - 2023-09-09 # Update Buildarr Core to v0.6.0 Update the Sonarr plugin for Buildarr to v0.5.2 Update the Prowlarr plugin for Buildarr to v0.3.0 Update the Jellyseerr plugin for Buildarr to v0.2.0 Add the new Radarr plugin for Buildarr to the container v0.5.0 - 2023-04-16 # Update Buildarr to v0.5.0 Update the Sonarr plugin to v0.5.0 Update the Prowlarr plugin to v0.2.0 v0.4.5 - 2023-04-15 # Add the Jellyseerr plugin to the container v0.4.4 - 2023-04-14 # Update Buildarr to v0.4.2 v0.4.3 - 2023-04-09 # Update Buildarr to v0.4.1 Fix a bug where Buildarr was not being made PID 1, resulting in exit/reload signalling not working v0.4.2 - 2023-04-08 # Update the Sonarr plugin to v0.4.1 Update the Prowlarr plugin to v0.1.1 v0.4.1 - 2023-04-08 # Add the Prowlarr plugin to the container v0.4.0 - 2023-03-31 # Update Buildarr to v0.4.0 Add the newly separated Sonarr plugin to the container at v0.4.0","title":"Buildarr Docker Container"},{"location":"docker/release-notes/#release-notes-buildarr-docker-container","text":"","title":"Release Notes (Buildarr Docker Container)"},{"location":"docker/release-notes/#v062-2023-09-11","text":"Update Buildarr Core to v0.6.1 v0.6.1 Update the Sonarr plugin for Buildarr to v0.5.3","title":"v0.6.2 - 2023-09-11"},{"location":"docker/release-notes/#v061-2023-09-09","text":"Update the Radarr plugin for Buildarr to v0.1.1 Update the Prowlarr plugin for Buildarr to v0.3.1","title":"v0.6.1 - 2023-09-09"},{"location":"docker/release-notes/#v060-2023-09-09","text":"Update Buildarr Core to v0.6.0 Update the Sonarr plugin for Buildarr to v0.5.2 Update the Prowlarr plugin for Buildarr to v0.3.0 Update the Jellyseerr plugin for Buildarr to v0.2.0 Add the new Radarr plugin for Buildarr to the container","title":"v0.6.0 - 2023-09-09"},{"location":"docker/release-notes/#v050-2023-04-16","text":"Update Buildarr to v0.5.0 Update the Sonarr plugin to v0.5.0 Update the Prowlarr plugin to v0.2.0","title":"v0.5.0 - 2023-04-16"},{"location":"docker/release-notes/#v045-2023-04-15","text":"Add the Jellyseerr plugin to the container","title":"v0.4.5 - 2023-04-15"},{"location":"docker/release-notes/#v044-2023-04-14","text":"Update Buildarr to v0.4.2","title":"v0.4.4 - 2023-04-14"},{"location":"docker/release-notes/#v043-2023-04-09","text":"Update Buildarr to v0.4.1 Fix a bug where Buildarr was not being made PID 1, resulting in exit/reload signalling not working","title":"v0.4.3 - 2023-04-09"},{"location":"docker/release-notes/#v042-2023-04-08","text":"Update the Sonarr plugin to v0.4.1 Update the Prowlarr plugin to v0.1.1","title":"v0.4.2 - 2023-04-08"},{"location":"docker/release-notes/#v041-2023-04-08","text":"Add the Prowlarr plugin to the container","title":"v0.4.1 - 2023-04-08"},{"location":"docker/release-notes/#v040-2023-03-31","text":"Update Buildarr to v0.4.0 Add the newly separated Sonarr plugin to the container at v0.4.0","title":"v0.4.0 - 2023-03-31"},{"location":"plugins/","text":"Plugins # Buildarr supports external plugins to allow support for additional *Arr stack applications to be added. Successfully installed plugins will be loaded when Buildarr is run, with the plugin's version output. Configured plugins will be listed under Running with plugins . $ buildarr run 2023-03-29 20:39:50,856 buildarr:1 buildarr.cli.run [INFO] Buildarr version 0.4.0 (log level: INFO) 2023-03-29 20:39:50,856 buildarr:1 buildarr.cli.run [INFO] Loading configuration file '/config/buildarr.yml' 2023-03-29 20:39:50,872 buildarr:1 buildarr.cli.run [INFO] Finished loading configuration file 2023-03-29 20:39:50,874 buildarr:1 buildarr.cli.run [INFO] Loaded plugins: sonarr (0.4.0) 2023-03-29 20:39:50,875 buildarr:1 buildarr.cli.run [INFO] Loading instance configurations 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Finished loading instance configurations 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Running with plugins: sonarr ... Buildarr plugins are installed as Python packages, just like Buildarr itself. Supported plugins # At the time of this release the following plugins are available: buildarr-sonarr - Sonarr PVR for TV shows buildarr-radarr - Radarr PVR for movies buildarr-prowlarr - Prowlarr indexer manager for Arr applications buildarr-jellyseerr - Jellyseerr media request manager for Jellyfin, Sonarr and Radarr Installing plugins for a standalone application # As Buildarr plugins are standard Python packages, they can simply be installed using pip install into the environment Buildarr is installed into, and Buildarr will automatically load them. $ pip install buildarr-sonarr For more information on installing Buildarr as a standalone application, see the installation instructions . Installing plugins into the Docker container # The official Buildarr container, callum027/buildarr , bundles the Sonarr plugin into the image, so there is no need to install the plugin separately if you wish to manage Sonarr instances. If you would like to install an external plugin that is not bundled, the Buildarr Docker container supports installing plugins at runtime by defining the $BUILDARR_INSTALL_PACKAGES environment variable. $BUILDARR_INSTALL_PACKAGES is a space-separated list of packages that gets passed directly to pip install on container startup, ensuring that any defined packages are ready before Buildarr starts running. $ docker run -d --name buildarr --restart = always -v /path/to/config:/config -e PUID = <PUID> -e PGID = <PGID> -e BUILDARR_INSTALL_PLUGINS = \"buildarr-sonarr\" callum027/buildarr:latest If you would like to upgrade Buildarr itself or the bundled plugins within the container, set the following environment variables to the version you would like to install: $BUILDARR_VERSION $BUILDARR_SONARR_VERSION $BUILDARR_RADARR_VERSION $BUILDARR_PROWLARR_VERSION $BUILDARR_JELLYSEERR_VERSION For more information on installing Buildarr as a Docker container, see the Docker installation instructions .","title":"Introduction"},{"location":"plugins/#plugins","text":"Buildarr supports external plugins to allow support for additional *Arr stack applications to be added. Successfully installed plugins will be loaded when Buildarr is run, with the plugin's version output. Configured plugins will be listed under Running with plugins . $ buildarr run 2023-03-29 20:39:50,856 buildarr:1 buildarr.cli.run [INFO] Buildarr version 0.4.0 (log level: INFO) 2023-03-29 20:39:50,856 buildarr:1 buildarr.cli.run [INFO] Loading configuration file '/config/buildarr.yml' 2023-03-29 20:39:50,872 buildarr:1 buildarr.cli.run [INFO] Finished loading configuration file 2023-03-29 20:39:50,874 buildarr:1 buildarr.cli.run [INFO] Loaded plugins: sonarr (0.4.0) 2023-03-29 20:39:50,875 buildarr:1 buildarr.cli.run [INFO] Loading instance configurations 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Finished loading instance configurations 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Running with plugins: sonarr ... Buildarr plugins are installed as Python packages, just like Buildarr itself.","title":"Plugins"},{"location":"plugins/#supported-plugins","text":"At the time of this release the following plugins are available: buildarr-sonarr - Sonarr PVR for TV shows buildarr-radarr - Radarr PVR for movies buildarr-prowlarr - Prowlarr indexer manager for Arr applications buildarr-jellyseerr - Jellyseerr media request manager for Jellyfin, Sonarr and Radarr","title":"Supported plugins"},{"location":"plugins/#installing-plugins-for-a-standalone-application","text":"As Buildarr plugins are standard Python packages, they can simply be installed using pip install into the environment Buildarr is installed into, and Buildarr will automatically load them. $ pip install buildarr-sonarr For more information on installing Buildarr as a standalone application, see the installation instructions .","title":"Installing plugins for a standalone application"},{"location":"plugins/#installing-plugins-into-the-docker-container","text":"The official Buildarr container, callum027/buildarr , bundles the Sonarr plugin into the image, so there is no need to install the plugin separately if you wish to manage Sonarr instances. If you would like to install an external plugin that is not bundled, the Buildarr Docker container supports installing plugins at runtime by defining the $BUILDARR_INSTALL_PACKAGES environment variable. $BUILDARR_INSTALL_PACKAGES is a space-separated list of packages that gets passed directly to pip install on container startup, ensuring that any defined packages are ready before Buildarr starts running. $ docker run -d --name buildarr --restart = always -v /path/to/config:/config -e PUID = <PUID> -e PGID = <PGID> -e BUILDARR_INSTALL_PLUGINS = \"buildarr-sonarr\" callum027/buildarr:latest If you would like to upgrade Buildarr itself or the bundled plugins within the container, set the following environment variables to the version you would like to install: $BUILDARR_VERSION $BUILDARR_SONARR_VERSION $BUILDARR_RADARR_VERSION $BUILDARR_PROWLARR_VERSION $BUILDARR_JELLYSEERR_VERSION For more information on installing Buildarr as a Docker container, see the Docker installation instructions .","title":"Installing plugins into the Docker container"},{"location":"plugins/jellyseerr/","text":"Buildarr Jellyseerr Plugin # The Buildarr Jellyseerr plugin ( buildarr-jellyseerr ) is a plugin for Buildarr that adds the capability to configure and manage Jellyseerr instances. Jellyseerr is an application that links with both Jellyfin/Plex and your Sonarr/Radarr instances. It allows your users to login using their Jellyfin/Plex credentials, browse available media online, and make media requests for new content. Once these requests are approved, Jellyseerr will then make the requests to Sonarr/Radarr to download them, monitor the progress, and report back to the user when the media is available in Jellyfin/Plex. Buildarr can be used to initialise a new Jellyseerr install with Jellyfin server credentials (Plex is not supported at this time), manage the Jellyseerr server settings, and connect it with Sonarr and Radarr servers. Installation # When using Buildarr as a standalone application , the Jellyseerr plugin can simply be installed using pip : $ pip install buildarr buildarr-jellyseerr If you are linking a Jellyseerr instance with another Buildarr-configured application, specify the following extras to also install a compatible version of the corresponding plugins: sonarr (for the Sonarr TV show PVR) radarr (for the Radarr movie PVR) $ pip install buildarr buildarr-jellyseerr [ sonarr,radarr ] When using Buildarr as a Docker container , the Jellyseerr plugin is bundled with the official container ( callum027/buildarr ), so there is no need to install it separately. You can upgrade or pin the version of the plugin to a specific version within the container by setting the $BUILDARR_JELLYSEERR_VERSION environment variable in the docker run command using --env / -e : -e BUILDARR_JELLYSEERR_VERSION = \"<version>\" Quick Start # Brand new Jellyseerr instances require initialisation for Buildarr to be able to manage it. This is usually done manually by navigating to http://localhost:5055/setup on the Jellyseerr host, logging in with Jellyfin or Plex credentials, and then selecting libraries to monitor. As of this release, automatically initialising Jellyseerr for Plex is not yet supported. Please initialise the Jellyseerr instance manually. For Jellyseerr instances being connected to Jellyfin only, Buildarr can perform this initialisation automatically. To do this, set the following parameters under the jellyfin configuration section, which are required when initialisting a new instance (they are otherwise optional): --- jellyseerr : hostname : \"localhost\" port : 5055 protocol : \"http\" api_key : \"<API key>\" # Required. Check `settings.json` in the config volume to get the value. settings : jellyfin : server_url : \"http://localhost:8096\" # Jellyfin server URL, preferably direct (no proxy). username : \"admin\" # Jellyfin server admin user. password : \"secure-password\" # Jellyfin server admin user password. email_address : \"admin@example.com\" # Jellyfin server admin email address. # Jellyfin media libraries to monitor. # This can be used to change what libraries Jellyseerr monitors, # even after it is initialised. libraries : - \"Shows\" - \"Movies\" - \"Anime\" - \"Anime Movies\" After that, configure and run Buildarr as normal, and setup desired settings for Jellyseerr. For more information on configuring Jellyseerr, see Configuring your Jellyseerr instance . Once you have a complete configuration file, test it against the Jellyseerr instance using buildarr run . The output should contain messages about checking, performing and finishing the initialisation. If no errors were found, congratulations, your Jellyseerr instance is now managed by Buildarr! 2023-04-15 09:44:20,386 buildarr:1 buildarr.cli.run [INFO] Buildarr version 0.4.2 (log level: INFO) 2023-04-15 09:44:20,386 buildarr:1 buildarr.cli.run [INFO] Loading configuration file '/config/buildarr.yml' 2023-04-15 09:44:20,458 buildarr:1 buildarr.cli.run [INFO] Finished loading configuration file 2023-04-15 09:44:20,461 buildarr:1 buildarr.cli.run [INFO] Loaded plugins: jellyseerr (0.1.0), prowlarr (0.1.1), sonarr (0.4.1) 2023-04-15 09:44:20,461 buildarr:1 buildarr.cli.run [INFO] Loading instance configurations 2023-04-15 09:44:20,464 buildarr:1 buildarr.cli.run [INFO] Finished loading instance configurations 2023-04-15 09:44:20,464 buildarr:1 buildarr.cli.run [INFO] Running with plugins: sonarr, jellyseerr 2023-04-15 09:44:20,464 buildarr:1 buildarr.cli.run [INFO] Resolving instance dependencies 2023-04-15 09:44:20,464 buildarr:1 buildarr.cli.run [INFO] Finished resolving instance dependencies 2023-04-15 09:44:20,464 buildarr:1 buildarr.cli.run [INFO] Rendering instance configuration dynamic attributes 2023-04-15 09:44:20,465 buildarr:1 buildarr.cli.run [INFO] Finished rendering instance configuration dynamic attributes 2023-04-15 09:44:20,599 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Instance has not been initialised 2023-04-15 09:44:20,600 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Initialising instance 2023-04-15 09:44:20,600 buildarr:1 buildarr_jellyseerr.config.settings.jellyfin [INFO] <jellyseerr> (default) Checking if required attributes are defined 2023-04-15 09:44:20,600 buildarr:1 buildarr_jellyseerr.config.settings.jellyfin [INFO] <jellyseerr> (default) Finished checking if required attributes are defined 2023-04-15 09:44:20,600 buildarr:1 buildarr_jellyseerr.config.settings.jellyfin [INFO] <jellyseerr> (default) Authenticating Jellyseerr with Jellyfin 2023-04-15 09:44:20,842 buildarr:1 buildarr_jellyseerr.config.settings.jellyfin [INFO] <jellyseerr> (default) Finished authenticating Jellyseerr with Jellyfin 2023-04-15 09:44:20,842 buildarr:1 buildarr_jellyseerr.config.settings.jellyfin [INFO] <jellyseerr> (default) Syncing Jellyfin libraries to Jellyseerr 2023-04-15 09:44:21,027 buildarr:1 buildarr_jellyseerr.config.settings.jellyfin [INFO] <jellyseerr> (default) Finished syncing Jellyfin libraries to Jellyseerr 2023-04-15 09:44:21,027 buildarr:1 buildarr_jellyseerr.config.settings.jellyfin [INFO] <jellyseerr> (default) Enabling Jellyfin libraries in Jellyseerr: 'TV Shows' 2023-04-15 09:44:21,083 buildarr:1 buildarr_jellyseerr.config.settings.jellyfin [INFO] <jellyseerr> (default) Finished enabling Jellyfin libraries in Jellyseerr 2023-04-15 09:44:21,083 buildarr:1 buildarr_jellyseerr.config.settings.jellyfin [INFO] <jellyseerr> (default) Finalising initialisation 2023-04-15 09:44:21,191 buildarr:1 buildarr_jellyseerr.config.settings.jellyfin [INFO] <jellyseerr> (default) Finished finalising initialisation 2023-04-15 09:44:21,192 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Finished initialising instance 2023-04-15 09:44:21,192 buildarr:1 buildarr.cli.run [INFO] Loading secrets file from '/config/secrets.json' 2023-04-15 09:44:21,196 buildarr:1 buildarr.cli.run [INFO] Finished loading secrets file 2023-04-15 09:44:21,196 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Checking secrets 2023-04-15 09:44:21,201 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Connection test successful using cached secrets 2023-04-15 09:44:21,201 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished checking secrets 2023-04-15 09:44:21,201 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Checking secrets 2023-04-15 09:44:21,223 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Connection test failed using cached secrets (or not cached), fetching secrets 2023-04-15 09:44:21,231 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Connection test successful using fetched secrets 2023-04-15 09:44:21,231 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Finished checking secrets 2023-04-15 09:44:21,231 buildarr:1 buildarr.cli.run [INFO] Saving updated secrets file to '/config/secrets.json' 2023-04-15 09:44:21,232 buildarr:1 buildarr.cli.run [INFO] Finished saving updated secrets file 2023-04-15 09:44:21,232 buildarr:1 buildarr.cli.run [INFO] Updating configuration on remote instances 2023-04-15 09:44:21,232 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Fetching remote configuration to check if updates are required 2023-04-15 09:44:21,363 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished fetching remote configuration 2023-04-15 09:44:21,402 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Updating remote configuration 2023-04-15 09:44:21,491 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Remote configuration is up to date 2023-04-15 09:44:21,491 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished updating remote configuration 2023-04-15 09:44:21,491 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Fetching remote configuration to check if updates are required 2023-04-15 09:44:22,496 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Finished fetching remote configuration 2023-04-15 09:44:22,507 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Updating remote configuration 2023-04-15 09:44:22,629 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Remote configuration successfully updated 2023-04-15 09:44:22,629 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Finished updating remote configuration 2023-04-15 09:44:22,629 buildarr:1 buildarr.cli.run [INFO] Finished updating configuration on remote instances 2023-04-15 09:44:22,629 buildarr:1 buildarr.cli.run [INFO] Deleting unmanaged/unused resources on remote instances 2023-04-15 09:44:22,630 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Refetching remote configuration to delete unused resources 2023-04-15 09:44:22,735 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Finished refetching remote configuration 2023-04-15 09:44:22,749 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Deleting unmanaged/unused resources on the remote instance 2023-04-15 09:44:22,760 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Remote configuration is clean 2023-04-15 09:44:22,760 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Finished deleting unmanaged/unused resources on the remote instance 2023-04-15 09:44:22,760 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Refetching remote configuration to delete unused resources 2023-04-15 09:44:22,874 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished refetching remote configuration 2023-04-15 09:44:22,909 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Deleting unmanaged/unused resources on the remote instance 2023-04-15 09:44:22,910 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Remote configuration is clean 2023-04-15 09:44:22,910 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished deleting unmanaged/unused resources on the remote instance 2023-04-15 09:44:22,910 buildarr:1 buildarr.cli.run [INFO] Finished deleting unmanaged/unused resources on remote instances Configuring your Jellyseerr instance # The following sections cover all of the possible configuration attributes for a Jellyseerr instance. Host Configuration Settings General Users Jellyfin Services Sonarr Radarr Notifications Dumping an existing Jellyseerr instance configuration # Buildarr is capable of dumping a running Jellyseerr instance's configuration. $ buildarr jellyseerr dump-config http://localhost:5055 > jellyseerr.yml Jellyseerr instance API key: <Paste API key here> The dumped YAML object can be placed directly under the jellyseerr configuration block, or used as an instance-specific configuration . All possible values are explicitly defined in this dumped configuration. hostname : localhost port : 5055 protocol : http api_key : AbCdEfGhIjKlMnOpQrStUvWxYzaBcDeFgHiJkLmNoPqRsTuVwXyZ123456789012345= image : fallenbagel/jellyseerr version : 1.4.1 settings : general : application_title : Jellyseerr application_url : null enable_proxy_support : false enable_csrf_protection : false enable_image_caching : false display_language : en discover_region : '' discover_languages : - en hide_available_media : false allow_partial_series_requests : true jellyfin : server_url : null username : null password : null email_address : null external_url : null libraries : - TV Shows users : enable_local_signin : true enable_new_jellyfin_signin : true global_movie_request_limit : 0 global_movie_request_days : 7 global_series_request_limit : 0 global_series_request_days : 7 default_permissions : - request - request-4k services : radarr : delete_unmanaged : false definitions : {} sonarr : delete_unmanaged : false definitions : Sonarr : is_default_server : true is_4k_server : false hostname : localhost port : 8989 use_ssl : false url_base : null external_url : http://localhost:8989 enable_scan : false enable_automatic_search : true instance_name : null api_key : 1a2b3c4d5e6f1a2b3c4d5e6f1a2b3c4d root_folder : /data/media/tv quality_profile : TV Shows language_profile : English tags : [] anime_root_folder : null anime_quality_profile : null anime_language_profile : null anime_tags : [] enable_season_folders : true notifications : discord : enable : false notification_types : [] webhook_url : null username : null avatar_url : null enable_mentions : true email : enable : false require_user_email : false sender_name : Jellyseerr sender_address : null smtp_host : null smtp_port : 587 encryption_method : starttls-prefer allow_selfsigned_certificates : false smtp_username : null smtp_password : null pgp_private_key : null pgp_password : null gotify : enable : false notification_types : [] server_url : null access_token : null lunasea : enable : false notification_types : [] webhook_url : null profile_name : null pushbullet : enable : false notification_types : [] access_token : null channel_tag : null pushover : enable : false notification_types : [] api_key : null user_key : null slack : enable : false notification_types : [] webhook_url : null telegram : enable : false notification_types : [] access_token : null username : null chat_id : null send_silently : false webhook : enable : false notification_types : [] webhook_url : null authorization_header : null payload_template : \"{\\n \\\"notification_type\\\": \\\"{{notification_type}}\\\",\\n\\ \\ \\\"event\\\": \\\"{{event}}\\\",\\n \\\"subject\\\": \\\"{{subject}}\\\",\\n \\\"\\ message\\\": \\\"{{message}}\\\",\\n \\\"image\\\": \\\"{{image}}\\\",\\n \\\"{{media}}\\\"\\ : {\\n \\\"media_type\\\": \\\"{{media_type}}\\\",\\n \\\"tmdbId\\\": \\\"{{media_tmdbid}}\\\"\\ ,\\n \\\"tvdbId\\\": \\\"{{media_tvdbid}}\\\",\\n \\\"status\\\": \\\"{{media_status}}\\\"\\ ,\\n \\\"status4k\\\": \\\"{{media_status4k}}\\\"\\n },\\n \\\"{{request}}\\\"\\ : {\\n \\\"request_id\\\": \\\"{{request_id}}\\\",\\n \\\"requestedBy_email\\\"\\ : \\\"{{requestedBy_email}}\\\",\\n \\\"requestedBy_username\\\": \\\"{{requestedBy_username}}\\\"\\ ,\\n \\\"requestedBy_avatar\\\": \\\"{{requestedBy_avatar}}\\\"\\n },\\n \\ \\ \\\"{{issue}}\\\": {\\n \\\"issue_id\\\": \\\"{{issue_id}}\\\",\\n \\\"issue_type\\\"\\ : \\\"{{issue_type}}\\\",\\n \\\"issue_status\\\": \\\"{{issue_status}}\\\",\\n \\ \\ \\\"reportedBy_email\\\": \\\"{{reportedBy_email}}\\\",\\n \\\"reportedBy_username\\\"\\ : \\\"{{reportedBy_username}}\\\",\\n \\\"reportedBy_avatar\\\": \\\"{{reportedBy_avatar}}\\\"\\ \\n },\\n \\\"{{comment}}\\\": {\\n \\\"comment_message\\\": \\\"{{comment_message}}\\\"\\ ,\\n \\\"commentedBy_email\\\": \\\"{{commentedBy_email}}\\\",\\n \\\"commentedBy_username\\\"\\ : \\\"{{commentedBy_username}}\\\",\\n \\\"commentedBy_avatar\\\": \\\"{{commentedBy_avatar}}\\\"\\ \\n },\\n \\\"{{extra}}\\\": []\\n}\" webpush : enable : false","title":"Introduction"},{"location":"plugins/jellyseerr/#buildarr-jellyseerr-plugin","text":"The Buildarr Jellyseerr plugin ( buildarr-jellyseerr ) is a plugin for Buildarr that adds the capability to configure and manage Jellyseerr instances. Jellyseerr is an application that links with both Jellyfin/Plex and your Sonarr/Radarr instances. It allows your users to login using their Jellyfin/Plex credentials, browse available media online, and make media requests for new content. Once these requests are approved, Jellyseerr will then make the requests to Sonarr/Radarr to download them, monitor the progress, and report back to the user when the media is available in Jellyfin/Plex. Buildarr can be used to initialise a new Jellyseerr install with Jellyfin server credentials (Plex is not supported at this time), manage the Jellyseerr server settings, and connect it with Sonarr and Radarr servers.","title":"Buildarr Jellyseerr Plugin"},{"location":"plugins/jellyseerr/#installation","text":"When using Buildarr as a standalone application , the Jellyseerr plugin can simply be installed using pip : $ pip install buildarr buildarr-jellyseerr If you are linking a Jellyseerr instance with another Buildarr-configured application, specify the following extras to also install a compatible version of the corresponding plugins: sonarr (for the Sonarr TV show PVR) radarr (for the Radarr movie PVR) $ pip install buildarr buildarr-jellyseerr [ sonarr,radarr ] When using Buildarr as a Docker container , the Jellyseerr plugin is bundled with the official container ( callum027/buildarr ), so there is no need to install it separately. You can upgrade or pin the version of the plugin to a specific version within the container by setting the $BUILDARR_JELLYSEERR_VERSION environment variable in the docker run command using --env / -e : -e BUILDARR_JELLYSEERR_VERSION = \"<version>\"","title":"Installation"},{"location":"plugins/jellyseerr/#quick-start","text":"Brand new Jellyseerr instances require initialisation for Buildarr to be able to manage it. This is usually done manually by navigating to http://localhost:5055/setup on the Jellyseerr host, logging in with Jellyfin or Plex credentials, and then selecting libraries to monitor. As of this release, automatically initialising Jellyseerr for Plex is not yet supported. Please initialise the Jellyseerr instance manually. For Jellyseerr instances being connected to Jellyfin only, Buildarr can perform this initialisation automatically. To do this, set the following parameters under the jellyfin configuration section, which are required when initialisting a new instance (they are otherwise optional): --- jellyseerr : hostname : \"localhost\" port : 5055 protocol : \"http\" api_key : \"<API key>\" # Required. Check `settings.json` in the config volume to get the value. settings : jellyfin : server_url : \"http://localhost:8096\" # Jellyfin server URL, preferably direct (no proxy). username : \"admin\" # Jellyfin server admin user. password : \"secure-password\" # Jellyfin server admin user password. email_address : \"admin@example.com\" # Jellyfin server admin email address. # Jellyfin media libraries to monitor. # This can be used to change what libraries Jellyseerr monitors, # even after it is initialised. libraries : - \"Shows\" - \"Movies\" - \"Anime\" - \"Anime Movies\" After that, configure and run Buildarr as normal, and setup desired settings for Jellyseerr. For more information on configuring Jellyseerr, see Configuring your Jellyseerr instance . Once you have a complete configuration file, test it against the Jellyseerr instance using buildarr run . The output should contain messages about checking, performing and finishing the initialisation. If no errors were found, congratulations, your Jellyseerr instance is now managed by Buildarr! 2023-04-15 09:44:20,386 buildarr:1 buildarr.cli.run [INFO] Buildarr version 0.4.2 (log level: INFO) 2023-04-15 09:44:20,386 buildarr:1 buildarr.cli.run [INFO] Loading configuration file '/config/buildarr.yml' 2023-04-15 09:44:20,458 buildarr:1 buildarr.cli.run [INFO] Finished loading configuration file 2023-04-15 09:44:20,461 buildarr:1 buildarr.cli.run [INFO] Loaded plugins: jellyseerr (0.1.0), prowlarr (0.1.1), sonarr (0.4.1) 2023-04-15 09:44:20,461 buildarr:1 buildarr.cli.run [INFO] Loading instance configurations 2023-04-15 09:44:20,464 buildarr:1 buildarr.cli.run [INFO] Finished loading instance configurations 2023-04-15 09:44:20,464 buildarr:1 buildarr.cli.run [INFO] Running with plugins: sonarr, jellyseerr 2023-04-15 09:44:20,464 buildarr:1 buildarr.cli.run [INFO] Resolving instance dependencies 2023-04-15 09:44:20,464 buildarr:1 buildarr.cli.run [INFO] Finished resolving instance dependencies 2023-04-15 09:44:20,464 buildarr:1 buildarr.cli.run [INFO] Rendering instance configuration dynamic attributes 2023-04-15 09:44:20,465 buildarr:1 buildarr.cli.run [INFO] Finished rendering instance configuration dynamic attributes 2023-04-15 09:44:20,599 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Instance has not been initialised 2023-04-15 09:44:20,600 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Initialising instance 2023-04-15 09:44:20,600 buildarr:1 buildarr_jellyseerr.config.settings.jellyfin [INFO] <jellyseerr> (default) Checking if required attributes are defined 2023-04-15 09:44:20,600 buildarr:1 buildarr_jellyseerr.config.settings.jellyfin [INFO] <jellyseerr> (default) Finished checking if required attributes are defined 2023-04-15 09:44:20,600 buildarr:1 buildarr_jellyseerr.config.settings.jellyfin [INFO] <jellyseerr> (default) Authenticating Jellyseerr with Jellyfin 2023-04-15 09:44:20,842 buildarr:1 buildarr_jellyseerr.config.settings.jellyfin [INFO] <jellyseerr> (default) Finished authenticating Jellyseerr with Jellyfin 2023-04-15 09:44:20,842 buildarr:1 buildarr_jellyseerr.config.settings.jellyfin [INFO] <jellyseerr> (default) Syncing Jellyfin libraries to Jellyseerr 2023-04-15 09:44:21,027 buildarr:1 buildarr_jellyseerr.config.settings.jellyfin [INFO] <jellyseerr> (default) Finished syncing Jellyfin libraries to Jellyseerr 2023-04-15 09:44:21,027 buildarr:1 buildarr_jellyseerr.config.settings.jellyfin [INFO] <jellyseerr> (default) Enabling Jellyfin libraries in Jellyseerr: 'TV Shows' 2023-04-15 09:44:21,083 buildarr:1 buildarr_jellyseerr.config.settings.jellyfin [INFO] <jellyseerr> (default) Finished enabling Jellyfin libraries in Jellyseerr 2023-04-15 09:44:21,083 buildarr:1 buildarr_jellyseerr.config.settings.jellyfin [INFO] <jellyseerr> (default) Finalising initialisation 2023-04-15 09:44:21,191 buildarr:1 buildarr_jellyseerr.config.settings.jellyfin [INFO] <jellyseerr> (default) Finished finalising initialisation 2023-04-15 09:44:21,192 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Finished initialising instance 2023-04-15 09:44:21,192 buildarr:1 buildarr.cli.run [INFO] Loading secrets file from '/config/secrets.json' 2023-04-15 09:44:21,196 buildarr:1 buildarr.cli.run [INFO] Finished loading secrets file 2023-04-15 09:44:21,196 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Checking secrets 2023-04-15 09:44:21,201 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Connection test successful using cached secrets 2023-04-15 09:44:21,201 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished checking secrets 2023-04-15 09:44:21,201 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Checking secrets 2023-04-15 09:44:21,223 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Connection test failed using cached secrets (or not cached), fetching secrets 2023-04-15 09:44:21,231 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Connection test successful using fetched secrets 2023-04-15 09:44:21,231 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Finished checking secrets 2023-04-15 09:44:21,231 buildarr:1 buildarr.cli.run [INFO] Saving updated secrets file to '/config/secrets.json' 2023-04-15 09:44:21,232 buildarr:1 buildarr.cli.run [INFO] Finished saving updated secrets file 2023-04-15 09:44:21,232 buildarr:1 buildarr.cli.run [INFO] Updating configuration on remote instances 2023-04-15 09:44:21,232 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Fetching remote configuration to check if updates are required 2023-04-15 09:44:21,363 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished fetching remote configuration 2023-04-15 09:44:21,402 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Updating remote configuration 2023-04-15 09:44:21,491 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Remote configuration is up to date 2023-04-15 09:44:21,491 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished updating remote configuration 2023-04-15 09:44:21,491 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Fetching remote configuration to check if updates are required 2023-04-15 09:44:22,496 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Finished fetching remote configuration 2023-04-15 09:44:22,507 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Updating remote configuration 2023-04-15 09:44:22,629 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Remote configuration successfully updated 2023-04-15 09:44:22,629 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Finished updating remote configuration 2023-04-15 09:44:22,629 buildarr:1 buildarr.cli.run [INFO] Finished updating configuration on remote instances 2023-04-15 09:44:22,629 buildarr:1 buildarr.cli.run [INFO] Deleting unmanaged/unused resources on remote instances 2023-04-15 09:44:22,630 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Refetching remote configuration to delete unused resources 2023-04-15 09:44:22,735 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Finished refetching remote configuration 2023-04-15 09:44:22,749 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Deleting unmanaged/unused resources on the remote instance 2023-04-15 09:44:22,760 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Remote configuration is clean 2023-04-15 09:44:22,760 buildarr:1 buildarr.cli.run [INFO] <jellyseerr> (default) Finished deleting unmanaged/unused resources on the remote instance 2023-04-15 09:44:22,760 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Refetching remote configuration to delete unused resources 2023-04-15 09:44:22,874 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished refetching remote configuration 2023-04-15 09:44:22,909 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Deleting unmanaged/unused resources on the remote instance 2023-04-15 09:44:22,910 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Remote configuration is clean 2023-04-15 09:44:22,910 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished deleting unmanaged/unused resources on the remote instance 2023-04-15 09:44:22,910 buildarr:1 buildarr.cli.run [INFO] Finished deleting unmanaged/unused resources on remote instances","title":"Quick Start"},{"location":"plugins/jellyseerr/#configuring-your-jellyseerr-instance","text":"The following sections cover all of the possible configuration attributes for a Jellyseerr instance. Host Configuration Settings General Users Jellyfin Services Sonarr Radarr Notifications","title":"Configuring your Jellyseerr instance"},{"location":"plugins/jellyseerr/#dumping-an-existing-jellyseerr-instance-configuration","text":"Buildarr is capable of dumping a running Jellyseerr instance's configuration. $ buildarr jellyseerr dump-config http://localhost:5055 > jellyseerr.yml Jellyseerr instance API key: <Paste API key here> The dumped YAML object can be placed directly under the jellyseerr configuration block, or used as an instance-specific configuration . All possible values are explicitly defined in this dumped configuration. hostname : localhost port : 5055 protocol : http api_key : AbCdEfGhIjKlMnOpQrStUvWxYzaBcDeFgHiJkLmNoPqRsTuVwXyZ123456789012345= image : fallenbagel/jellyseerr version : 1.4.1 settings : general : application_title : Jellyseerr application_url : null enable_proxy_support : false enable_csrf_protection : false enable_image_caching : false display_language : en discover_region : '' discover_languages : - en hide_available_media : false allow_partial_series_requests : true jellyfin : server_url : null username : null password : null email_address : null external_url : null libraries : - TV Shows users : enable_local_signin : true enable_new_jellyfin_signin : true global_movie_request_limit : 0 global_movie_request_days : 7 global_series_request_limit : 0 global_series_request_days : 7 default_permissions : - request - request-4k services : radarr : delete_unmanaged : false definitions : {} sonarr : delete_unmanaged : false definitions : Sonarr : is_default_server : true is_4k_server : false hostname : localhost port : 8989 use_ssl : false url_base : null external_url : http://localhost:8989 enable_scan : false enable_automatic_search : true instance_name : null api_key : 1a2b3c4d5e6f1a2b3c4d5e6f1a2b3c4d root_folder : /data/media/tv quality_profile : TV Shows language_profile : English tags : [] anime_root_folder : null anime_quality_profile : null anime_language_profile : null anime_tags : [] enable_season_folders : true notifications : discord : enable : false notification_types : [] webhook_url : null username : null avatar_url : null enable_mentions : true email : enable : false require_user_email : false sender_name : Jellyseerr sender_address : null smtp_host : null smtp_port : 587 encryption_method : starttls-prefer allow_selfsigned_certificates : false smtp_username : null smtp_password : null pgp_private_key : null pgp_password : null gotify : enable : false notification_types : [] server_url : null access_token : null lunasea : enable : false notification_types : [] webhook_url : null profile_name : null pushbullet : enable : false notification_types : [] access_token : null channel_tag : null pushover : enable : false notification_types : [] api_key : null user_key : null slack : enable : false notification_types : [] webhook_url : null telegram : enable : false notification_types : [] access_token : null username : null chat_id : null send_silently : false webhook : enable : false notification_types : [] webhook_url : null authorization_header : null payload_template : \"{\\n \\\"notification_type\\\": \\\"{{notification_type}}\\\",\\n\\ \\ \\\"event\\\": \\\"{{event}}\\\",\\n \\\"subject\\\": \\\"{{subject}}\\\",\\n \\\"\\ message\\\": \\\"{{message}}\\\",\\n \\\"image\\\": \\\"{{image}}\\\",\\n \\\"{{media}}\\\"\\ : {\\n \\\"media_type\\\": \\\"{{media_type}}\\\",\\n \\\"tmdbId\\\": \\\"{{media_tmdbid}}\\\"\\ ,\\n \\\"tvdbId\\\": \\\"{{media_tvdbid}}\\\",\\n \\\"status\\\": \\\"{{media_status}}\\\"\\ ,\\n \\\"status4k\\\": \\\"{{media_status4k}}\\\"\\n },\\n \\\"{{request}}\\\"\\ : {\\n \\\"request_id\\\": \\\"{{request_id}}\\\",\\n \\\"requestedBy_email\\\"\\ : \\\"{{requestedBy_email}}\\\",\\n \\\"requestedBy_username\\\": \\\"{{requestedBy_username}}\\\"\\ ,\\n \\\"requestedBy_avatar\\\": \\\"{{requestedBy_avatar}}\\\"\\n },\\n \\ \\ \\\"{{issue}}\\\": {\\n \\\"issue_id\\\": \\\"{{issue_id}}\\\",\\n \\\"issue_type\\\"\\ : \\\"{{issue_type}}\\\",\\n \\\"issue_status\\\": \\\"{{issue_status}}\\\",\\n \\ \\ \\\"reportedBy_email\\\": \\\"{{reportedBy_email}}\\\",\\n \\\"reportedBy_username\\\"\\ : \\\"{{reportedBy_username}}\\\",\\n \\\"reportedBy_avatar\\\": \\\"{{reportedBy_avatar}}\\\"\\ \\n },\\n \\\"{{comment}}\\\": {\\n \\\"comment_message\\\": \\\"{{comment_message}}\\\"\\ ,\\n \\\"commentedBy_email\\\": \\\"{{commentedBy_email}}\\\",\\n \\\"commentedBy_username\\\"\\ : \\\"{{commentedBy_username}}\\\",\\n \\\"commentedBy_avatar\\\": \\\"{{commentedBy_avatar}}\\\"\\ \\n },\\n \\\"{{extra}}\\\": []\\n}\" webpush : enable : false","title":"Dumping an existing Jellyseerr instance configuration"},{"location":"plugins/jellyseerr/release-notes/","text":"Release Notes (Buildarr Jellyseerr Plugin) # v0.2.0 - 2023-09-09 # This release updates the Jellyseerr plugin so that it is compatible with Buildarr v0.6.0 . This version is backwards compatible with all versions of Buildarr supported by v0.1.0 of the plugin. An optional extra dependency has been added to the plugin for the new Radarr plugin for Buildarr , for convenient installation when using Jellyseerr. Other changes: Fix the plugin's internal name for announced in the minimum availability field. Shouldn't have caused any problems when using the plugin previously, but fixed anyway. Changed # Update package metadata and dependencies ( #5 ) Fix internal name for 'announced' minimum availability ( #6 ) v0.1.0 - 2023-04-15 # First release of the Jellyseerr plugin for Buildarr.","title":"Release Notes"},{"location":"plugins/jellyseerr/release-notes/#release-notes-buildarr-jellyseerr-plugin","text":"","title":"Release Notes (Buildarr Jellyseerr Plugin)"},{"location":"plugins/jellyseerr/release-notes/#v020-2023-09-09","text":"This release updates the Jellyseerr plugin so that it is compatible with Buildarr v0.6.0 . This version is backwards compatible with all versions of Buildarr supported by v0.1.0 of the plugin. An optional extra dependency has been added to the plugin for the new Radarr plugin for Buildarr , for convenient installation when using Jellyseerr. Other changes: Fix the plugin's internal name for announced in the minimum availability field. Shouldn't have caused any problems when using the plugin previously, but fixed anyway.","title":"v0.2.0 - 2023-09-09"},{"location":"plugins/jellyseerr/release-notes/#changed","text":"Update package metadata and dependencies ( #5 ) Fix internal name for 'announced' minimum availability ( #6 )","title":"Changed"},{"location":"plugins/jellyseerr/release-notes/#v010-2023-04-15","text":"First release of the Jellyseerr plugin for Buildarr.","title":"v0.1.0 - 2023-04-15"},{"location":"plugins/jellyseerr/configuration/host/","text":"Host Configuration # By default, Buildarr will look for a single instance at http://jellyseerr:5055 . Most configurations are different, and to accommodate those, you can configure how Buildarr connects to individual Jellyseerr instances. Configuration of a single Jellyseerr instance: jellyseerr : hostname : \"jellyseerr.example.com\" port : 5055 protocol : \"http\" api_key : \"...\" # API key is required. settings : ... Configuration of multiple instances: jellyseerr : # Configuration and settings common to all instances. port : 5055 settings : ... instances : # Jellyseerr instance 1-specific configuration. jellyseerr1 : hostname : \"jellyseerr1.example.com\" api_key : \"...\" # API key is required. settings : ... # Jellyseerr instance 2-specific configuration. jellyseerr2 : hostname : \"jellyseerr2.example.com\" api_key : \"...\" # API key is required. settings : ... hostname : NonEmptyStr = 'jellyseerr' class-attribute instance-attribute # Hostname of the Jellyseerr instance to connect to. When defining a single instance using the global jellyseerr configuration block, the default hostname is jellyseerr . When using multiple instance-specific configurations, the default hostname is the name given to the instance in the instances attribute. jellyseerr : instances : jellyseerr1 : # <--- This becomes the default hostname ... port : Port = 5055 class-attribute instance-attribute # Port number of the Jellyseerr instance to connect to. protocol : JellyseerrProtocol = 'http' class-attribute instance-attribute # Communication protocol to use to connect to Jellyseerr. Values: http https api_key : Optional [ JellyseerrApiKey ] = None class-attribute instance-attribute # API key to use to authenticate with the Jellyseerr instance. This attribute is required. Buildarr is unable to automatically fetch the Jellyseerr API key. version : Optional [ str ] = None class-attribute instance-attribute # The expected version of the Jellyseerr instance. If undefined or set to None , the version is auto-detected. This value is also used when generating a Docker Compose file. When undefined or set to None , the version tag will be set to latest . settings : JellyseerrSettings = JellyseerrSettings () class-attribute instance-attribute # Jellyseerr settings. Configuration options for Jellyseerr itself are set within this structure.","title":"Host Configuration"},{"location":"plugins/jellyseerr/configuration/host/#host-configuration","text":"By default, Buildarr will look for a single instance at http://jellyseerr:5055 . Most configurations are different, and to accommodate those, you can configure how Buildarr connects to individual Jellyseerr instances. Configuration of a single Jellyseerr instance: jellyseerr : hostname : \"jellyseerr.example.com\" port : 5055 protocol : \"http\" api_key : \"...\" # API key is required. settings : ... Configuration of multiple instances: jellyseerr : # Configuration and settings common to all instances. port : 5055 settings : ... instances : # Jellyseerr instance 1-specific configuration. jellyseerr1 : hostname : \"jellyseerr1.example.com\" api_key : \"...\" # API key is required. settings : ... # Jellyseerr instance 2-specific configuration. jellyseerr2 : hostname : \"jellyseerr2.example.com\" api_key : \"...\" # API key is required. settings : ...","title":"Host Configuration"},{"location":"plugins/jellyseerr/configuration/host/#buildarr_jellyseerr.config.JellyseerrInstanceConfig.hostname","text":"Hostname of the Jellyseerr instance to connect to. When defining a single instance using the global jellyseerr configuration block, the default hostname is jellyseerr . When using multiple instance-specific configurations, the default hostname is the name given to the instance in the instances attribute. jellyseerr : instances : jellyseerr1 : # <--- This becomes the default hostname ...","title":"hostname"},{"location":"plugins/jellyseerr/configuration/host/#buildarr_jellyseerr.config.JellyseerrInstanceConfig.port","text":"Port number of the Jellyseerr instance to connect to.","title":"port"},{"location":"plugins/jellyseerr/configuration/host/#buildarr_jellyseerr.config.JellyseerrInstanceConfig.protocol","text":"Communication protocol to use to connect to Jellyseerr. Values: http https","title":"protocol"},{"location":"plugins/jellyseerr/configuration/host/#buildarr_jellyseerr.config.JellyseerrInstanceConfig.api_key","text":"API key to use to authenticate with the Jellyseerr instance. This attribute is required. Buildarr is unable to automatically fetch the Jellyseerr API key.","title":"api_key"},{"location":"plugins/jellyseerr/configuration/host/#buildarr_jellyseerr.config.JellyseerrInstanceConfig.version","text":"The expected version of the Jellyseerr instance. If undefined or set to None , the version is auto-detected. This value is also used when generating a Docker Compose file. When undefined or set to None , the version tag will be set to latest .","title":"version"},{"location":"plugins/jellyseerr/configuration/host/#buildarr_jellyseerr.config.JellyseerrInstanceConfig.settings","text":"Jellyseerr settings. Configuration options for Jellyseerr itself are set within this structure.","title":"settings"},{"location":"plugins/jellyseerr/configuration/settings/general/","text":"General # These settings adjust the general behaviour for how Jellyseerr is accessed, and discovers content. jellyseerr : settings : general : application_title : \"Jellyseerr\" application_url : null enable_proxy_support : false enable_csrf_protection : false enable_image_caching : false display_language : \"en\" discover_region : null discover_languages : [] hide_available_media : false allow_partial_series_requests : true application_title : NonEmptyStr = 'Jellyseerr' class-attribute instance-attribute # Name of the Jellyseerr instance, as shown in the browser title. application_url : Optional [ AnyHttpUrl ] = None class-attribute instance-attribute # Application URL to use when generating links to Jellyseerr. If set to null , use the URL the browser is currently using to access Jellyseerr. enable_proxy_support : bool = False class-attribute instance-attribute # Allow Jellyseerr to correctly register client IP addresses behind a proxy. When this attribute is changed, a restart of Jellyseerr is required. enable_csrf_protection : bool = False class-attribute instance-attribute # Set external API access to read-only (requires HTTPS). When this attribute is changed, a restart of Jellyseerr is required. enable_image_caching : bool = False class-attribute instance-attribute # Cache externally sourced images. Take care when enabling this option, as this requires a significant amount of disk space. display_language : LowerCaseNonEmptyStr = 'en' class-attribute instance-attribute # The display language of the Jellyseerr UI. Use the ISO 639-1 two-character language code when defining this attribute. discover_region : Optional [ UpperCaseStr ] = None class-attribute instance-attribute # Filter content by regional availability. If set to null , discovers content for all regions. Use the ISO 3166-1 two-character country code when defining this attribute. discover_languages : Set [ LowerCaseStr ] = set () class-attribute instance-attribute # Filter content by original language. If empty, discovers all languages. Use ISO 639-1 two-character language codes when defining this attribute. hide_available_media : bool = False class-attribute instance-attribute # Hide content that is already available in the media library in the UI. allow_partial_series_requests : bool = True class-attribute instance-attribute # Allow making media requests for only part of a series.","title":"General"},{"location":"plugins/jellyseerr/configuration/settings/general/#general","text":"These settings adjust the general behaviour for how Jellyseerr is accessed, and discovers content. jellyseerr : settings : general : application_title : \"Jellyseerr\" application_url : null enable_proxy_support : false enable_csrf_protection : false enable_image_caching : false display_language : \"en\" discover_region : null discover_languages : [] hide_available_media : false allow_partial_series_requests : true","title":"General"},{"location":"plugins/jellyseerr/configuration/settings/general/#buildarr_jellyseerr.config.settings.general.JellyseerrGeneralSettings.application_title","text":"Name of the Jellyseerr instance, as shown in the browser title.","title":"application_title"},{"location":"plugins/jellyseerr/configuration/settings/general/#buildarr_jellyseerr.config.settings.general.JellyseerrGeneralSettings.application_url","text":"Application URL to use when generating links to Jellyseerr. If set to null , use the URL the browser is currently using to access Jellyseerr.","title":"application_url"},{"location":"plugins/jellyseerr/configuration/settings/general/#buildarr_jellyseerr.config.settings.general.JellyseerrGeneralSettings.enable_proxy_support","text":"Allow Jellyseerr to correctly register client IP addresses behind a proxy. When this attribute is changed, a restart of Jellyseerr is required.","title":"enable_proxy_support"},{"location":"plugins/jellyseerr/configuration/settings/general/#buildarr_jellyseerr.config.settings.general.JellyseerrGeneralSettings.enable_csrf_protection","text":"Set external API access to read-only (requires HTTPS). When this attribute is changed, a restart of Jellyseerr is required.","title":"enable_csrf_protection"},{"location":"plugins/jellyseerr/configuration/settings/general/#buildarr_jellyseerr.config.settings.general.JellyseerrGeneralSettings.enable_image_caching","text":"Cache externally sourced images. Take care when enabling this option, as this requires a significant amount of disk space.","title":"enable_image_caching"},{"location":"plugins/jellyseerr/configuration/settings/general/#buildarr_jellyseerr.config.settings.general.JellyseerrGeneralSettings.display_language","text":"The display language of the Jellyseerr UI. Use the ISO 639-1 two-character language code when defining this attribute.","title":"display_language"},{"location":"plugins/jellyseerr/configuration/settings/general/#buildarr_jellyseerr.config.settings.general.JellyseerrGeneralSettings.discover_region","text":"Filter content by regional availability. If set to null , discovers content for all regions. Use the ISO 3166-1 two-character country code when defining this attribute.","title":"discover_region"},{"location":"plugins/jellyseerr/configuration/settings/general/#buildarr_jellyseerr.config.settings.general.JellyseerrGeneralSettings.discover_languages","text":"Filter content by original language. If empty, discovers all languages. Use ISO 639-1 two-character language codes when defining this attribute.","title":"discover_languages"},{"location":"plugins/jellyseerr/configuration/settings/general/#buildarr_jellyseerr.config.settings.general.JellyseerrGeneralSettings.hide_available_media","text":"Hide content that is already available in the media library in the UI.","title":"hide_available_media"},{"location":"plugins/jellyseerr/configuration/settings/general/#buildarr_jellyseerr.config.settings.general.JellyseerrGeneralSettings.allow_partial_series_requests","text":"Allow making media requests for only part of a series.","title":"allow_partial_series_requests"},{"location":"plugins/jellyseerr/configuration/settings/jellyfin/","text":"Jellyfin # Jellyfin is an open source self-hosted media server for managing and making your media library available for streaming across your network (or over a VPN) using client apps on your PC, phone or TV. Jellyseerr links with Jellyfin, allows users to login to Jellyseerr using their Jellyfin credentials, and request media not yet available in Jellyfin for download. Jellyseerr can also conect to the media server Jellyfin was forked from, Emby , using the same jellyfin configuration section. Initialisation # Before Jellyseerr can be made available to users, the Jellyfin admin user credentials and libraries to scan need to be configured. When setting up Jellyseerr manually, this is done by navigating to https://localhost:5055/setup and following the on-screen instructions. Buildarr supports initialising Jellyseerr with this Jellyfin configuration automatically. To initialise the Jellyseerr instance automatically within Buildarr, make sure the below attributes are defined in the Buildarr configuration, and then start Buildarr as normal. --- jellyseerr : hostname : \"localhost\" port : 5055 protocol : \"http\" api_key : \"<API key>\" # Required. Check `settings.json` in the config volume to get the value. settings : jellyfin : server_url : \"http://localhost:8096\" # Jellyfin server URL, preferably direct (no proxy). username : \"admin\" # Jellyfin server admin user. password : \"secure-password\" # Jellyfin server admin user password. email_address : \"admin@example.com\" # Jellyfin server admin email address. # Jellyfin media libraries to monitor. # This can be used to change what libraries Jellyseerr monitors, # even after it is initialised. libraries : - \"Shows\" - \"Movies\" - \"Anime\" - \"Anime Movies\" Once Jellyseerr is initialised, with the exception of libraries , the below attributes cannot be modified (and are no longer managed by Buildarr). server_url : Optional [ str ] = None class-attribute instance-attribute # Server URL that Jellyseerr will use to communicate with Jellyfin. username : Optional [ str ] = None class-attribute instance-attribute # Username of the Jellyfin administrator user that Jellyseerr will use. password : Optional [ SecretStr ] = None class-attribute instance-attribute # Jellyfin administrator user password. email_address : Optional [ EmailStr ] = None class-attribute instance-attribute # Email address associated with the Jellyfin administrator user. libraries : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # The Jellyfin libraries that Jellyseerr will use to scan for available titles. Configuration # After initialising Jellyseerr, the following configuration attributes are available to manage the corresponding settings on the instance. These attributes can be modified at any time. external_url : Optional [ AnyHttpUrl ] = None class-attribute instance-attribute # The externally-accessible URL for the Jellyfin server. This is used to create usable URLs to Jellyfin libraries in the Jellyseerr UI. libraries : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # The Jellyfin libraries that Jellyseerr will use to scan for available titles.","title":"Jellyfin"},{"location":"plugins/jellyseerr/configuration/settings/jellyfin/#jellyfin","text":"Jellyfin is an open source self-hosted media server for managing and making your media library available for streaming across your network (or over a VPN) using client apps on your PC, phone or TV. Jellyseerr links with Jellyfin, allows users to login to Jellyseerr using their Jellyfin credentials, and request media not yet available in Jellyfin for download. Jellyseerr can also conect to the media server Jellyfin was forked from, Emby , using the same jellyfin configuration section.","title":"Jellyfin"},{"location":"plugins/jellyseerr/configuration/settings/jellyfin/#initialisation","text":"Before Jellyseerr can be made available to users, the Jellyfin admin user credentials and libraries to scan need to be configured. When setting up Jellyseerr manually, this is done by navigating to https://localhost:5055/setup and following the on-screen instructions. Buildarr supports initialising Jellyseerr with this Jellyfin configuration automatically. To initialise the Jellyseerr instance automatically within Buildarr, make sure the below attributes are defined in the Buildarr configuration, and then start Buildarr as normal. --- jellyseerr : hostname : \"localhost\" port : 5055 protocol : \"http\" api_key : \"<API key>\" # Required. Check `settings.json` in the config volume to get the value. settings : jellyfin : server_url : \"http://localhost:8096\" # Jellyfin server URL, preferably direct (no proxy). username : \"admin\" # Jellyfin server admin user. password : \"secure-password\" # Jellyfin server admin user password. email_address : \"admin@example.com\" # Jellyfin server admin email address. # Jellyfin media libraries to monitor. # This can be used to change what libraries Jellyseerr monitors, # even after it is initialised. libraries : - \"Shows\" - \"Movies\" - \"Anime\" - \"Anime Movies\" Once Jellyseerr is initialised, with the exception of libraries , the below attributes cannot be modified (and are no longer managed by Buildarr).","title":"Initialisation"},{"location":"plugins/jellyseerr/configuration/settings/jellyfin/#buildarr_jellyseerr.config.settings.jellyfin.JellyseerrJellyfinSettings.server_url","text":"Server URL that Jellyseerr will use to communicate with Jellyfin.","title":"server_url"},{"location":"plugins/jellyseerr/configuration/settings/jellyfin/#buildarr_jellyseerr.config.settings.jellyfin.JellyseerrJellyfinSettings.username","text":"Username of the Jellyfin administrator user that Jellyseerr will use.","title":"username"},{"location":"plugins/jellyseerr/configuration/settings/jellyfin/#buildarr_jellyseerr.config.settings.jellyfin.JellyseerrJellyfinSettings.password","text":"Jellyfin administrator user password.","title":"password"},{"location":"plugins/jellyseerr/configuration/settings/jellyfin/#buildarr_jellyseerr.config.settings.jellyfin.JellyseerrJellyfinSettings.email_address","text":"Email address associated with the Jellyfin administrator user.","title":"email_address"},{"location":"plugins/jellyseerr/configuration/settings/jellyfin/#buildarr_jellyseerr.config.settings.jellyfin.JellyseerrJellyfinSettings.libraries","text":"The Jellyfin libraries that Jellyseerr will use to scan for available titles.","title":"libraries"},{"location":"plugins/jellyseerr/configuration/settings/jellyfin/#configuration","text":"After initialising Jellyseerr, the following configuration attributes are available to manage the corresponding settings on the instance. These attributes can be modified at any time.","title":"Configuration"},{"location":"plugins/jellyseerr/configuration/settings/jellyfin/#buildarr_jellyseerr.config.settings.jellyfin.JellyseerrJellyfinSettings.external_url","text":"The externally-accessible URL for the Jellyfin server. This is used to create usable URLs to Jellyfin libraries in the Jellyseerr UI.","title":"external_url"},{"location":"plugins/jellyseerr/configuration/settings/jellyfin/#buildarr_jellyseerr.config.settings.jellyfin.JellyseerrJellyfinSettings.libraries","text":"The Jellyfin libraries that Jellyseerr will use to scan for available titles.","title":"libraries"},{"location":"plugins/jellyseerr/configuration/settings/notifications/","text":"Notifications # Jellyseerr supports pushing notifications to external applications and services. These are not only for Jellyseerr to communicate with the outside world, they can also be useful for monitoring since the user can be alerted, by a service of their choice, when some kind of event (or problem) occurs. For more information on configuring push notifications for Jellyseerr, refer to this guide in the Overseerr documentation. Enabling notifications # To enable push notifications to a service, simply set enable: true in the settings, as shown below. jellyseerr : settings : notifications : webpush : enable : true enable : bool = False class-attribute instance-attribute # Enable sending notifications to a service. If enabled, some configuration attributes for the service will be required. Configuring notification types # Some service types support fine-grained configuration of the type of notifications that get sent. This is done by defining the optional notification_types configuration attribute in the settings for that service. jellyseerr : settings : notifications : slack : enable : true webhook_url : \"...\" notification_types : - \"media-pending\" - \"media-approved\" - \"media-available\" - \"media-failed\" - \"test-notification\" - \"media-declined\" - \"media-auto-approved\" - \"issue-created\" - \"issue-comment\" - \"issue-resolved\" - \"issue-reopened\" - \"media-auto-requested\" Discord # Send notifications to a Discord server using a webhook URL. webhook_url : Optional [ AnyHttpUrl ] = None class-attribute instance-attribute # Discord server webhook URL. Required if Discord notifications are enabled. username : Optional [ str ] = None class-attribute instance-attribute # The username to post as. If unset, blank or set to None , use the default username set to the webhook URL. avatar_url : Optional [ AnyHttpUrl ] = None class-attribute instance-attribute # A URL to an custom avatar to use when posting. If unset, blank or set to None , use the default avatar for the user. enable_mentions : bool = True class-attribute instance-attribute # Allow the user to mention when posting. notification_types : Set [ NotificationType ] = set () class-attribute instance-attribute # The notification types to send to the service. By default no notifications are sent, even if enabled, so remember to set the types of events you'd like to get notified for. Values: media-pending media-approved media-available media-failed test-notification media-declined media-auto-approved issue-created issue-comment issue-resolved issue-reopened media-auto-requested Email # Send notification emails via an SMTP server. In order for Jellyseerr to send emails to Jellyseerr users, an SMTP server needs to be configured here. Note If the jellyseerr.settings.general.application_url attribute is configured, Jellyseerr will explicitly set the origin server hostname when connecting to the SMTP host. require_user_email : bool = False class-attribute instance-attribute # Require Jellyseerr users to have an email address configured, so emails can be sent to it. sender_name : Optional [ str ] = 'Jellyseerr' class-attribute instance-attribute # Configure a friendly name for the email sender. sender_address : Optional [ EmailStr ] = None class-attribute instance-attribute # The From email address to send the email as. If sending email to public mailboxes, this should be set to an email address owned/controlled by the server being used to send the mail. Required if email notifications are enabled. smtp_host : Optional [ str ] = None class-attribute instance-attribute # The SMTP server to sent mail from. Required if email notifications are enabled. smtp_port : Port = 587 class-attribute instance-attribute # The mail submission port of the SMTP server. The default is the standard SMTP submission port, used for STARTTLS. If using implicit TLS (SMTPS), this should be set to the standard port of 465 . encryption_method : EncryptionMethod = EncryptionMethod . starttls_prefer class-attribute instance-attribute # The encryption method to use to communicate with the SMTP server. Values (in order of security): smtps - Implicit TLS (SMTPS) starttls-strict - Require STARTTLS starttls-prefer - Use STARTTLS if available, unencrypted fallback ( not recommended ) none - No encryption ( not recommended ) Warning The starttls-prefer and none encryption methods send (or can send) username and password credentials unencrypted over the network. Do not use them unless you know what you are doing. allow_selfsigned_certificates : bool = False class-attribute instance-attribute # Allow self-signed certificates for the SMTP server host certificate. Warning Generally this option shouldn't be enabled, even on a private mail server, as any mail server can get free TLS certificates using services such as Let's Encrypt . Never enable this option when using a public email service. smtp_username : Optional [ str ] = None class-attribute instance-attribute # SMTP server username, if required (which is usually the case). smtp_password : Optional [ SecretStr ] = None class-attribute instance-attribute # SMTP server user password, if required (which is usually the case). pgp_private_key : Optional [ SecretStr ] = None class-attribute instance-attribute # An optional PGP private key to use to sign (and if configured by users, encrypt) sent emails. When configuring the PGP keys, be sure to keep the entire contents of the key intact. For example, private keys always begin with -----BEGIN PGP PRIVATE KEY BLOCK----- and end with -----END PGP PRIVATE KEY BLOCK----- . pgp_password : Optional [ SecretStr ] = None class-attribute instance-attribute # An optional password for unlocking the PGP private key. Gotify # Send Jellyseerrr notifications to a Gotify server. server_url : Optional [ AnyHttpUrl ] = None class-attribute instance-attribute # The URL that Jellyseerr will use to access the Gotify server. Required if Gotify notifications are enabled. access_token : Optional [ SecretStr ] = None class-attribute instance-attribute # The generated application token for Jellyseerr in Gotify. Required if Gotify notifications are enabled. notification_types : Set [ NotificationType ] = set () class-attribute instance-attribute # The notification types to send to the service. By default no notifications are sent, even if enabled, so remember to set the types of events you'd like to get notified for. Values: media-pending media-approved media-available media-failed test-notification media-declined media-auto-approved issue-created issue-comment issue-resolved issue-reopened media-auto-requested LunaSea # Send notifications to the LunaSea app. webhook_url : Optional [ AnyHttpUrl ] = None class-attribute instance-attribute # The device- or user based LunaSea webhook URL to send notifications to. Required if LunaSea notifications are enabled. profile_name : Optional [ str ] = None class-attribute instance-attribute # The LunaSea profile to send notications to. If set to null , uses the default profile. notification_types : Set [ NotificationType ] = set () class-attribute instance-attribute # The notification types to send to the service. By default no notifications are sent, even if enabled, so remember to set the types of events you'd like to get notified for. Values: media-pending media-approved media-available media-failed test-notification media-declined media-auto-approved issue-created issue-comment issue-resolved issue-reopened media-auto-requested Pushbullet # Send notifications to one or more devices via Pushbullet. access_token : Optional [ SecretStr ] = None class-attribute instance-attribute # The generated application token for Jellyseerr in Pushbullet. Required if Pushbullet notifications are enabled. channel_tag : Optional [ str ] = None class-attribute instance-attribute # Optional channel tag for pushing notifications to any devices subscribed to it. notification_types : Set [ NotificationType ] = set () class-attribute instance-attribute # The notification types to send to the service. By default no notifications are sent, even if enabled, so remember to set the types of events you'd like to get notified for. Values: media-pending media-approved media-available media-failed test-notification media-declined media-auto-approved issue-created issue-comment issue-resolved issue-reopened media-auto-requested Pushover # Send notifications to one or more devices via Pushover. api_key : Optional [ PushoverApiKey ] = None class-attribute instance-attribute # API key registered for Jellyseerr in Pushover. Required if Pushover notifications are enabled. user_key : Optional [ PushoverApiKey ] = None class-attribute instance-attribute # User key to authenticate with on Pushover. Required if Pushover notifications are enabled. notification_types : Set [ NotificationType ] = set () class-attribute instance-attribute # The notification types to send to the service. By default no notifications are sent, even if enabled, so remember to set the types of events you'd like to get notified for. Values: media-pending media-approved media-available media-failed test-notification media-declined media-auto-approved issue-created issue-comment issue-resolved issue-reopened media-auto-requested Slack # Send notifications to a Slack channel. webhook_url : Optional [ AnyHttpUrl ] = None class-attribute instance-attribute # Slack server webhook URL. notification_types : Set [ NotificationType ] = set () class-attribute instance-attribute # The notification types to send to the service. By default no notifications are sent, even if enabled, so remember to set the types of events you'd like to get notified for. Values: media-pending media-approved media-available media-failed test-notification media-declined media-auto-approved issue-created issue-comment issue-resolved issue-reopened media-auto-requested Telegram # Send notifications to a group chat in Telegram. If username is set, also allows Jellyseerr users to setup their own chats with the Jellyseerr Telegram bot to receive notifications. access_token : Optional [ SecretStr ] = None class-attribute instance-attribute # Access token provided for the Telegram bot by BotFather at the end of the creation process. Required if Telegram notifications are enabled. username : Optional [ str ] = None class-attribute instance-attribute # The username of the Telegram bot. If this value is configured, Jellyseerr users will be able to click a link to start a chat with your bot and configure their own personal notifications. chat_id : Optional [ str ] = None class-attribute instance-attribute # Chat ID of the group chat to send messages to. Required if Telegram notifications are enabled. send_silently : bool = False class-attribute instance-attribute # When set to true , sends messages without notification sounds. notification_types : Set [ NotificationType ] = set () class-attribute instance-attribute # The notification types to send to the service. By default no notifications are sent, even if enabled, so remember to set the types of events you'd like to get notified for. Values: media-pending media-approved media-available media-failed test-notification media-declined media-auto-approved issue-created issue-comment issue-resolved issue-reopened media-auto-requested Webhook # Send a custom JSON payload to any endpoint for specific notification events. webhook_url : Optional [ AnyHttpUrl ] = None class-attribute instance-attribute # The webhook URL to post notifications to. The rendered payload template will be the body of the request. authorization_header : Optional [ SecretStr ] = None class-attribute instance-attribute # Thie value to be set in the Authorization HTTP header. This is not always required by the webhook provider. payload_template : NonEmptyStr = '<JSON template>' class-attribute instance-attribute # The template for the JSON payload sent to the webhook URL. For help on configuring this option, refer to this guide in the Overseerr documentation. notification_types : Set [ NotificationType ] = set () class-attribute instance-attribute # The notification types to send to the service. By default no notifications are sent, even if enabled, so remember to set the types of events you'd like to get notified for. Values: media-pending media-approved media-available media-failed test-notification media-declined media-auto-approved issue-created issue-comment issue-resolved issue-reopened media-auto-requested Webpush (Browser Push Notifiations) # To send push notifications to your browser, simply enable it in the Buildarr configuration. Note In order to receive web push notifications, Jellyseerr must be served over HTTPS. jellyseerr : settings : notifications : webpush : enable : true","title":"Notifications"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#notifications","text":"Jellyseerr supports pushing notifications to external applications and services. These are not only for Jellyseerr to communicate with the outside world, they can also be useful for monitoring since the user can be alerted, by a service of their choice, when some kind of event (or problem) occurs. For more information on configuring push notifications for Jellyseerr, refer to this guide in the Overseerr documentation.","title":"Notifications"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#enabling-notifications","text":"To enable push notifications to a service, simply set enable: true in the settings, as shown below. jellyseerr : settings : notifications : webpush : enable : true","title":"Enabling notifications"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.base.NotificationsSettingsBase.enable","text":"Enable sending notifications to a service. If enabled, some configuration attributes for the service will be required.","title":"enable"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#configuring-notification-types","text":"Some service types support fine-grained configuration of the type of notifications that get sent. This is done by defining the optional notification_types configuration attribute in the settings for that service. jellyseerr : settings : notifications : slack : enable : true webhook_url : \"...\" notification_types : - \"media-pending\" - \"media-approved\" - \"media-available\" - \"media-failed\" - \"test-notification\" - \"media-declined\" - \"media-auto-approved\" - \"issue-created\" - \"issue-comment\" - \"issue-resolved\" - \"issue-reopened\" - \"media-auto-requested\"","title":"Configuring notification types"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#discord","text":"Send notifications to a Discord server using a webhook URL.","title":"Discord"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.discord.DiscordSettings.webhook_url","text":"Discord server webhook URL. Required if Discord notifications are enabled.","title":"webhook_url"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.discord.DiscordSettings.username","text":"The username to post as. If unset, blank or set to None , use the default username set to the webhook URL.","title":"username"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.discord.DiscordSettings.avatar_url","text":"A URL to an custom avatar to use when posting. If unset, blank or set to None , use the default avatar for the user.","title":"avatar_url"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.discord.DiscordSettings.enable_mentions","text":"Allow the user to mention when posting.","title":"enable_mentions"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.notification_types.NotificationTypesSettingsBase.notification_types","text":"The notification types to send to the service. By default no notifications are sent, even if enabled, so remember to set the types of events you'd like to get notified for. Values: media-pending media-approved media-available media-failed test-notification media-declined media-auto-approved issue-created issue-comment issue-resolved issue-reopened media-auto-requested","title":"notification_types"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#email","text":"Send notification emails via an SMTP server. In order for Jellyseerr to send emails to Jellyseerr users, an SMTP server needs to be configured here. Note If the jellyseerr.settings.general.application_url attribute is configured, Jellyseerr will explicitly set the origin server hostname when connecting to the SMTP host.","title":"Email"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.email.EmailSettings.require_user_email","text":"Require Jellyseerr users to have an email address configured, so emails can be sent to it.","title":"require_user_email"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.email.EmailSettings.sender_name","text":"Configure a friendly name for the email sender.","title":"sender_name"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.email.EmailSettings.sender_address","text":"The From email address to send the email as. If sending email to public mailboxes, this should be set to an email address owned/controlled by the server being used to send the mail. Required if email notifications are enabled.","title":"sender_address"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.email.EmailSettings.smtp_host","text":"The SMTP server to sent mail from. Required if email notifications are enabled.","title":"smtp_host"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.email.EmailSettings.smtp_port","text":"The mail submission port of the SMTP server. The default is the standard SMTP submission port, used for STARTTLS. If using implicit TLS (SMTPS), this should be set to the standard port of 465 .","title":"smtp_port"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.email.EmailSettings.encryption_method","text":"The encryption method to use to communicate with the SMTP server. Values (in order of security): smtps - Implicit TLS (SMTPS) starttls-strict - Require STARTTLS starttls-prefer - Use STARTTLS if available, unencrypted fallback ( not recommended ) none - No encryption ( not recommended ) Warning The starttls-prefer and none encryption methods send (or can send) username and password credentials unencrypted over the network. Do not use them unless you know what you are doing.","title":"encryption_method"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.email.EmailSettings.allow_selfsigned_certificates","text":"Allow self-signed certificates for the SMTP server host certificate. Warning Generally this option shouldn't be enabled, even on a private mail server, as any mail server can get free TLS certificates using services such as Let's Encrypt . Never enable this option when using a public email service.","title":"allow_selfsigned_certificates"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.email.EmailSettings.smtp_username","text":"SMTP server username, if required (which is usually the case).","title":"smtp_username"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.email.EmailSettings.smtp_password","text":"SMTP server user password, if required (which is usually the case).","title":"smtp_password"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.email.EmailSettings.pgp_private_key","text":"An optional PGP private key to use to sign (and if configured by users, encrypt) sent emails. When configuring the PGP keys, be sure to keep the entire contents of the key intact. For example, private keys always begin with -----BEGIN PGP PRIVATE KEY BLOCK----- and end with -----END PGP PRIVATE KEY BLOCK----- .","title":"pgp_private_key"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.email.EmailSettings.pgp_password","text":"An optional password for unlocking the PGP private key.","title":"pgp_password"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#gotify","text":"Send Jellyseerrr notifications to a Gotify server.","title":"Gotify"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.gotify.GotifySettings.server_url","text":"The URL that Jellyseerr will use to access the Gotify server. Required if Gotify notifications are enabled.","title":"server_url"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.gotify.GotifySettings.access_token","text":"The generated application token for Jellyseerr in Gotify. Required if Gotify notifications are enabled.","title":"access_token"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.notification_types.NotificationTypesSettingsBase.notification_types","text":"The notification types to send to the service. By default no notifications are sent, even if enabled, so remember to set the types of events you'd like to get notified for. Values: media-pending media-approved media-available media-failed test-notification media-declined media-auto-approved issue-created issue-comment issue-resolved issue-reopened media-auto-requested","title":"notification_types"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#lunasea","text":"Send notifications to the LunaSea app.","title":"LunaSea"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.lunasea.LunaseaSettings.webhook_url","text":"The device- or user based LunaSea webhook URL to send notifications to. Required if LunaSea notifications are enabled.","title":"webhook_url"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.lunasea.LunaseaSettings.profile_name","text":"The LunaSea profile to send notications to. If set to null , uses the default profile.","title":"profile_name"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.notification_types.NotificationTypesSettingsBase.notification_types","text":"The notification types to send to the service. By default no notifications are sent, even if enabled, so remember to set the types of events you'd like to get notified for. Values: media-pending media-approved media-available media-failed test-notification media-declined media-auto-approved issue-created issue-comment issue-resolved issue-reopened media-auto-requested","title":"notification_types"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#pushbullet","text":"Send notifications to one or more devices via Pushbullet.","title":"Pushbullet"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.pushbullet.PushbulletSettings.access_token","text":"The generated application token for Jellyseerr in Pushbullet. Required if Pushbullet notifications are enabled.","title":"access_token"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.pushbullet.PushbulletSettings.channel_tag","text":"Optional channel tag for pushing notifications to any devices subscribed to it.","title":"channel_tag"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.notification_types.NotificationTypesSettingsBase.notification_types","text":"The notification types to send to the service. By default no notifications are sent, even if enabled, so remember to set the types of events you'd like to get notified for. Values: media-pending media-approved media-available media-failed test-notification media-declined media-auto-approved issue-created issue-comment issue-resolved issue-reopened media-auto-requested","title":"notification_types"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#pushover","text":"Send notifications to one or more devices via Pushover.","title":"Pushover"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.pushover.PushoverSettings.api_key","text":"API key registered for Jellyseerr in Pushover. Required if Pushover notifications are enabled.","title":"api_key"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.pushover.PushoverSettings.user_key","text":"User key to authenticate with on Pushover. Required if Pushover notifications are enabled.","title":"user_key"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.notification_types.NotificationTypesSettingsBase.notification_types","text":"The notification types to send to the service. By default no notifications are sent, even if enabled, so remember to set the types of events you'd like to get notified for. Values: media-pending media-approved media-available media-failed test-notification media-declined media-auto-approved issue-created issue-comment issue-resolved issue-reopened media-auto-requested","title":"notification_types"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#slack","text":"Send notifications to a Slack channel.","title":"Slack"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.slack.SlackSettings.webhook_url","text":"Slack server webhook URL.","title":"webhook_url"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.notification_types.NotificationTypesSettingsBase.notification_types","text":"The notification types to send to the service. By default no notifications are sent, even if enabled, so remember to set the types of events you'd like to get notified for. Values: media-pending media-approved media-available media-failed test-notification media-declined media-auto-approved issue-created issue-comment issue-resolved issue-reopened media-auto-requested","title":"notification_types"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#telegram","text":"Send notifications to a group chat in Telegram. If username is set, also allows Jellyseerr users to setup their own chats with the Jellyseerr Telegram bot to receive notifications.","title":"Telegram"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.telegram.TelegramSettings.access_token","text":"Access token provided for the Telegram bot by BotFather at the end of the creation process. Required if Telegram notifications are enabled.","title":"access_token"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.telegram.TelegramSettings.username","text":"The username of the Telegram bot. If this value is configured, Jellyseerr users will be able to click a link to start a chat with your bot and configure their own personal notifications.","title":"username"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.telegram.TelegramSettings.chat_id","text":"Chat ID of the group chat to send messages to. Required if Telegram notifications are enabled.","title":"chat_id"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.telegram.TelegramSettings.send_silently","text":"When set to true , sends messages without notification sounds.","title":"send_silently"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.notification_types.NotificationTypesSettingsBase.notification_types","text":"The notification types to send to the service. By default no notifications are sent, even if enabled, so remember to set the types of events you'd like to get notified for. Values: media-pending media-approved media-available media-failed test-notification media-declined media-auto-approved issue-created issue-comment issue-resolved issue-reopened media-auto-requested","title":"notification_types"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#webhook","text":"Send a custom JSON payload to any endpoint for specific notification events.","title":"Webhook"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.webhook.WebhookSettings.webhook_url","text":"The webhook URL to post notifications to. The rendered payload template will be the body of the request.","title":"webhook_url"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.webhook.WebhookSettings.authorization_header","text":"Thie value to be set in the Authorization HTTP header. This is not always required by the webhook provider.","title":"authorization_header"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.webhook.WebhookSettings.payload_template","text":"The template for the JSON payload sent to the webhook URL. For help on configuring this option, refer to this guide in the Overseerr documentation.","title":"payload_template"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#buildarr_jellyseerr.config.settings.notifications.notification_types.NotificationTypesSettingsBase.notification_types","text":"The notification types to send to the service. By default no notifications are sent, even if enabled, so remember to set the types of events you'd like to get notified for. Values: media-pending media-approved media-available media-failed test-notification media-declined media-auto-approved issue-created issue-comment issue-resolved issue-reopened media-auto-requested","title":"notification_types"},{"location":"plugins/jellyseerr/configuration/settings/notifications/#webpush-browser-push-notifiations","text":"To send push notifications to your browser, simply enable it in the Buildarr configuration. Note In order to receive web push notifications, Jellyseerr must be served over HTTPS. jellyseerr : settings : notifications : webpush : enable : true","title":"Webpush (Browser Push Notifiations)"},{"location":"plugins/jellyseerr/configuration/settings/users/","text":"Users # These settings change the behaviour for how Jellyseerr allows logins from Jellyfin/Plex users, user permissions, and request limits. jellyseerr : settings : users : enable_local_signin : true enable_new_jellyfin_signin : true global_movie_request_limit : 0 global_movie_request_days : 7 global_series_request_limit : 0 global_series_request_days : 7 default_permissions : - \"request\" - \"request-4k\" enable_local_signin : bool = True class-attribute instance-attribute # Allow users to sign in using their email address and password, instead of Plex OAuth. enable_new_jellyfin_signin : bool = True class-attribute instance-attribute # Allow Jellyfin users to sign in without first being imported to Jellyseerr. global_movie_request_limit : int = Field ( 0 , ge = 0 , le = 100 ) class-attribute instance-attribute # The maximum number of movie requests within the selected number of days. 0 is unlimited. global_movie_request_days : int = Field ( 7 , ge = 1 , le = 100 ) class-attribute instance-attribute # The timespan that applies to the global movie request limit, in days. global_series_request_limit : int = Field ( 0 , ge = 0 , le = 100 ) class-attribute instance-attribute # The maximum number of series (TV show) requests within the selected number of days. 0 is unlimited. global_series_request_days : int = Field ( 7 , ge = 1 , le = 100 ) class-attribute instance-attribute # The timespan that applies to the global series request limit, in days. default_permissions : Set [ Permission ] = { Permission . request , Permission . request_4k } class-attribute instance-attribute # Permissions to grant to newly created users by default. Privileged permissions such as admin , manage-users , manage-requests , auto-approve , auto-approve-4k , and manage-issues generally should not be enabled by default. Instead, allow specific permissions under that category you wish to grant to new users. Values: admin - Full administrator access. Bypasses all other permission checks. manage-users - Grant permission to manage users. Users with this permission cannot modify users with or grant the admin privilege. manage-requests - Grant permission to manage media requests. All requests made by a user with this permission will be automatically approved. request-advanced - Grant permission to modify advanced media request options. request-view - Grant permission to view media requests submitted by other users. recent-view - Grant permission to view the list of recently added media. watchlist-view - Grant permission to view other users' Plex Watchlists. request - Grant permission to submit requests for non-4K media. request-movie - Grant permission to submit requests for non-4K movies. request-series - Grant permission to submit requests for non-4K series. auto-approve - Grant automatic approval for all non-4K media requests. auto-approve-movie - Grant automatic approval for non-4K movie requests. auto-approve-series - Grant automatic approval for non-4K series requests. auto-request - Grant permission to automatically submit requests for non-4K media via Plex Watchlist. auto-request-movie - Grant permission to automatically submit requests for non-4K movies via Plex Watchlist. auto-request-series - Grant permission to automatically submit requests for non-4K series via Plex Watchlist. request-4k - Grant permission to submit requests for 4K media. request-4k-movie - Grant permission to submit requests for 4K movies. request-4k-series - Grant permission to submit requests for 4K series. auto-approve-4k - Grant automatic approval for all 4K media requests. auto-approve-4k-movie - Grant automatic approval for 4K movie requests. auto-approve-4k-series - Grant automatic approval for 4K series requests. manage-issues - Grant permission to manage media issues. view-issues - Grant permission to report media issues. create-issues - Grant permission to view media issues reported by other users.","title":"Users"},{"location":"plugins/jellyseerr/configuration/settings/users/#users","text":"These settings change the behaviour for how Jellyseerr allows logins from Jellyfin/Plex users, user permissions, and request limits. jellyseerr : settings : users : enable_local_signin : true enable_new_jellyfin_signin : true global_movie_request_limit : 0 global_movie_request_days : 7 global_series_request_limit : 0 global_series_request_days : 7 default_permissions : - \"request\" - \"request-4k\"","title":"Users"},{"location":"plugins/jellyseerr/configuration/settings/users/#buildarr_jellyseerr.config.settings.users.JellyseerrUsersSettings.enable_local_signin","text":"Allow users to sign in using their email address and password, instead of Plex OAuth.","title":"enable_local_signin"},{"location":"plugins/jellyseerr/configuration/settings/users/#buildarr_jellyseerr.config.settings.users.JellyseerrUsersSettings.enable_new_jellyfin_signin","text":"Allow Jellyfin users to sign in without first being imported to Jellyseerr.","title":"enable_new_jellyfin_signin"},{"location":"plugins/jellyseerr/configuration/settings/users/#buildarr_jellyseerr.config.settings.users.JellyseerrUsersSettings.global_movie_request_limit","text":"The maximum number of movie requests within the selected number of days. 0 is unlimited.","title":"global_movie_request_limit"},{"location":"plugins/jellyseerr/configuration/settings/users/#buildarr_jellyseerr.config.settings.users.JellyseerrUsersSettings.global_movie_request_days","text":"The timespan that applies to the global movie request limit, in days.","title":"global_movie_request_days"},{"location":"plugins/jellyseerr/configuration/settings/users/#buildarr_jellyseerr.config.settings.users.JellyseerrUsersSettings.global_series_request_limit","text":"The maximum number of series (TV show) requests within the selected number of days. 0 is unlimited.","title":"global_series_request_limit"},{"location":"plugins/jellyseerr/configuration/settings/users/#buildarr_jellyseerr.config.settings.users.JellyseerrUsersSettings.global_series_request_days","text":"The timespan that applies to the global series request limit, in days.","title":"global_series_request_days"},{"location":"plugins/jellyseerr/configuration/settings/users/#buildarr_jellyseerr.config.settings.users.JellyseerrUsersSettings.default_permissions","text":"Permissions to grant to newly created users by default. Privileged permissions such as admin , manage-users , manage-requests , auto-approve , auto-approve-4k , and manage-issues generally should not be enabled by default. Instead, allow specific permissions under that category you wish to grant to new users. Values: admin - Full administrator access. Bypasses all other permission checks. manage-users - Grant permission to manage users. Users with this permission cannot modify users with or grant the admin privilege. manage-requests - Grant permission to manage media requests. All requests made by a user with this permission will be automatically approved. request-advanced - Grant permission to modify advanced media request options. request-view - Grant permission to view media requests submitted by other users. recent-view - Grant permission to view the list of recently added media. watchlist-view - Grant permission to view other users' Plex Watchlists. request - Grant permission to submit requests for non-4K media. request-movie - Grant permission to submit requests for non-4K movies. request-series - Grant permission to submit requests for non-4K series. auto-approve - Grant automatic approval for all non-4K media requests. auto-approve-movie - Grant automatic approval for non-4K movie requests. auto-approve-series - Grant automatic approval for non-4K series requests. auto-request - Grant permission to automatically submit requests for non-4K media via Plex Watchlist. auto-request-movie - Grant permission to automatically submit requests for non-4K movies via Plex Watchlist. auto-request-series - Grant permission to automatically submit requests for non-4K series via Plex Watchlist. request-4k - Grant permission to submit requests for 4K media. request-4k-movie - Grant permission to submit requests for 4K movies. request-4k-series - Grant permission to submit requests for 4K series. auto-approve-4k - Grant automatic approval for all 4K media requests. auto-approve-4k-movie - Grant automatic approval for 4K movie requests. auto-approve-4k-series - Grant automatic approval for 4K series requests. manage-issues - Grant permission to manage media issues. view-issues - Grant permission to report media issues. create-issues - Grant permission to view media issues reported by other users.","title":"default_permissions"},{"location":"plugins/jellyseerr/configuration/settings/services/radarr/","text":"Radarr # Jellyseerr relies on Radarr for tracking, downloading and managing local copies of movies. When a request is made for a movie, Jellyseerr will add it to Radarr. Note At the time of release, a Radarr plugin is not yet available for Buildarr. Until one is released, an API key must be specified when adding a Radarr instance to Jellyseerr. A common usage pattern is having multiple Radarr instances, one for non-4K movies and another for 4K movies: jellyseerr : settings : sonarr : delete_unmanaged : false definitions : \"Radarr (HD)\" : is_default_server : true is_4k_server : false hostname : \"localhost\" port : 7878 use_ssl : false api_key : \"...\" root_folder : \"/data/media/movies/hd\" quality_profile : \"HD Movies\" minimum_availability : \"released\" tags : [] enable_scan : false enable_automatic_search : true \"Radarr (4K)\" : is_default_server : true is_4k_server : true hostname : \"localhost\" port : 7879 use_ssl : false api_key : \"...\" root_folder : \"/data/media/movies/4k\" quality_profile : \"4K Movies\" minimum_availability : \"released\" tags : [] enable_scan : false enable_automatic_search : true For more information on configuring Radarr instances in Jellyseerr, refer to this guide in the Overseerr documentation. delete_unmanaged : bool = False class-attribute instance-attribute # Automatically delete Radarr instance links not configured in Buildarr. If unsure, leave set to the default value of false . definitions : Dict [ str , Radarr ] = {} class-attribute instance-attribute # Radarr service definitions are defined here. Configuration # The following configuration attributes are available when adding a Radarr instance to Jellyseerr. is_default_server : bool = False class-attribute instance-attribute # Set this server as a default server for this application type. Up to two default servers can be set at a time: one for non-4K content, one for 4K content. is_4k_server : bool = False class-attribute instance-attribute # Use this server for managing 4K content. instance_name : Optional [ InstanceName ] = Field ( None , plugin = 'radarr' ) class-attribute instance-attribute # The name of the Radarr instance within Buildarr, if linking this Radarr instance with another Buildarr-defined Radarr instance. hostname : NonEmptyStr instance-attribute # The hostname that Jellyseerr will use to connect to the server. port : Port = 7878 class-attribute instance-attribute # The communication port that the Radarr server listens on. use_ssl : bool = False class-attribute instance-attribute # Connect to the server using HTTPS. api_key : Optional [ ArrApiKey ] = None class-attribute instance-attribute # API key for the Radarr server. When not linking to a Buildarr-defined instance using instance_name , this attribute is required. url_base : Optional [ str ] = None class-attribute instance-attribute # The URL base configured on the server, if it has one configured. root_folder : NonEmptyStr instance-attribute # Target root folder to use for movies in Radarr. quality_profile : Union [ NonEmptyStr , int ] instance-attribute # Quality profile to use for movies in Radarr. minimum_availability : MinimumAvailability = MinimumAvailability . released class-attribute instance-attribute # The point of release at which requested movies are added to Radarr. Values: announced in-cinemas released tags : Set [ Union [ NonEmptyStr , int ]] = set () class-attribute instance-attribute # Tags to assign to movies in Radarr. external_url : Optional [ AnyHttpUrl ] = None class-attribute instance-attribute # An optional external URL to the server, used to add clickable links to the servers on media detail pages. If not defined, uses the internal URL to the instance. enable_scan : bool = False class-attribute instance-attribute # Scan the server for existing media/request status. It is recommended that this setting is enabled, so that users cannot submit requests for media which has already been requested or is already available. enable_automatic_search : bool = True class-attribute instance-attribute # Automatically search for media upon approval of a request.","title":"Radarr"},{"location":"plugins/jellyseerr/configuration/settings/services/radarr/#radarr","text":"Jellyseerr relies on Radarr for tracking, downloading and managing local copies of movies. When a request is made for a movie, Jellyseerr will add it to Radarr. Note At the time of release, a Radarr plugin is not yet available for Buildarr. Until one is released, an API key must be specified when adding a Radarr instance to Jellyseerr. A common usage pattern is having multiple Radarr instances, one for non-4K movies and another for 4K movies: jellyseerr : settings : sonarr : delete_unmanaged : false definitions : \"Radarr (HD)\" : is_default_server : true is_4k_server : false hostname : \"localhost\" port : 7878 use_ssl : false api_key : \"...\" root_folder : \"/data/media/movies/hd\" quality_profile : \"HD Movies\" minimum_availability : \"released\" tags : [] enable_scan : false enable_automatic_search : true \"Radarr (4K)\" : is_default_server : true is_4k_server : true hostname : \"localhost\" port : 7879 use_ssl : false api_key : \"...\" root_folder : \"/data/media/movies/4k\" quality_profile : \"4K Movies\" minimum_availability : \"released\" tags : [] enable_scan : false enable_automatic_search : true For more information on configuring Radarr instances in Jellyseerr, refer to this guide in the Overseerr documentation.","title":"Radarr"},{"location":"plugins/jellyseerr/configuration/settings/services/radarr/#buildarr_jellyseerr.config.settings.services.radarr.RadarrSettings.delete_unmanaged","text":"Automatically delete Radarr instance links not configured in Buildarr. If unsure, leave set to the default value of false .","title":"delete_unmanaged"},{"location":"plugins/jellyseerr/configuration/settings/services/radarr/#buildarr_jellyseerr.config.settings.services.radarr.RadarrSettings.definitions","text":"Radarr service definitions are defined here.","title":"definitions"},{"location":"plugins/jellyseerr/configuration/settings/services/radarr/#configuration","text":"The following configuration attributes are available when adding a Radarr instance to Jellyseerr.","title":"Configuration"},{"location":"plugins/jellyseerr/configuration/settings/services/radarr/#buildarr_jellyseerr.config.settings.services.base.ArrBase.is_default_server","text":"Set this server as a default server for this application type. Up to two default servers can be set at a time: one for non-4K content, one for 4K content.","title":"is_default_server"},{"location":"plugins/jellyseerr/configuration/settings/services/radarr/#buildarr_jellyseerr.config.settings.services.base.ArrBase.is_4k_server","text":"Use this server for managing 4K content.","title":"is_4k_server"},{"location":"plugins/jellyseerr/configuration/settings/services/radarr/#buildarr_jellyseerr.config.settings.services.radarr.Radarr.instance_name","text":"The name of the Radarr instance within Buildarr, if linking this Radarr instance with another Buildarr-defined Radarr instance.","title":"instance_name"},{"location":"plugins/jellyseerr/configuration/settings/services/radarr/#buildarr_jellyseerr.config.settings.services.base.ArrBase.hostname","text":"The hostname that Jellyseerr will use to connect to the server.","title":"hostname"},{"location":"plugins/jellyseerr/configuration/settings/services/radarr/#buildarr_jellyseerr.config.settings.services.radarr.Radarr.port","text":"The communication port that the Radarr server listens on.","title":"port"},{"location":"plugins/jellyseerr/configuration/settings/services/radarr/#buildarr_jellyseerr.config.settings.services.base.ArrBase.use_ssl","text":"Connect to the server using HTTPS.","title":"use_ssl"},{"location":"plugins/jellyseerr/configuration/settings/services/radarr/#buildarr_jellyseerr.config.settings.services.radarr.Radarr.api_key","text":"API key for the Radarr server. When not linking to a Buildarr-defined instance using instance_name , this attribute is required.","title":"api_key"},{"location":"plugins/jellyseerr/configuration/settings/services/radarr/#buildarr_jellyseerr.config.settings.services.base.ArrBase.url_base","text":"The URL base configured on the server, if it has one configured.","title":"url_base"},{"location":"plugins/jellyseerr/configuration/settings/services/radarr/#buildarr_jellyseerr.config.settings.services.radarr.Radarr.root_folder","text":"Target root folder to use for movies in Radarr.","title":"root_folder"},{"location":"plugins/jellyseerr/configuration/settings/services/radarr/#buildarr_jellyseerr.config.settings.services.radarr.Radarr.quality_profile","text":"Quality profile to use for movies in Radarr.","title":"quality_profile"},{"location":"plugins/jellyseerr/configuration/settings/services/radarr/#buildarr_jellyseerr.config.settings.services.radarr.Radarr.minimum_availability","text":"The point of release at which requested movies are added to Radarr. Values: announced in-cinemas released","title":"minimum_availability"},{"location":"plugins/jellyseerr/configuration/settings/services/radarr/#buildarr_jellyseerr.config.settings.services.radarr.Radarr.tags","text":"Tags to assign to movies in Radarr.","title":"tags"},{"location":"plugins/jellyseerr/configuration/settings/services/radarr/#buildarr_jellyseerr.config.settings.services.base.ArrBase.external_url","text":"An optional external URL to the server, used to add clickable links to the servers on media detail pages. If not defined, uses the internal URL to the instance.","title":"external_url"},{"location":"plugins/jellyseerr/configuration/settings/services/radarr/#buildarr_jellyseerr.config.settings.services.base.ArrBase.enable_scan","text":"Scan the server for existing media/request status. It is recommended that this setting is enabled, so that users cannot submit requests for media which has already been requested or is already available.","title":"enable_scan"},{"location":"plugins/jellyseerr/configuration/settings/services/radarr/#buildarr_jellyseerr.config.settings.services.base.ArrBase.enable_automatic_search","text":"Automatically search for media upon approval of a request.","title":"enable_automatic_search"},{"location":"plugins/jellyseerr/configuration/settings/services/sonarr/","text":"Sonarr # Jellyseerr relies on Sonarr for tracking, downloading and managing local copies of series (TV shows). When a request is made for a series, Jellyseerr will add it to Sonarr. Note At the time of release, Sonarr V4 is not fully supported by Jellyseerr, as Sonarr V4 does not have language profiles. Buildarr does not support linking Jellyseerr instances with Sonarr V4 instances. In Buildarr, Jellyseerr can be linked to one or more Sonarr instances via instance links, using the instance_name attribute. Jellyseerr can also have non-Buildarr managed Sonarr instances added to it by explicitly defining the API key used to connect to it. A common usage pattern is having multiple Sonarr instances, one for non-4K series and another for 4K series: sonarr : settings : language_profiles : definitions : \"English\" : languages : - \"English\" instances : sonarr-hd : host : \"localhost\" port : 8989 protocol : \"http\" api_key : \"...\" settings : media_management : root_folders : - \"/data/media/shows/hd\" profiles : quality_profiles : definitions : \"HD Series\" : ... sonarr-4k : host : \"localhost\" port : 8990 protocol : \"http\" api_key : \"...\" settings : media_management : root_folders : - \"/data/media/shows/4k\" profiles : quality_profiles : definitions : \"4K Series\" : ... jellyseerr : settings : sonarr : delete_unmanaged : false definitions : \"Sonarr (HD)\" : is_default_server : true is_4k_server : false instance_name : \"sonarr-hd\" hostname : \"localhost\" port : 8989 use_ssl : false root_folder : \"/data/media/shows/hd\" quality_profile : \"HD Series\" language_profile : \"English\" tags : [] enable_season_folders : true enable_scan : false enable_automatic_search : true \"Sonarr (4K)\" : is_default_server : true is_4k_server : true instance_name : \"sonarr-4k\" hostname : \"localhost\" port : 8990 use_ssl : false root_folder : \"/data/media/shows/4k\" quality_profile : \"4K Series\" language_profile : \"English\" tags : [] enable_season_folders : true enable_scan : false enable_automatic_search : true For more information on configuring Sonarr instances in Jellyseerr, refer to this guide in the Overseerr documentation. delete_unmanaged : bool = False class-attribute instance-attribute # Automatically delete Sonarr instance links not configured in Buildarr. If unsure, leave set to the default value of false . definitions : Dict [ str , Sonarr ] = {} class-attribute instance-attribute # Sonarr service definitions are defined here. Configuration # The following configuration attributes are available when adding a Sonarr instance to Jellyseerr. is_default_server : bool = False class-attribute instance-attribute # Set this server as a default server for this application type. Up to two default servers can be set at a time: one for non-4K content, one for 4K content. is_4k_server : bool = False class-attribute instance-attribute # Use this server for managing 4K content. instance_name : Optional [ InstanceName ] = Field ( None , plugin = 'sonarr' ) class-attribute instance-attribute # The name of the Sonarr instance within Buildarr, if linking this Sonarr instance with another Buildarr-defined Sonarr instance. hostname : NonEmptyStr instance-attribute # The hostname that Jellyseerr will use to connect to the server. port : Port = 8989 class-attribute instance-attribute # The communication port that the Sonarr server listens on. use_ssl : bool = False class-attribute instance-attribute # Connect to the server using HTTPS. api_key : Optional [ ArrApiKey ] = None class-attribute instance-attribute # API key for the Sonarr server. When not linking to a Buildarr-defined instance using instance_name , this attribute is required. url_base : Optional [ str ] = None class-attribute instance-attribute # The URL base configured on the server, if it has one configured. root_folder : NonEmptyStr instance-attribute # Target root folder to use for series in Sonarr. quality_profile : Union [ NonEmptyStr , int ] instance-attribute # Quality profile to use for series in Sonarr. language_profile : Union [ NonEmptyStr , int ] instance-attribute # Quality profile to use for series in Sonarr. tags : Set [ Union [ NonEmptyStr , int ]] = set () class-attribute instance-attribute # Tags to assign to series in Sonarr. anime_root_folder : Optional [ Union [ NonEmptyStr , int ]] = None class-attribute instance-attribute # Target root folder to use for series classified as anime in Sonarr. anime_quality_profile : Optional [ Union [ NonEmptyStr , int ]] = None class-attribute instance-attribute # Quality profile to use for series classified as anime in Sonarr. anime_language_profile : Optional [ Union [ NonEmptyStr , int ]] = None class-attribute instance-attribute # Language profile to use for series classified as anime in Sonarr. anime_tags : Set [ Union [ NonEmptyStr , int ]] = set () class-attribute instance-attribute # Tags to assign to series classified as anime in Sonarr. enable_season_folders : bool = False class-attribute instance-attribute # Sort series into subfolders for each season. external_url : Optional [ AnyHttpUrl ] = None class-attribute instance-attribute # An optional external URL to the server, used to add clickable links to the servers on media detail pages. If not defined, uses the internal URL to the instance. enable_scan : bool = False class-attribute instance-attribute # Scan the server for existing media/request status. It is recommended that this setting is enabled, so that users cannot submit requests for media which has already been requested or is already available. enable_automatic_search : bool = True class-attribute instance-attribute # Automatically search for media upon approval of a request.","title":"Sonarr"},{"location":"plugins/jellyseerr/configuration/settings/services/sonarr/#sonarr","text":"Jellyseerr relies on Sonarr for tracking, downloading and managing local copies of series (TV shows). When a request is made for a series, Jellyseerr will add it to Sonarr. Note At the time of release, Sonarr V4 is not fully supported by Jellyseerr, as Sonarr V4 does not have language profiles. Buildarr does not support linking Jellyseerr instances with Sonarr V4 instances. In Buildarr, Jellyseerr can be linked to one or more Sonarr instances via instance links, using the instance_name attribute. Jellyseerr can also have non-Buildarr managed Sonarr instances added to it by explicitly defining the API key used to connect to it. A common usage pattern is having multiple Sonarr instances, one for non-4K series and another for 4K series: sonarr : settings : language_profiles : definitions : \"English\" : languages : - \"English\" instances : sonarr-hd : host : \"localhost\" port : 8989 protocol : \"http\" api_key : \"...\" settings : media_management : root_folders : - \"/data/media/shows/hd\" profiles : quality_profiles : definitions : \"HD Series\" : ... sonarr-4k : host : \"localhost\" port : 8990 protocol : \"http\" api_key : \"...\" settings : media_management : root_folders : - \"/data/media/shows/4k\" profiles : quality_profiles : definitions : \"4K Series\" : ... jellyseerr : settings : sonarr : delete_unmanaged : false definitions : \"Sonarr (HD)\" : is_default_server : true is_4k_server : false instance_name : \"sonarr-hd\" hostname : \"localhost\" port : 8989 use_ssl : false root_folder : \"/data/media/shows/hd\" quality_profile : \"HD Series\" language_profile : \"English\" tags : [] enable_season_folders : true enable_scan : false enable_automatic_search : true \"Sonarr (4K)\" : is_default_server : true is_4k_server : true instance_name : \"sonarr-4k\" hostname : \"localhost\" port : 8990 use_ssl : false root_folder : \"/data/media/shows/4k\" quality_profile : \"4K Series\" language_profile : \"English\" tags : [] enable_season_folders : true enable_scan : false enable_automatic_search : true For more information on configuring Sonarr instances in Jellyseerr, refer to this guide in the Overseerr documentation.","title":"Sonarr"},{"location":"plugins/jellyseerr/configuration/settings/services/sonarr/#buildarr_jellyseerr.config.settings.services.sonarr.SonarrSettings.delete_unmanaged","text":"Automatically delete Sonarr instance links not configured in Buildarr. If unsure, leave set to the default value of false .","title":"delete_unmanaged"},{"location":"plugins/jellyseerr/configuration/settings/services/sonarr/#buildarr_jellyseerr.config.settings.services.sonarr.SonarrSettings.definitions","text":"Sonarr service definitions are defined here.","title":"definitions"},{"location":"plugins/jellyseerr/configuration/settings/services/sonarr/#configuration","text":"The following configuration attributes are available when adding a Sonarr instance to Jellyseerr.","title":"Configuration"},{"location":"plugins/jellyseerr/configuration/settings/services/sonarr/#buildarr_jellyseerr.config.settings.services.base.ArrBase.is_default_server","text":"Set this server as a default server for this application type. Up to two default servers can be set at a time: one for non-4K content, one for 4K content.","title":"is_default_server"},{"location":"plugins/jellyseerr/configuration/settings/services/sonarr/#buildarr_jellyseerr.config.settings.services.base.ArrBase.is_4k_server","text":"Use this server for managing 4K content.","title":"is_4k_server"},{"location":"plugins/jellyseerr/configuration/settings/services/sonarr/#buildarr_jellyseerr.config.settings.services.sonarr.Sonarr.instance_name","text":"The name of the Sonarr instance within Buildarr, if linking this Sonarr instance with another Buildarr-defined Sonarr instance.","title":"instance_name"},{"location":"plugins/jellyseerr/configuration/settings/services/sonarr/#buildarr_jellyseerr.config.settings.services.base.ArrBase.hostname","text":"The hostname that Jellyseerr will use to connect to the server.","title":"hostname"},{"location":"plugins/jellyseerr/configuration/settings/services/sonarr/#buildarr_jellyseerr.config.settings.services.sonarr.Sonarr.port","text":"The communication port that the Sonarr server listens on.","title":"port"},{"location":"plugins/jellyseerr/configuration/settings/services/sonarr/#buildarr_jellyseerr.config.settings.services.base.ArrBase.use_ssl","text":"Connect to the server using HTTPS.","title":"use_ssl"},{"location":"plugins/jellyseerr/configuration/settings/services/sonarr/#buildarr_jellyseerr.config.settings.services.sonarr.Sonarr.api_key","text":"API key for the Sonarr server. When not linking to a Buildarr-defined instance using instance_name , this attribute is required.","title":"api_key"},{"location":"plugins/jellyseerr/configuration/settings/services/sonarr/#buildarr_jellyseerr.config.settings.services.base.ArrBase.url_base","text":"The URL base configured on the server, if it has one configured.","title":"url_base"},{"location":"plugins/jellyseerr/configuration/settings/services/sonarr/#buildarr_jellyseerr.config.settings.services.sonarr.Sonarr.root_folder","text":"Target root folder to use for series in Sonarr.","title":"root_folder"},{"location":"plugins/jellyseerr/configuration/settings/services/sonarr/#buildarr_jellyseerr.config.settings.services.sonarr.Sonarr.quality_profile","text":"Quality profile to use for series in Sonarr.","title":"quality_profile"},{"location":"plugins/jellyseerr/configuration/settings/services/sonarr/#buildarr_jellyseerr.config.settings.services.sonarr.Sonarr.language_profile","text":"Quality profile to use for series in Sonarr.","title":"language_profile"},{"location":"plugins/jellyseerr/configuration/settings/services/sonarr/#buildarr_jellyseerr.config.settings.services.sonarr.Sonarr.tags","text":"Tags to assign to series in Sonarr.","title":"tags"},{"location":"plugins/jellyseerr/configuration/settings/services/sonarr/#buildarr_jellyseerr.config.settings.services.sonarr.Sonarr.anime_root_folder","text":"Target root folder to use for series classified as anime in Sonarr.","title":"anime_root_folder"},{"location":"plugins/jellyseerr/configuration/settings/services/sonarr/#buildarr_jellyseerr.config.settings.services.sonarr.Sonarr.anime_quality_profile","text":"Quality profile to use for series classified as anime in Sonarr.","title":"anime_quality_profile"},{"location":"plugins/jellyseerr/configuration/settings/services/sonarr/#buildarr_jellyseerr.config.settings.services.sonarr.Sonarr.anime_language_profile","text":"Language profile to use for series classified as anime in Sonarr.","title":"anime_language_profile"},{"location":"plugins/jellyseerr/configuration/settings/services/sonarr/#buildarr_jellyseerr.config.settings.services.sonarr.Sonarr.anime_tags","text":"Tags to assign to series classified as anime in Sonarr.","title":"anime_tags"},{"location":"plugins/jellyseerr/configuration/settings/services/sonarr/#buildarr_jellyseerr.config.settings.services.sonarr.Sonarr.enable_season_folders","text":"Sort series into subfolders for each season.","title":"enable_season_folders"},{"location":"plugins/jellyseerr/configuration/settings/services/sonarr/#buildarr_jellyseerr.config.settings.services.base.ArrBase.external_url","text":"An optional external URL to the server, used to add clickable links to the servers on media detail pages. If not defined, uses the internal URL to the instance.","title":"external_url"},{"location":"plugins/jellyseerr/configuration/settings/services/sonarr/#buildarr_jellyseerr.config.settings.services.base.ArrBase.enable_scan","text":"Scan the server for existing media/request status. It is recommended that this setting is enabled, so that users cannot submit requests for media which has already been requested or is already available.","title":"enable_scan"},{"location":"plugins/jellyseerr/configuration/settings/services/sonarr/#buildarr_jellyseerr.config.settings.services.base.ArrBase.enable_automatic_search","text":"Automatically search for media upon approval of a request.","title":"enable_automatic_search"},{"location":"plugins/prowlarr/","text":"Buildarr Prowlarr Plugin # The Buildarr Prowlarr plugin ( buildarr-prowlarr ) is a plugin for Buildarr that adds the capability to configure and manage Prowlarr instances. Prowlarr is a manager/proxy for *Arr application Usenet and Torrent indexers. It handles communication with individual indexers for multiple instances on their behalf from a single client, allowing easier configuration of indexers by only setting them up once, and better management of traffic going to indexers to reduce the risk of running into rate limits. Prowlarr v1.0 and later are the only supported versions at this time. If you are using Prowlarr v0.4 or earlier, please upgrade in order to configure your instances with Buildarr. Installation # When using Buildarr as a standalone application , the Prowlarr plugin can simply be installed using pip : $ pip install buildarr buildarr-prowlarr If you are linking a Prowlarr instance with another Buildarr-configured application, specify the following extras to also install a compatible version of the corresponding plugins: sonarr (for the Sonarr TV show PVR) radarr (for the Radarr movie PVR) When using Buildarr as a Docker container , the Prowlarr plugin is bundled with the official container ( callum027/buildarr ), so there is no need to install it separately. You can upgrade, or pin the version of the plugin to a specific version, within the container by setting the $BUILDARR_INSTALL_PACKAGES environment variable in the docker run command using --env / -e : -e BUILDARR_INSTALL_PACKAGES = \"buildarr-prowlarr==<version>\" Quick Start # To use the Prowlarr plugin, create a prowlarr block within buildarr.yml , and enter the connection information required for the Buildarr instance to connect to the Prowlarr instance you'd like to manage. From version 1.0 onwards, Prowlarr enables authentication by default, preventing Buildarr from automatically retrieving the API key. If authentication is enabled on your Prowlarr configuration, manually retrieve the API key for Prowlarr by copying it from Settings -> General -> Security -> API Key, and pasting it into the configuration file as shown below. --- buildarr : watch_config : true prowlarr : hostname : \"localhost\" # Defaults to `prowlarr`, or the instance name for instance-specific configs. port : 9696 # Defaults to 9696. protocol : \"http\" # Defaults to `http`. api_key : \"...\" # Required if authentication is enabled. Auto-fetch if authentication is disabled. Buildarr won't modify anything yet since no configuration has been defined, but you are able to test if Buildarr is able to connect to and authenticate with the Prowlarr instance. Try a buildarr run . If the output is similar to the below output, Buildarr was able to connect to your Prowlarr instance. 2023-03-29 20:39:50,856 buildarr:1 buildarr.cli.run [INFO] Buildarr version 0.4.0 (log level: INFO) 2023-03-29 20:39:50,856 buildarr:1 buildarr.cli.run [INFO] Loading configuration file '/config/buildarr.yml' 2023-03-29 20:39:50,872 buildarr:1 buildarr.cli.run [INFO] Finished loading configuration file 2023-03-29 20:39:50,874 buildarr:1 buildarr.cli.run [INFO] Loaded plugins: prowlarr (0.1.0) 2023-03-29 20:39:50,875 buildarr:1 buildarr.cli.run [INFO] Loading instance configurations 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Finished loading instance configurations 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Running with plugins: prowlarr 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Resolving instance dependencies 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Finished resolving instance dependencies 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Loading secrets file from '/config/secrets.json' 2023-03-29 20:39:50,886 buildarr:1 buildarr.cli.run [INFO] Finished loading secrets file 2023-03-29 20:39:50,886 buildarr:1 buildarr.cli.run [INFO] <prowlarr> (default) Checking secrets 2023-03-29 20:39:50,912 buildarr:1 buildarr.cli.run [INFO] <prowlarr> (default) Connection test successful using cached secrets 2023-03-29 20:39:50,912 buildarr:1 buildarr.cli.run [INFO] <prowlarr> (default) Finished checking secrets 2023-03-29 20:39:50,912 buildarr:1 buildarr.cli.run [INFO] Saving updated secrets file to '/config/secrets.json' 2023-03-29 20:39:50,914 buildarr:1 buildarr.cli.run [INFO] Finished saving updated secrets file 2023-03-29 20:39:50,914 buildarr:1 buildarr.cli.run [INFO] Updating configuration on remote instances 2023-03-29 20:39:50,914 buildarr:1 buildarr.cli.run [INFO] <prowlarr> (default) Getting remote configuration 2023-03-29 20:39:51,406 buildarr:1 buildarr.cli.run [INFO] <prowlarr> (default) Finished getting remote configuration 2023-03-29 20:39:51,463 buildarr:1 buildarr.cli.run [INFO] <prowlarr> (default) Updating remote configuration 2023-03-29 20:39:52,019 buildarr:1 buildarr.cli.run [INFO] <prowlarr> (default) Remote configuration is up to date 2023-03-29 20:39:52,019 buildarr:1 buildarr.cli.run [INFO] <prowlarr> (default) Finished updating remote configuration 2023-03-29 20:39:52,019 buildarr:1 buildarr.cli.run [INFO] Finished updating configuration on remote instances Configuring your Buildarr instance # The following sections cover comprehensive configuration of a Prowlarr instance. Note that these documents do not show how you should configure a Prowlarr instance. Rather, they show how you can configure a Prowlarr instance the way you want with Buildarr. For more information on how to optimally configure Prowlarr, you can refer to the excellent guides from WikiArr and TRaSH-Guides . Host Configuration Settings Indexers Indexers Proxies Apps Applications Sync Profiles Download Clients Notifications Tags General UI Dumping an existing Prowlarr instance configuration # Buildarr is capable of dumping a running Prowlarr instance's configuration. $ buildarr prowlarr dump-config http://localhost:9696 > prowlarr.yml Prowlarr instance API key: <Paste API key here> The dumped YAML object can be placed directly under the prowlarr configuration block, or used as an instance-specific configuration . All possible values are explicitly defined in this dumped configuration. api_key : 1a2b3c4d5e6f1a2b3c4d5e6f1a2b3c4d hostname : localhost image : lscr.io/linuxserver/prowlarr port : 9697 protocol : http settings : apps : applications : definitions : Sonarr : anime_sync_categories : - tv/anime api_key : 1a2b3c4d5e6f1a2b3c4d5e6f1a2b3c4d base_url : http://sonarr:8989 instance_name : null prowlarr_url : http://prowlarr:9696 sync_categories : - tv/uhd - tv/other - tv/foreign - tv/sd - tv/web-dl - tv/hd sync_level : add-and-remove-only tags : - test type : sonarr delete_unmanaged : false sync_profiles : definitions : Standard : enable_automatic_search : true enable_interactive_search : true enable_rss : true minimum_seeders : 1 delete_unmanaged : false download_clients : definitions : {} delete_unmanaged : false general : analytics : send_anonymous_usage_data : true backup : folder : Backups interval : 7 retention : 28 host : bind_address : '*' instance_name : Prowlarr (Buildarr Example) port : 9696 ssl_cert_password : null ssl_cert_path : null ssl_port : 6969 url_base : null use_ssl : false logging : log_level : INFO proxy : bypass_proxy_for_local_addresses : true enable : false hostname : null ignored_addresses : [] password : null port : 8080 proxy_type : http username : null security : authentication : form authentication_required : local-disabled certificate_validation : enabled password : mXkaCgbcm6LMVwSmj/aucXfRtYg18k7H+I4/6JPinSA= username : callum updates : automatic : false branch : master mechanism : docker script_path : null indexers : indexers : definitions : 1337x : enable : false fields : baseUrl : null definitionFile : 1337x downloadlink : iTorrents.org downloadlink2 : magnet sort : created torrentBaseSettings.appMinimumSeeders : null torrentBaseSettings.packSeedTime : null torrentBaseSettings.seedRatio : null torrentBaseSettings.seedTime : null type : desc grab_limit : 4 priority : 25 query_limit : 4 redirect : false secret_fields : {} sync_profile : Standard tags : [] type : 1337x Nyaa.si : enable : false fields : baseUrl : null cat-id : All categories definitionFile : nyaasi filter-id : No filter prefer_magnet_links : true sort : created torrentBaseSettings.appMinimumSeeders : null torrentBaseSettings.packSeedTime : null torrentBaseSettings.seedRatio : null torrentBaseSettings.seedTime : null type : desc grab_limit : 4 priority : 25 query_limit : 4 redirect : false secret_fields : {} sync_profile : Standard tags : [] type : nyaasi delete_unmanaged : false proxies : definitions : {} delete_unmanaged : false notifications : definitions : {} delete_unmanaged : false tags : definitions : - test delete_unused : false ui : enable_color_impaired_mode : false first_day_of_week : sunday long_date_format : month-first short_date_format : word-month-first show_relative_dates : true theme : light time_format : twelve-hour ui_language : en week_column_header : month-first version : 1.2.2.2699","title":"Introduction"},{"location":"plugins/prowlarr/#buildarr-prowlarr-plugin","text":"The Buildarr Prowlarr plugin ( buildarr-prowlarr ) is a plugin for Buildarr that adds the capability to configure and manage Prowlarr instances. Prowlarr is a manager/proxy for *Arr application Usenet and Torrent indexers. It handles communication with individual indexers for multiple instances on their behalf from a single client, allowing easier configuration of indexers by only setting them up once, and better management of traffic going to indexers to reduce the risk of running into rate limits. Prowlarr v1.0 and later are the only supported versions at this time. If you are using Prowlarr v0.4 or earlier, please upgrade in order to configure your instances with Buildarr.","title":"Buildarr Prowlarr Plugin"},{"location":"plugins/prowlarr/#installation","text":"When using Buildarr as a standalone application , the Prowlarr plugin can simply be installed using pip : $ pip install buildarr buildarr-prowlarr If you are linking a Prowlarr instance with another Buildarr-configured application, specify the following extras to also install a compatible version of the corresponding plugins: sonarr (for the Sonarr TV show PVR) radarr (for the Radarr movie PVR) When using Buildarr as a Docker container , the Prowlarr plugin is bundled with the official container ( callum027/buildarr ), so there is no need to install it separately. You can upgrade, or pin the version of the plugin to a specific version, within the container by setting the $BUILDARR_INSTALL_PACKAGES environment variable in the docker run command using --env / -e : -e BUILDARR_INSTALL_PACKAGES = \"buildarr-prowlarr==<version>\"","title":"Installation"},{"location":"plugins/prowlarr/#quick-start","text":"To use the Prowlarr plugin, create a prowlarr block within buildarr.yml , and enter the connection information required for the Buildarr instance to connect to the Prowlarr instance you'd like to manage. From version 1.0 onwards, Prowlarr enables authentication by default, preventing Buildarr from automatically retrieving the API key. If authentication is enabled on your Prowlarr configuration, manually retrieve the API key for Prowlarr by copying it from Settings -> General -> Security -> API Key, and pasting it into the configuration file as shown below. --- buildarr : watch_config : true prowlarr : hostname : \"localhost\" # Defaults to `prowlarr`, or the instance name for instance-specific configs. port : 9696 # Defaults to 9696. protocol : \"http\" # Defaults to `http`. api_key : \"...\" # Required if authentication is enabled. Auto-fetch if authentication is disabled. Buildarr won't modify anything yet since no configuration has been defined, but you are able to test if Buildarr is able to connect to and authenticate with the Prowlarr instance. Try a buildarr run . If the output is similar to the below output, Buildarr was able to connect to your Prowlarr instance. 2023-03-29 20:39:50,856 buildarr:1 buildarr.cli.run [INFO] Buildarr version 0.4.0 (log level: INFO) 2023-03-29 20:39:50,856 buildarr:1 buildarr.cli.run [INFO] Loading configuration file '/config/buildarr.yml' 2023-03-29 20:39:50,872 buildarr:1 buildarr.cli.run [INFO] Finished loading configuration file 2023-03-29 20:39:50,874 buildarr:1 buildarr.cli.run [INFO] Loaded plugins: prowlarr (0.1.0) 2023-03-29 20:39:50,875 buildarr:1 buildarr.cli.run [INFO] Loading instance configurations 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Finished loading instance configurations 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Running with plugins: prowlarr 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Resolving instance dependencies 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Finished resolving instance dependencies 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Loading secrets file from '/config/secrets.json' 2023-03-29 20:39:50,886 buildarr:1 buildarr.cli.run [INFO] Finished loading secrets file 2023-03-29 20:39:50,886 buildarr:1 buildarr.cli.run [INFO] <prowlarr> (default) Checking secrets 2023-03-29 20:39:50,912 buildarr:1 buildarr.cli.run [INFO] <prowlarr> (default) Connection test successful using cached secrets 2023-03-29 20:39:50,912 buildarr:1 buildarr.cli.run [INFO] <prowlarr> (default) Finished checking secrets 2023-03-29 20:39:50,912 buildarr:1 buildarr.cli.run [INFO] Saving updated secrets file to '/config/secrets.json' 2023-03-29 20:39:50,914 buildarr:1 buildarr.cli.run [INFO] Finished saving updated secrets file 2023-03-29 20:39:50,914 buildarr:1 buildarr.cli.run [INFO] Updating configuration on remote instances 2023-03-29 20:39:50,914 buildarr:1 buildarr.cli.run [INFO] <prowlarr> (default) Getting remote configuration 2023-03-29 20:39:51,406 buildarr:1 buildarr.cli.run [INFO] <prowlarr> (default) Finished getting remote configuration 2023-03-29 20:39:51,463 buildarr:1 buildarr.cli.run [INFO] <prowlarr> (default) Updating remote configuration 2023-03-29 20:39:52,019 buildarr:1 buildarr.cli.run [INFO] <prowlarr> (default) Remote configuration is up to date 2023-03-29 20:39:52,019 buildarr:1 buildarr.cli.run [INFO] <prowlarr> (default) Finished updating remote configuration 2023-03-29 20:39:52,019 buildarr:1 buildarr.cli.run [INFO] Finished updating configuration on remote instances","title":"Quick Start"},{"location":"plugins/prowlarr/#configuring-your-buildarr-instance","text":"The following sections cover comprehensive configuration of a Prowlarr instance. Note that these documents do not show how you should configure a Prowlarr instance. Rather, they show how you can configure a Prowlarr instance the way you want with Buildarr. For more information on how to optimally configure Prowlarr, you can refer to the excellent guides from WikiArr and TRaSH-Guides . Host Configuration Settings Indexers Indexers Proxies Apps Applications Sync Profiles Download Clients Notifications Tags General UI","title":"Configuring your Buildarr instance"},{"location":"plugins/prowlarr/#dumping-an-existing-prowlarr-instance-configuration","text":"Buildarr is capable of dumping a running Prowlarr instance's configuration. $ buildarr prowlarr dump-config http://localhost:9696 > prowlarr.yml Prowlarr instance API key: <Paste API key here> The dumped YAML object can be placed directly under the prowlarr configuration block, or used as an instance-specific configuration . All possible values are explicitly defined in this dumped configuration. api_key : 1a2b3c4d5e6f1a2b3c4d5e6f1a2b3c4d hostname : localhost image : lscr.io/linuxserver/prowlarr port : 9697 protocol : http settings : apps : applications : definitions : Sonarr : anime_sync_categories : - tv/anime api_key : 1a2b3c4d5e6f1a2b3c4d5e6f1a2b3c4d base_url : http://sonarr:8989 instance_name : null prowlarr_url : http://prowlarr:9696 sync_categories : - tv/uhd - tv/other - tv/foreign - tv/sd - tv/web-dl - tv/hd sync_level : add-and-remove-only tags : - test type : sonarr delete_unmanaged : false sync_profiles : definitions : Standard : enable_automatic_search : true enable_interactive_search : true enable_rss : true minimum_seeders : 1 delete_unmanaged : false download_clients : definitions : {} delete_unmanaged : false general : analytics : send_anonymous_usage_data : true backup : folder : Backups interval : 7 retention : 28 host : bind_address : '*' instance_name : Prowlarr (Buildarr Example) port : 9696 ssl_cert_password : null ssl_cert_path : null ssl_port : 6969 url_base : null use_ssl : false logging : log_level : INFO proxy : bypass_proxy_for_local_addresses : true enable : false hostname : null ignored_addresses : [] password : null port : 8080 proxy_type : http username : null security : authentication : form authentication_required : local-disabled certificate_validation : enabled password : mXkaCgbcm6LMVwSmj/aucXfRtYg18k7H+I4/6JPinSA= username : callum updates : automatic : false branch : master mechanism : docker script_path : null indexers : indexers : definitions : 1337x : enable : false fields : baseUrl : null definitionFile : 1337x downloadlink : iTorrents.org downloadlink2 : magnet sort : created torrentBaseSettings.appMinimumSeeders : null torrentBaseSettings.packSeedTime : null torrentBaseSettings.seedRatio : null torrentBaseSettings.seedTime : null type : desc grab_limit : 4 priority : 25 query_limit : 4 redirect : false secret_fields : {} sync_profile : Standard tags : [] type : 1337x Nyaa.si : enable : false fields : baseUrl : null cat-id : All categories definitionFile : nyaasi filter-id : No filter prefer_magnet_links : true sort : created torrentBaseSettings.appMinimumSeeders : null torrentBaseSettings.packSeedTime : null torrentBaseSettings.seedRatio : null torrentBaseSettings.seedTime : null type : desc grab_limit : 4 priority : 25 query_limit : 4 redirect : false secret_fields : {} sync_profile : Standard tags : [] type : nyaasi delete_unmanaged : false proxies : definitions : {} delete_unmanaged : false notifications : definitions : {} delete_unmanaged : false tags : definitions : - test delete_unused : false ui : enable_color_impaired_mode : false first_day_of_week : sunday long_date_format : month-first short_date_format : word-month-first show_relative_dates : true theme : light time_format : twelve-hour ui_language : en week_column_header : month-first version : 1.2.2.2699","title":"Dumping an existing Prowlarr instance configuration"},{"location":"plugins/prowlarr/release-notes/","text":"Release Notes (Buildarr Prowlarr Plugin) # v0.3.1 - 2023-09-09 # This release implements instance links to Radarr instances in application definitions, using the instance_name attribute, similar to the existing Sonarr instance links. This takes advantage of the new Radarr plugin for Buildarr , and allows users to add Radarr instances to Prowlarr configuration without having to explicitly pass the API key (as long as the Radarr instance itself is also configured by Buildarr). Added # Implement instance links with Radarr instances ( #20 ) Changed # Directly parse URL in the CLI command ( #21 ) v0.3.0 - 2023-09-09 # This updates the Prowlarr plugin so that it is compatible with Buildarr v0.6.0 . This version is also backwards compatible with Buildarr v0.5.0 . Other changes to the Prowlarr plugin for this release include: Relax URL parsing on the buildarr prowlarr dump-config command, fixing configuration dumping from Prowlarr instances without a canonical domain name (e.g. IP addresses and localhost ) Changed # Update package metadata and dependencies ( #15 ) v0.2.0 - 2023-04-16 # This updates the Prowlarr plugin so that it is compatible with Buildarr v0.5.0 . Other changes to the Prowlarr plugin for this release include: Rename the Freebox download client priority attribute to client_priority (same as other download client types), as it was shadowing the Prowlarr-oriented priority attribute (common to all download clients), and giving incorrect values for both attributes Improve support for deleting resources with delete_unmanaged , by using the new delete_remote API function Remove the prowlarr.tags.delete_unused attribute (for deleting Prowlarr tags not used in Buildarr), as it was unimplemented and Prowlarr automatically cleans up unused tags anyway Changed # Update plugin to newer Buildarr API standards ( #10 ) v0.1.1 - 2023-04-08 # This is a bugfix release to resolve problems with the first release, particularly when using Prowlarr to manage the indexers of Sonarr instances. Add an error message for when an invalid indexer type is provided Add mutual exclusion handling for the category and directory attributes in Transmission/Vuze download clients Fix updating app sync profiles Fix updating indexer proxies, download clients, application links and app sync profiles when not all type-specific resource values are defined in the configuration Require at least version 0.4.1 of the Sonarr plugin for Buildarr, to fix bugs with instance linking Changed # Fix bugs from integration tests ( #4 ) v0.1.0 - 2023-04-08 # First release of the Prowlarr plugin for Buildarr.","title":"Release Notes"},{"location":"plugins/prowlarr/release-notes/#release-notes-buildarr-prowlarr-plugin","text":"","title":"Release Notes (Buildarr Prowlarr Plugin)"},{"location":"plugins/prowlarr/release-notes/#v031-2023-09-09","text":"This release implements instance links to Radarr instances in application definitions, using the instance_name attribute, similar to the existing Sonarr instance links. This takes advantage of the new Radarr plugin for Buildarr , and allows users to add Radarr instances to Prowlarr configuration without having to explicitly pass the API key (as long as the Radarr instance itself is also configured by Buildarr).","title":"v0.3.1 - 2023-09-09"},{"location":"plugins/prowlarr/release-notes/#added","text":"Implement instance links with Radarr instances ( #20 )","title":"Added"},{"location":"plugins/prowlarr/release-notes/#changed","text":"Directly parse URL in the CLI command ( #21 )","title":"Changed"},{"location":"plugins/prowlarr/release-notes/#v030-2023-09-09","text":"This updates the Prowlarr plugin so that it is compatible with Buildarr v0.6.0 . This version is also backwards compatible with Buildarr v0.5.0 . Other changes to the Prowlarr plugin for this release include: Relax URL parsing on the buildarr prowlarr dump-config command, fixing configuration dumping from Prowlarr instances without a canonical domain name (e.g. IP addresses and localhost )","title":"v0.3.0 - 2023-09-09"},{"location":"plugins/prowlarr/release-notes/#changed_1","text":"Update package metadata and dependencies ( #15 )","title":"Changed"},{"location":"plugins/prowlarr/release-notes/#v020-2023-04-16","text":"This updates the Prowlarr plugin so that it is compatible with Buildarr v0.5.0 . Other changes to the Prowlarr plugin for this release include: Rename the Freebox download client priority attribute to client_priority (same as other download client types), as it was shadowing the Prowlarr-oriented priority attribute (common to all download clients), and giving incorrect values for both attributes Improve support for deleting resources with delete_unmanaged , by using the new delete_remote API function Remove the prowlarr.tags.delete_unused attribute (for deleting Prowlarr tags not used in Buildarr), as it was unimplemented and Prowlarr automatically cleans up unused tags anyway","title":"v0.2.0 - 2023-04-16"},{"location":"plugins/prowlarr/release-notes/#changed_2","text":"Update plugin to newer Buildarr API standards ( #10 )","title":"Changed"},{"location":"plugins/prowlarr/release-notes/#v011-2023-04-08","text":"This is a bugfix release to resolve problems with the first release, particularly when using Prowlarr to manage the indexers of Sonarr instances. Add an error message for when an invalid indexer type is provided Add mutual exclusion handling for the category and directory attributes in Transmission/Vuze download clients Fix updating app sync profiles Fix updating indexer proxies, download clients, application links and app sync profiles when not all type-specific resource values are defined in the configuration Require at least version 0.4.1 of the Sonarr plugin for Buildarr, to fix bugs with instance linking","title":"v0.1.1 - 2023-04-08"},{"location":"plugins/prowlarr/release-notes/#changed_3","text":"Fix bugs from integration tests ( #4 )","title":"Changed"},{"location":"plugins/prowlarr/release-notes/#v010-2023-04-08","text":"First release of the Prowlarr plugin for Buildarr.","title":"v0.1.0 - 2023-04-08"},{"location":"plugins/prowlarr/configuration/host/","text":"Host Configuration # By default, Buildarr will look for a single instance at http://prowlarr:9696 . Most configurations are different, and to accommodate those, you can configure how Buildarr connects to individual Prowlarr instances. Configuration of a single Prowlarr instance: prowlarr : hostname : \"prowlarr.example.com\" port : 9696 protocol : \"http\" settings : ... Configuration of multiple instances: prowlarr : # Configuration and settings common to all instances. port : 9696 settings : ... instances : # Prowlarr instance 1-specific configuration. prowlarr1 : hostname : \"prowlarr1.example.com\" settings : ... # Prowlarr instance 2-specific configuration. prowlarr2 : hostname : \"prowlarr2.example.com\" api_key : \"...\" # Explicitly define API key settings : ... hostname : NonEmptyStr = 'prowlarr' class-attribute instance-attribute # Hostname of the Prowlarr instance to connect to. When defining a single instance using the global prowlarr configuration block, the default hostname is prowlarr . When using multiple instance-specific configurations, the default hostname is the name given to the instance in the instances attribute. prowlarr : instances : prowlarr1 : # <--- This becomes the default hostname ... port : Port = 9696 class-attribute instance-attribute # Port number of the Prowlarr instance to connect to. protocol : ProwlarrProtocol = 'http' class-attribute instance-attribute # Communication protocol to use to connect to Prowlarr. Values: http https api_key : Optional [ ArrApiKey ] = None class-attribute instance-attribute # API key to use to authenticate with the Prowlarr instance. If undefined or set to None , automatically retrieve the API key. This can only be done on Prowlarr instances with authentication disabled. version : Optional [ str ] = None class-attribute instance-attribute # The expected version of the Prowlarr instance. If undefined or set to None , the version is auto-detected. This value is also used when generating a Docker Compose file. When undefined or set to None , the version tag will be set to latest . settings : ProwlarrSettings = ProwlarrSettings () class-attribute instance-attribute # Prowlarr settings. Configuration options for Prowlarr itself are set within this structure.","title":"Host Configuration"},{"location":"plugins/prowlarr/configuration/host/#host-configuration","text":"By default, Buildarr will look for a single instance at http://prowlarr:9696 . Most configurations are different, and to accommodate those, you can configure how Buildarr connects to individual Prowlarr instances. Configuration of a single Prowlarr instance: prowlarr : hostname : \"prowlarr.example.com\" port : 9696 protocol : \"http\" settings : ... Configuration of multiple instances: prowlarr : # Configuration and settings common to all instances. port : 9696 settings : ... instances : # Prowlarr instance 1-specific configuration. prowlarr1 : hostname : \"prowlarr1.example.com\" settings : ... # Prowlarr instance 2-specific configuration. prowlarr2 : hostname : \"prowlarr2.example.com\" api_key : \"...\" # Explicitly define API key settings : ...","title":"Host Configuration"},{"location":"plugins/prowlarr/configuration/host/#buildarr_prowlarr.config.ProwlarrInstanceConfig.hostname","text":"Hostname of the Prowlarr instance to connect to. When defining a single instance using the global prowlarr configuration block, the default hostname is prowlarr . When using multiple instance-specific configurations, the default hostname is the name given to the instance in the instances attribute. prowlarr : instances : prowlarr1 : # <--- This becomes the default hostname ...","title":"hostname"},{"location":"plugins/prowlarr/configuration/host/#buildarr_prowlarr.config.ProwlarrInstanceConfig.port","text":"Port number of the Prowlarr instance to connect to.","title":"port"},{"location":"plugins/prowlarr/configuration/host/#buildarr_prowlarr.config.ProwlarrInstanceConfig.protocol","text":"Communication protocol to use to connect to Prowlarr. Values: http https","title":"protocol"},{"location":"plugins/prowlarr/configuration/host/#buildarr_prowlarr.config.ProwlarrInstanceConfig.api_key","text":"API key to use to authenticate with the Prowlarr instance. If undefined or set to None , automatically retrieve the API key. This can only be done on Prowlarr instances with authentication disabled.","title":"api_key"},{"location":"plugins/prowlarr/configuration/host/#buildarr_prowlarr.config.ProwlarrInstanceConfig.version","text":"The expected version of the Prowlarr instance. If undefined or set to None , the version is auto-detected. This value is also used when generating a Docker Compose file. When undefined or set to None , the version tag will be set to latest .","title":"version"},{"location":"plugins/prowlarr/configuration/host/#buildarr_prowlarr.config.ProwlarrInstanceConfig.settings","text":"Prowlarr settings. Configuration options for Prowlarr itself are set within this structure.","title":"settings"},{"location":"plugins/prowlarr/configuration/settings/download-clients/","text":"Download Clients # Download clients are entirely optional in Prowlarr, but are available so you can manually perform grabs entirely within Prowlarr. In Buildarr, download clients for Prowlarr are configured in much the same way as they are for Sonarr, although some attributes are different. The main differences are: All instances of the recent_priority attribute are renamed to client_priority . The older_priority attribute has been removed. Any attribute relating to post-import management has been removed. Download clients that use Usenet or BitTorrent can be configured. prowlarr : settings : download_clients : definitions : Transmission : type : \"transmission\" host : \"transmission\" port : 9091 ... Some download clients support mapping categories within a download client to Prowlarr categories, to automatically classify downloads by content type. This can be defined in Buildarr using the category_mappings attribute. prowlarr : settings : download_clients : definitions : qBittorrent : type : \"qbittorrent\" ... category_mappings : \"movies\" : - \"Movies/HD\" - \"Movies/SD\" ... delete_unmanaged : bool = False class-attribute instance-attribute # Automatically delete download clients not defined in Buildarr. definitions : Dict [ str , Annotated [ DownloadClientType , Field ( discriminator = 'type' )]] = {} class-attribute instance-attribute # Define download clients under this attribute. Configuring download clients # Download clients are defined using the following format. Here is an example of a Transmission download client being configured. --- prowlarr : settings : download_clients : definitions : Transmission : # Name of the download client type : \"transmission\" # Type of download client enable : true # Enable the download client in Prowlarr host : \"transmission\" port : 9091 category : \"prowlarr\" # Define any other type-specific or global # download client attributes as needed. Every download client definition must have the correct type value defined, to tell Buildarr what type of download client to configure. The name of the download client definition is just a name, and has no meaning. enable can be set to False to keep the download client configured on Prowlarr, but disabled so that it is inactive. The below attributes can be defined on any type of download client. enable : bool = True class-attribute instance-attribute # When True , this download client is active and Prowlarr is able to send requests to it. priority : PositiveInt = 1 class-attribute instance-attribute # Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Prowlarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client. Usenet download clients # These download clients retrieve media using the Usenet discussion and content delivery system. Download Station (Usenet) # Download client which uses Usenet via Download Station. type : Literal [ 'downloadstation-usenet' ] = 'downloadstation-usenet' class-attribute instance-attribute # Type value associated with this kind of download client. host : NonEmptyStr instance-attribute # Download Station host name. port : Port = 5000 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. username : NonEmptyStr instance-attribute # User name to use when authenticating with the download client. password : Password instance-attribute # Password to use to authenticate the download client user. category : Optional [ str ] = None class-attribute instance-attribute # Associate media from Prowlarr with a category. Creates a [category] subdirectory in the output directory. Adding a category specific to Prowlarr avoids conflicts with unrelated non-Prowlarr downloads. Using a category is optional, but strongly recommended. directory : Optional [ str ] = None class-attribute instance-attribute # Optional shared folder to put downloads into. Leave blank, set to null or undefined to use the default download client location. NZBGet # NZBGet download client. type : Literal [ 'nzbget' ] = 'nzbget' class-attribute instance-attribute # Type value associated with this kind of download client. host : NonEmptyStr instance-attribute # NZBGet host name. port : Port = 5000 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : Optional [ str ] = None class-attribute instance-attribute # Adds a prefix to the NZBGet url, e.g. http://[host]:[port]/[url_base]/jsonrpc . username : NonEmptyStr instance-attribute # User name to use when authenticating with the download client. password : Password instance-attribute # Password to use to authenticate the download client user. category : Optional [ str ] = None class-attribute instance-attribute # Associate media from Prowlarr with a category. Adding a category specific to Prowlarr avoids conflicts with unrelated non-Prowlarr downloads. Using a category is optional, but strongly recommended. client_priority : NzbgetPriority = NzbgetPriority . normal class-attribute instance-attribute # Priority to use when grabbing releases. Values: verylow low normal high veryhigh force add_paused : bool = False class-attribute instance-attribute # Add media to the download client in the paused state. This option requires NZBGet version 16.0 or later. category_mappings : Dict [ NonEmptyStr , Set [ LowerCaseNonEmptyStr ]] = {} class-attribute instance-attribute # Category mappings for associating a category on the download client with the selected Prowlarr categories. NZBVortex # NZBVortex download client. type : Literal [ 'nzbvortex' ] = 'nzbvortex' class-attribute instance-attribute # Type value associated with this kind of download client. host : NonEmptyStr instance-attribute # NZBVortex host name. port : Port = 4321 class-attribute instance-attribute # Download client access port. url_base : Optional [ str ] = None class-attribute instance-attribute # Adds a prefix to the NZBVortex url, e.g. http://[host]:[port]/[url_base]/api . api_key : Password instance-attribute # API key to use to authenticate with the download client. category : Optional [ str ] = None class-attribute instance-attribute # Associate media from Prowlarr with a category. Adding a category specific to Prowlarr avoids conflicts with unrelated non-Prowlarr downloads. Using a category is optional, but strongly recommended. client_priority : NzbvortexPriority = NzbvortexPriority . normal class-attribute instance-attribute # Priority to use when grabbing releases. Values: low normal high category_mappings : Dict [ NonEmptyStr , Set [ LowerCaseNonEmptyStr ]] = {} class-attribute instance-attribute # Category mappings for associating a category on the download client with the selected Prowlarr categories. Pneumatic # Download client for the Pneumatic NZB add-on for Kodi/XMBC. type : Literal [ 'pneumatic' ] = 'pneumatic' class-attribute instance-attribute # Type value associated with this kind of download client. nzb_folder : NonEmptyStr instance-attribute # Folder in which Prowlarr will store .nzb files. This folder will need to be reachable from Kodi/XMBC. SABnzbd # SABnzbd download client. type : Literal [ 'sabnzbd' ] = 'sabnzbd' class-attribute instance-attribute # Type value associated with this kind of download client. host : NonEmptyStr instance-attribute # SABnzbd host name. port : Port = 4321 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : Optional [ str ] = None class-attribute instance-attribute # Adds a prefix to the SABnzbd URL, e.g. http://[host]:[port]/[url_base]/api/ . api_key : Optional [ SecretStr ] = None class-attribute instance-attribute # API key to use to authenticate with SABnzbd, if required. category : Optional [ str ] = None class-attribute instance-attribute # Associate media from Prowlarr with a category. Adding a category specific to Prowlarr avoids conflicts with unrelated non-Prowlarr downloads. Using a category is optional, but strongly recommended. client_priority : SabnzbdPriority = SabnzbdPriority . default class-attribute instance-attribute # Priority to use when grabbing releases. Values: default paused low normal high force category_mappings : Dict [ NonEmptyStr , Set [ LowerCaseNonEmptyStr ]] = {} class-attribute instance-attribute # Category mappings for associating a category on the download client with the selected Prowlarr categories. Usenet Blackhole # Usenet Blackhole download client. type : Literal [ 'usenet-blackhole' ] = 'usenet-blackhole' class-attribute instance-attribute # Type value associated with this kind of download client. nzb_folder : NonEmptyStr instance-attribute # Folder in which Prowlarr will store .nzb files. Torrent download clients # These download clients use the BitTorrent peer-to-peer file sharing protocol to retrieve media files. Aria2 # Aria2 download client. type : Literal [ 'aria2' ] = 'aria2' class-attribute instance-attribute # Type value associated with this kind of download client. host : NonEmptyStr instance-attribute # Aria2 host name. port : Port = 6800 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. rpc_path : NonEmptyStr = '/rpc' class-attribute instance-attribute # XML RPC path in the Aria2 client URL. secret_token : Password instance-attribute # Secret token to use to authenticate with the download client. Deluge # Deluge download client. type : Literal [ 'deluge' ] = 'deluge' class-attribute instance-attribute # Type value associated with this kind of download client. host : NonEmptyStr instance-attribute # Deluge host name. port : Port = 8112 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : Optional [ str ] = None class-attribute instance-attribute # Adds a prefix to the Deluge JSON URL, e.g. http://[host]:[port]/[url_base]/json . password : Password instance-attribute # Password to use to authenticate the download client user. category : Optional [ str ] = 'prowlarr' class-attribute instance-attribute # Associate media from Prowlarr with a category. Adding a category specific to Prowlarr avoids conflicts with unrelated non-Prowlarr downloads. Using a category is optional, but strongly recommended. client_priority : DelugePriority = DelugePriority . last class-attribute instance-attribute # Priority to use when grabbing releases. Values: last first category_mappings : Dict [ NonEmptyStr , Set [ LowerCaseNonEmptyStr ]] = {} class-attribute instance-attribute # Category mappings for associating a category on the download client with the selected Prowlarr categories. Download Station (Torrent) # Download client which uses torrents via Download Station. type : Literal [ 'downloadstation-torrent' ] = 'downloadstation-torrent' class-attribute instance-attribute # Type value associated with this kind of download client. host : NonEmptyStr instance-attribute # Download Station host name. port : Port = 5000 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. username : NonEmptyStr instance-attribute # User name to use when authenticating with the download client. password : Password instance-attribute # Password to use to authenticate the download client user. category : Optional [ str ] = None class-attribute instance-attribute # Associate media from Prowlarr with a category. Creates a [category] subdirectory in the output directory. Adding a category specific to Prowlarr avoids conflicts with unrelated non-Prowlarr downloads. Using a category is optional, but strongly recommended. directory : Optional [ str ] = None class-attribute instance-attribute # Optional shared folder to put downloads into. Leave blank, set to null or undefined to use the default download client location. Flood # Flood download client. type : Literal [ 'flood' ] = 'flood' class-attribute instance-attribute # Type value associated with this kind of download client. host : NonEmptyStr instance-attribute # Flood host name. port : Port = 3000 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : Optional [ str ] = None class-attribute instance-attribute # Optionally adds a prefix to Flood API, such as [protocol]://[host]:[port]/[url_base]api . username : NonEmptyStr instance-attribute # User name to use when authenticating with the download client. password : Password instance-attribute # Password to use to authenticate the download client user. destination : Optional [ str ] = None class-attribute instance-attribute # Manually specified download destination. flood_tags : Set [ NonEmptyStr ] = { 'prowlarr' } class-attribute instance-attribute # Initial tags of a download within Flood. To be recognized, a download must have all initial tags. This avoids conflicts with unrelated downloads. additional_tags : Set [ FloodMediaTag ] = set () class-attribute instance-attribute # Adds properties of media as tags within Flood. add_paused : bool = False class-attribute instance-attribute # Add media to the download client in the Paused state. category_mappings : Dict [ NonEmptyStr , Set [ LowerCaseNonEmptyStr ]] = {} class-attribute instance-attribute # Category mappings for associating a category on the download client with the selected Prowlarr categories. Freebox # Download client for connecting to a Freebox instance. type : Literal [ 'freebox' ] = 'freebox' class-attribute instance-attribute # Type value associated with this kind of download client. host : NonEmptyStr = 'mafreebox.freebox.fr' class-attribute instance-attribute # Hostname or host IP address of the Freebox. The default of mafreebox.freebox.fr will only work if on the same network. port : Port = 443 class-attribute instance-attribute # Freebox access port. Set to the HTTPS default port as Freebox uses HTTPS by default. use_ssl : bool = True class-attribute instance-attribute # Use a secure connection when connecting to the Freebox API. api_url : NonEmptyStr = '/api/v1' class-attribute instance-attribute # Define Freebox API base URL with API version, e.g. http[s]://<host>:<port>/<api_url>/ . app_id : NonEmptyStr instance-attribute # App ID used to authenticate with the Freebox. app_token : Password instance-attribute # Unique token used to authenticate with the Freebox. destination_directory : Optional [ str ] = None class-attribute instance-attribute # Optional location to put downloads in, on the Freebox node. Leave blank, undefined or set to null to use the default Freebox download location. category : Optional [ str ] = None class-attribute instance-attribute # Default category to classify downloads under if no category mappings apply to it. This will create a [category] subdirectory in the output directory. Adding a category specific to Prowlarr avoids conflicts with unrelated non-Prowlarr downloads. client_priority : FreeboxPriority = FreeboxPriority . last class-attribute instance-attribute # Priority to use when adding a download to the client. add_paused : bool = False class-attribute instance-attribute # Add media to the download client in the Paused state. category_mappings : Dict [ NonEmptyStr , Set [ LowerCaseNonEmptyStr ]] = {} class-attribute instance-attribute # Category mappings for associating a category on the download client with the selected Prowlarr categories. Hadouken # Hadouken download client. type : Literal [ 'hadouken' ] = 'hadouken' class-attribute instance-attribute # Type value associated with this kind of download client. host : NonEmptyStr instance-attribute # Hadouken host name. port : Port = 7070 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : Optional [ str ] = None class-attribute instance-attribute # Adds a prefix to the Hadouken url, e.g. http://[host]:[port]/[url_base]/api . username : NonEmptyStr instance-attribute # User name to use when authenticating with the download client. password : Password instance-attribute # Password to use to authenticate the download client user. category : NonEmptyStr = 'prowlarr' class-attribute instance-attribute # Associate media from Prowlarr with a category. Adding a category specific to Prowlarr avoids conflicts with unrelated non-Prowlarr downloads. Using a category is optional, but strongly recommended. category_mappings : Dict [ NonEmptyStr , Set [ LowerCaseNonEmptyStr ]] = {} class-attribute instance-attribute # Category mappings for associating a category on the download client with the selected Prowlarr categories. qBittorrent # qBittorrent download client. type : Literal [ 'qbittorrent' ] = 'qbittorrent' class-attribute instance-attribute # Type value associated with this kind of download client. host : NonEmptyStr instance-attribute # qBittorrent host name. port : Port = 8080 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : Optional [ str ] = None class-attribute instance-attribute # Adds a prefix to the qBittorrent URL, e.g. http://[host]:[port]/[url_base]/api . username : NonEmptyStr instance-attribute # User name to use when authenticating with the download client. password : Password instance-attribute # Password to use to authenticate the download client user. category : Optional [ str ] = 'prowlarr' class-attribute instance-attribute # Associate media from Prowlarr with a category. Adding a category specific to Prowlarr avoids conflicts with unrelated non-Prowlarr downloads. Using a category is optional, but strongly recommended. client_priority : QbittorrentPriority = QbittorrentPriority . last class-attribute instance-attribute # Priority to use when grabbing releases. Values: last first initial_state : QbittorrentState = QbittorrentState . start class-attribute instance-attribute # Initial state for torrents added to qBittorrent. Note that forced torrents do not abide by seed restrictions. category_mappings : Dict [ NonEmptyStr , Set [ LowerCaseNonEmptyStr ]] = {} class-attribute instance-attribute # Category mappings for associating a category on the download client with the selected Prowlarr categories. RTorrent (ruTorrent) # RTorrent (ruTorrent) download client. type : Literal [ 'rtorrent' , 'rutorrent' ] = 'rtorrent' class-attribute instance-attribute # Type value associated with this kind of download client. host : NonEmptyStr instance-attribute # RTorrent host name. port : Port = 8080 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : NonEmptyStr = 'RPC2' class-attribute instance-attribute # Path to the XMLRPC endpoint, e.g. http(s)://[host]:[port]/[url_base] . When using RTorrent this usually is RPC2 or plugins/rpc/rpc.php . username : NonEmptyStr instance-attribute # User name to use when authenticating with the download client. password : Password instance-attribute # Password to use to authenticate the download client user. category : Optional [ str ] = 'prowlarr' class-attribute instance-attribute # Associate media from Prowlarr with a category. Adding a category specific to Prowlarr avoids conflicts with unrelated non-Prowlarr downloads. Using a category is optional, but strongly recommended. client_priority : RtorrentPriority = RtorrentPriority . normal class-attribute instance-attribute # Priority to use when grabbing releases. Values: verylow low normal high add_stopped : bool = False class-attribute instance-attribute # Enabling will add torrents and magnets to RTorrent in a stopped state. This may break magnet files. category_mappings : Dict [ NonEmptyStr , Set [ LowerCaseNonEmptyStr ]] = {} class-attribute instance-attribute # Category mappings for associating a category on the download client with the selected Prowlarr categories. Torrent Blackhole # Torrent Blackhole download client. type : Literal [ 'torrent-blackhole' ] = 'torrent-blackhole' class-attribute instance-attribute # Type value associated with this kind of download client. torrent_folder : NonEmptyStr instance-attribute # Folder in which Prowlarr will store .torrent files. save_magnet_files : bool = False class-attribute instance-attribute # Save the magnet link if no .torrent file is available. Only useful if the download client supports magnets saved to a file. magnet_file_extension : NonEmptyStr = '.magnet' class-attribute instance-attribute # Extension to use for magnet links. Transmission/Vuze # Transmission and Vuze use the same configuration parameters. To use Transmission, set the type attribute in the download client to transmission . To use Vuze, set the type attribute in the download client to vuze . Configuration options common to both Transmission and Vuze download clients: host : NonEmptyStr instance-attribute # Transmission/Vuze host name. port : Port = 9091 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : NonEmptyStr = '/transmission/' class-attribute instance-attribute # Adds a prefix to the Transmission/Vuze RPC url, e.g. http://[host]:[port][url_base]rpc . This is set by default in most clients to /transmission/ . username : Optional [ str ] = None class-attribute instance-attribute # User name to use when authenticating with the download client, if required. password : Optional [ Password ] = None class-attribute instance-attribute # Password to use to authenticate the download client user, if required. category : Optional [ str ] = None class-attribute instance-attribute # Associate media from Prowlarr with a category. Creates a [category] subdirectory in the output directory. Adding a category specific to Prowlarr avoids conflicts with unrelated non-Prowlarr downloads. Using a category is optional, but strongly recommended. directory : Optional [ str ] = None class-attribute instance-attribute # Optional shared folder to put downloads into. Leave blank, set to null or undefined to use the default download client location. client_priority : TransmissionPriority = TransmissionPriority . last class-attribute instance-attribute # Priority to use when grabbing releases. Values: last first add_paused : bool = False class-attribute instance-attribute # Add media to the download client in the Paused state. uTorrent # uTorrent download client. type : Literal [ 'utorrent' ] = 'utorrent' class-attribute instance-attribute # Type value associated with this kind of download client. host : NonEmptyStr instance-attribute # uTorrent host name. port : Port = 8080 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : Optional [ str ] = None class-attribute instance-attribute # Adds a prefix to the uTorrent URL, e.g. http://[host]:[port]/[url_base]/api . username : NonEmptyStr instance-attribute # User name to use when authenticating with the download client. password : Password instance-attribute # Password to use to authenticate the download client user. category : Optional [ str ] = 'prowlarr' class-attribute instance-attribute # Associate media from Prowlarr with a category. Adding a category specific to Prowlarr avoids conflicts with unrelated non-Prowlarr downloads. Using a category is optional, but strongly recommended. client_priority : UtorrentPriority = UtorrentPriority . last class-attribute instance-attribute # Priority to use when grabbing releases. Values: last first initial_state : UtorrentState = UtorrentState . start class-attribute instance-attribute # Initial state for torrents added to uTorrent. category_mappings : Dict [ NonEmptyStr , Set [ LowerCaseNonEmptyStr ]] = {} class-attribute instance-attribute # Category mappings for associating a category on the download client with the selected Prowlarr categories.","title":"Download Clients"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#download-clients","text":"Download clients are entirely optional in Prowlarr, but are available so you can manually perform grabs entirely within Prowlarr. In Buildarr, download clients for Prowlarr are configured in much the same way as they are for Sonarr, although some attributes are different. The main differences are: All instances of the recent_priority attribute are renamed to client_priority . The older_priority attribute has been removed. Any attribute relating to post-import management has been removed. Download clients that use Usenet or BitTorrent can be configured. prowlarr : settings : download_clients : definitions : Transmission : type : \"transmission\" host : \"transmission\" port : 9091 ... Some download clients support mapping categories within a download client to Prowlarr categories, to automatically classify downloads by content type. This can be defined in Buildarr using the category_mappings attribute. prowlarr : settings : download_clients : definitions : qBittorrent : type : \"qbittorrent\" ... category_mappings : \"movies\" : - \"Movies/HD\" - \"Movies/SD\" ...","title":"Download Clients"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.ProwlarrDownloadClientsSettings.delete_unmanaged","text":"Automatically delete download clients not defined in Buildarr.","title":"delete_unmanaged"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.ProwlarrDownloadClientsSettings.definitions","text":"Define download clients under this attribute.","title":"definitions"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#configuring-download-clients","text":"Download clients are defined using the following format. Here is an example of a Transmission download client being configured. --- prowlarr : settings : download_clients : definitions : Transmission : # Name of the download client type : \"transmission\" # Type of download client enable : true # Enable the download client in Prowlarr host : \"transmission\" port : 9091 category : \"prowlarr\" # Define any other type-specific or global # download client attributes as needed. Every download client definition must have the correct type value defined, to tell Buildarr what type of download client to configure. The name of the download client definition is just a name, and has no meaning. enable can be set to False to keep the download client configured on Prowlarr, but disabled so that it is inactive. The below attributes can be defined on any type of download client.","title":"Configuring download clients"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.base.DownloadClient.enable","text":"When True , this download client is active and Prowlarr is able to send requests to it.","title":"enable"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.base.DownloadClient.priority","text":"Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority.","title":"priority"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.base.DownloadClient.tags","text":"Prowlarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client.","title":"tags"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#usenet-download-clients","text":"These download clients retrieve media using the Usenet discussion and content delivery system.","title":"Usenet download clients"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#download-station-usenet","text":"Download client which uses Usenet via Download Station.","title":"Download Station (Usenet)"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.DownloadstationUsenetDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.DownloadstationUsenetDownloadClient.host","text":"Download Station host name.","title":"host"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.DownloadstationUsenetDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.DownloadstationUsenetDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.DownloadstationUsenetDownloadClient.username","text":"User name to use when authenticating with the download client.","title":"username"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.DownloadstationUsenetDownloadClient.password","text":"Password to use to authenticate the download client user.","title":"password"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.DownloadstationUsenetDownloadClient.category","text":"Associate media from Prowlarr with a category. Creates a [category] subdirectory in the output directory. Adding a category specific to Prowlarr avoids conflicts with unrelated non-Prowlarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.DownloadstationUsenetDownloadClient.directory","text":"Optional shared folder to put downloads into. Leave blank, set to null or undefined to use the default download client location.","title":"directory"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#nzbget","text":"NZBGet download client.","title":"NZBGet"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.NzbgetDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.NzbgetDownloadClient.host","text":"NZBGet host name.","title":"host"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.NzbgetDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.NzbgetDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.NzbgetDownloadClient.url_base","text":"Adds a prefix to the NZBGet url, e.g. http://[host]:[port]/[url_base]/jsonrpc .","title":"url_base"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.NzbgetDownloadClient.username","text":"User name to use when authenticating with the download client.","title":"username"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.NzbgetDownloadClient.password","text":"Password to use to authenticate the download client user.","title":"password"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.NzbgetDownloadClient.category","text":"Associate media from Prowlarr with a category. Adding a category specific to Prowlarr avoids conflicts with unrelated non-Prowlarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.NzbgetDownloadClient.client_priority","text":"Priority to use when grabbing releases. Values: verylow low normal high veryhigh force","title":"client_priority"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.NzbgetDownloadClient.add_paused","text":"Add media to the download client in the paused state. This option requires NZBGet version 16.0 or later.","title":"add_paused"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.NzbgetDownloadClient.category_mappings","text":"Category mappings for associating a category on the download client with the selected Prowlarr categories.","title":"category_mappings"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#nzbvortex","text":"NZBVortex download client.","title":"NZBVortex"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.NzbvortexDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.NzbvortexDownloadClient.host","text":"NZBVortex host name.","title":"host"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.NzbvortexDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.NzbvortexDownloadClient.url_base","text":"Adds a prefix to the NZBVortex url, e.g. http://[host]:[port]/[url_base]/api .","title":"url_base"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.NzbvortexDownloadClient.api_key","text":"API key to use to authenticate with the download client.","title":"api_key"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.NzbvortexDownloadClient.category","text":"Associate media from Prowlarr with a category. Adding a category specific to Prowlarr avoids conflicts with unrelated non-Prowlarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.NzbvortexDownloadClient.client_priority","text":"Priority to use when grabbing releases. Values: low normal high","title":"client_priority"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.NzbvortexDownloadClient.category_mappings","text":"Category mappings for associating a category on the download client with the selected Prowlarr categories.","title":"category_mappings"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#pneumatic","text":"Download client for the Pneumatic NZB add-on for Kodi/XMBC.","title":"Pneumatic"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.PneumaticDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.PneumaticDownloadClient.nzb_folder","text":"Folder in which Prowlarr will store .nzb files. This folder will need to be reachable from Kodi/XMBC.","title":"nzb_folder"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#sabnzbd","text":"SABnzbd download client.","title":"SABnzbd"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.SabnzbdDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.SabnzbdDownloadClient.host","text":"SABnzbd host name.","title":"host"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.SabnzbdDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.SabnzbdDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.SabnzbdDownloadClient.url_base","text":"Adds a prefix to the SABnzbd URL, e.g. http://[host]:[port]/[url_base]/api/ .","title":"url_base"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.SabnzbdDownloadClient.api_key","text":"API key to use to authenticate with SABnzbd, if required.","title":"api_key"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.SabnzbdDownloadClient.category","text":"Associate media from Prowlarr with a category. Adding a category specific to Prowlarr avoids conflicts with unrelated non-Prowlarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.SabnzbdDownloadClient.client_priority","text":"Priority to use when grabbing releases. Values: default paused low normal high force","title":"client_priority"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.SabnzbdDownloadClient.category_mappings","text":"Category mappings for associating a category on the download client with the selected Prowlarr categories.","title":"category_mappings"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#usenet-blackhole","text":"Usenet Blackhole download client.","title":"Usenet Blackhole"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.UsenetBlackholeDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.usenet.UsenetBlackholeDownloadClient.nzb_folder","text":"Folder in which Prowlarr will store .nzb files.","title":"nzb_folder"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#torrent-download-clients","text":"These download clients use the BitTorrent peer-to-peer file sharing protocol to retrieve media files.","title":"Torrent download clients"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#aria2","text":"Aria2 download client.","title":"Aria2"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.Aria2DownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.Aria2DownloadClient.host","text":"Aria2 host name.","title":"host"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.Aria2DownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.Aria2DownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.Aria2DownloadClient.rpc_path","text":"XML RPC path in the Aria2 client URL.","title":"rpc_path"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.Aria2DownloadClient.secret_token","text":"Secret token to use to authenticate with the download client.","title":"secret_token"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#deluge","text":"Deluge download client.","title":"Deluge"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.DelugeDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.DelugeDownloadClient.host","text":"Deluge host name.","title":"host"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.DelugeDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.DelugeDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.DelugeDownloadClient.url_base","text":"Adds a prefix to the Deluge JSON URL, e.g. http://[host]:[port]/[url_base]/json .","title":"url_base"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.DelugeDownloadClient.password","text":"Password to use to authenticate the download client user.","title":"password"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.DelugeDownloadClient.category","text":"Associate media from Prowlarr with a category. Adding a category specific to Prowlarr avoids conflicts with unrelated non-Prowlarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.DelugeDownloadClient.client_priority","text":"Priority to use when grabbing releases. Values: last first","title":"client_priority"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.DelugeDownloadClient.category_mappings","text":"Category mappings for associating a category on the download client with the selected Prowlarr categories.","title":"category_mappings"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#download-station-torrent","text":"Download client which uses torrents via Download Station.","title":"Download Station (Torrent)"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.DownloadstationTorrentDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.DownloadstationTorrentDownloadClient.host","text":"Download Station host name.","title":"host"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.DownloadstationTorrentDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.DownloadstationTorrentDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.DownloadstationTorrentDownloadClient.username","text":"User name to use when authenticating with the download client.","title":"username"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.DownloadstationTorrentDownloadClient.password","text":"Password to use to authenticate the download client user.","title":"password"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.DownloadstationTorrentDownloadClient.category","text":"Associate media from Prowlarr with a category. Creates a [category] subdirectory in the output directory. Adding a category specific to Prowlarr avoids conflicts with unrelated non-Prowlarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.DownloadstationTorrentDownloadClient.directory","text":"Optional shared folder to put downloads into. Leave blank, set to null or undefined to use the default download client location.","title":"directory"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#flood","text":"Flood download client.","title":"Flood"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.FloodDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.FloodDownloadClient.host","text":"Flood host name.","title":"host"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.FloodDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.FloodDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.FloodDownloadClient.url_base","text":"Optionally adds a prefix to Flood API, such as [protocol]://[host]:[port]/[url_base]api .","title":"url_base"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.FloodDownloadClient.username","text":"User name to use when authenticating with the download client.","title":"username"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.FloodDownloadClient.password","text":"Password to use to authenticate the download client user.","title":"password"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.FloodDownloadClient.destination","text":"Manually specified download destination.","title":"destination"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.FloodDownloadClient.flood_tags","text":"Initial tags of a download within Flood. To be recognized, a download must have all initial tags. This avoids conflicts with unrelated downloads.","title":"flood_tags"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.FloodDownloadClient.additional_tags","text":"Adds properties of media as tags within Flood.","title":"additional_tags"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.FloodDownloadClient.add_paused","text":"Add media to the download client in the Paused state.","title":"add_paused"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.FloodDownloadClient.category_mappings","text":"Category mappings for associating a category on the download client with the selected Prowlarr categories.","title":"category_mappings"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#freebox","text":"Download client for connecting to a Freebox instance.","title":"Freebox"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.FreeboxDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.FreeboxDownloadClient.host","text":"Hostname or host IP address of the Freebox. The default of mafreebox.freebox.fr will only work if on the same network.","title":"host"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.FreeboxDownloadClient.port","text":"Freebox access port. Set to the HTTPS default port as Freebox uses HTTPS by default.","title":"port"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.FreeboxDownloadClient.use_ssl","text":"Use a secure connection when connecting to the Freebox API.","title":"use_ssl"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.FreeboxDownloadClient.api_url","text":"Define Freebox API base URL with API version, e.g. http[s]://<host>:<port>/<api_url>/ .","title":"api_url"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.FreeboxDownloadClient.app_id","text":"App ID used to authenticate with the Freebox.","title":"app_id"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.FreeboxDownloadClient.app_token","text":"Unique token used to authenticate with the Freebox.","title":"app_token"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.FreeboxDownloadClient.destination_directory","text":"Optional location to put downloads in, on the Freebox node. Leave blank, undefined or set to null to use the default Freebox download location.","title":"destination_directory"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.FreeboxDownloadClient.category","text":"Default category to classify downloads under if no category mappings apply to it. This will create a [category] subdirectory in the output directory. Adding a category specific to Prowlarr avoids conflicts with unrelated non-Prowlarr downloads.","title":"category"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.FreeboxDownloadClient.client_priority","text":"Priority to use when adding a download to the client.","title":"client_priority"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.FreeboxDownloadClient.add_paused","text":"Add media to the download client in the Paused state.","title":"add_paused"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.FreeboxDownloadClient.category_mappings","text":"Category mappings for associating a category on the download client with the selected Prowlarr categories.","title":"category_mappings"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#hadouken","text":"Hadouken download client.","title":"Hadouken"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.HadoukenDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.HadoukenDownloadClient.host","text":"Hadouken host name.","title":"host"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.HadoukenDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.HadoukenDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.HadoukenDownloadClient.url_base","text":"Adds a prefix to the Hadouken url, e.g. http://[host]:[port]/[url_base]/api .","title":"url_base"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.HadoukenDownloadClient.username","text":"User name to use when authenticating with the download client.","title":"username"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.HadoukenDownloadClient.password","text":"Password to use to authenticate the download client user.","title":"password"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.HadoukenDownloadClient.category","text":"Associate media from Prowlarr with a category. Adding a category specific to Prowlarr avoids conflicts with unrelated non-Prowlarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.HadoukenDownloadClient.category_mappings","text":"Category mappings for associating a category on the download client with the selected Prowlarr categories.","title":"category_mappings"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#qbittorrent","text":"qBittorrent download client.","title":"qBittorrent"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.QbittorrentDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.QbittorrentDownloadClient.host","text":"qBittorrent host name.","title":"host"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.QbittorrentDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.QbittorrentDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.QbittorrentDownloadClient.url_base","text":"Adds a prefix to the qBittorrent URL, e.g. http://[host]:[port]/[url_base]/api .","title":"url_base"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.QbittorrentDownloadClient.username","text":"User name to use when authenticating with the download client.","title":"username"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.QbittorrentDownloadClient.password","text":"Password to use to authenticate the download client user.","title":"password"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.QbittorrentDownloadClient.category","text":"Associate media from Prowlarr with a category. Adding a category specific to Prowlarr avoids conflicts with unrelated non-Prowlarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.QbittorrentDownloadClient.client_priority","text":"Priority to use when grabbing releases. Values: last first","title":"client_priority"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.QbittorrentDownloadClient.initial_state","text":"Initial state for torrents added to qBittorrent. Note that forced torrents do not abide by seed restrictions.","title":"initial_state"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.QbittorrentDownloadClient.category_mappings","text":"Category mappings for associating a category on the download client with the selected Prowlarr categories.","title":"category_mappings"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#rtorrent-rutorrent","text":"RTorrent (ruTorrent) download client.","title":"RTorrent (ruTorrent)"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.RtorrentDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.RtorrentDownloadClient.host","text":"RTorrent host name.","title":"host"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.RtorrentDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.RtorrentDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.RtorrentDownloadClient.url_base","text":"Path to the XMLRPC endpoint, e.g. http(s)://[host]:[port]/[url_base] . When using RTorrent this usually is RPC2 or plugins/rpc/rpc.php .","title":"url_base"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.RtorrentDownloadClient.username","text":"User name to use when authenticating with the download client.","title":"username"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.RtorrentDownloadClient.password","text":"Password to use to authenticate the download client user.","title":"password"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.RtorrentDownloadClient.category","text":"Associate media from Prowlarr with a category. Adding a category specific to Prowlarr avoids conflicts with unrelated non-Prowlarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.RtorrentDownloadClient.client_priority","text":"Priority to use when grabbing releases. Values: verylow low normal high","title":"client_priority"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.RtorrentDownloadClient.add_stopped","text":"Enabling will add torrents and magnets to RTorrent in a stopped state. This may break magnet files.","title":"add_stopped"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.RtorrentDownloadClient.category_mappings","text":"Category mappings for associating a category on the download client with the selected Prowlarr categories.","title":"category_mappings"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#torrent-blackhole","text":"Torrent Blackhole download client.","title":"Torrent Blackhole"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.TorrentBlackholeDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.TorrentBlackholeDownloadClient.torrent_folder","text":"Folder in which Prowlarr will store .torrent files.","title":"torrent_folder"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.TorrentBlackholeDownloadClient.save_magnet_files","text":"Save the magnet link if no .torrent file is available. Only useful if the download client supports magnets saved to a file.","title":"save_magnet_files"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.TorrentBlackholeDownloadClient.magnet_file_extension","text":"Extension to use for magnet links.","title":"magnet_file_extension"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#transmissionvuze","text":"Transmission and Vuze use the same configuration parameters. To use Transmission, set the type attribute in the download client to transmission . To use Vuze, set the type attribute in the download client to vuze . Configuration options common to both Transmission and Vuze download clients:","title":"Transmission/Vuze"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.TransmissionDownloadClientBase.host","text":"Transmission/Vuze host name.","title":"host"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.TransmissionDownloadClientBase.port","text":"Download client access port.","title":"port"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.TransmissionDownloadClientBase.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.TransmissionDownloadClientBase.url_base","text":"Adds a prefix to the Transmission/Vuze RPC url, e.g. http://[host]:[port][url_base]rpc . This is set by default in most clients to /transmission/ .","title":"url_base"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.TransmissionDownloadClientBase.username","text":"User name to use when authenticating with the download client, if required.","title":"username"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.TransmissionDownloadClientBase.password","text":"Password to use to authenticate the download client user, if required.","title":"password"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.TransmissionDownloadClientBase.category","text":"Associate media from Prowlarr with a category. Creates a [category] subdirectory in the output directory. Adding a category specific to Prowlarr avoids conflicts with unrelated non-Prowlarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.TransmissionDownloadClientBase.directory","text":"Optional shared folder to put downloads into. Leave blank, set to null or undefined to use the default download client location.","title":"directory"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.TransmissionDownloadClientBase.client_priority","text":"Priority to use when grabbing releases. Values: last first","title":"client_priority"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.TransmissionDownloadClientBase.add_paused","text":"Add media to the download client in the Paused state.","title":"add_paused"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#utorrent","text":"uTorrent download client.","title":"uTorrent"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.UtorrentDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.UtorrentDownloadClient.host","text":"uTorrent host name.","title":"host"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.UtorrentDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.UtorrentDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.UtorrentDownloadClient.url_base","text":"Adds a prefix to the uTorrent URL, e.g. http://[host]:[port]/[url_base]/api .","title":"url_base"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.UtorrentDownloadClient.username","text":"User name to use when authenticating with the download client.","title":"username"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.UtorrentDownloadClient.password","text":"Password to use to authenticate the download client user.","title":"password"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.UtorrentDownloadClient.category","text":"Associate media from Prowlarr with a category. Adding a category specific to Prowlarr avoids conflicts with unrelated non-Prowlarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.UtorrentDownloadClient.client_priority","text":"Priority to use when grabbing releases. Values: last first","title":"client_priority"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.UtorrentDownloadClient.initial_state","text":"Initial state for torrents added to uTorrent.","title":"initial_state"},{"location":"plugins/prowlarr/configuration/settings/download-clients/#buildarr_prowlarr.config.settings.download_clients.torrent.UtorrentDownloadClient.category_mappings","text":"Category mappings for associating a category on the download client with the selected Prowlarr categories.","title":"category_mappings"},{"location":"plugins/prowlarr/configuration/settings/general/","text":"General # General configuration for Prowlarr are separated by category. prowlarr : settings : general : host : bind_address : \"*\" port : 9696 url_base : null use_ssl : false instance_name : \"Prowlarr (Buildarr Example)\" security : authentication : \"none\" proxy : enable : false logging : log_level : \"INFO\" analytics : send_anonymous_usage_data : true updates : branch : \"master\" automatic : false mechanism : \"docker\" backup : folder : \"Backups\" interval : 7 retention : 28 Some of the settings may affect Buildarr's ability to connect with the Prowlarr instance. Take care when changing these settings. Host # Prowlarr instance connection and name configuration. Many of these settings configure Prowlarr's external connection interface. If they are changed, the settings Buildarr uses to connect with this Prowlarr instance may need to be updated, so take care when modifying them. Changing any of these settings require a restart of Prowlarr to take effect. bind_address : Union [ Literal [ '*' ], IPv4Address ] = '*' class-attribute instance-attribute # Bind address for Prowlarr. Set to an IPv4 address bound to a local interface or * to bind on all interfaces. Unless you run Prowlarr directly on a host machine (i.e. not via Docker) and want Prowlarr to only be available on a specific network or interface, this generally should be left untouched. port : Port = 9696 class-attribute instance-attribute # Unencrypted (HTTP) listening port for Prowlarr. If Prowlarr is being run via Docker in the default bridge mode, this setting shouldn't be changed. Instead, change the external port it is bound to using --publish <port number>:9696 . ssl_port : Port = 6969 class-attribute instance-attribute # Encrypted (HTTPS) listening port for Prowlarr. If Prowlarr is being run via Docker in the default bridge mode, this setting shouldn't be changed. Instead, change the external port it is bound to using --publish <port number>:6969 . use_ssl : bool = False class-attribute instance-attribute # Enable the encrypted (HTTPS) listening port in Prowlarr. Instead of enabling HTTPS directly on Prowlarr, it is recommended to put Prowlarr behind a HTTPS-terminating reverse proxy such as Nginx, Caddy or Traefik. url_base : Optional [ str ] = None class-attribute instance-attribute # Add a prefix to all Prowlarr URLs, e.g. http://localhost:9696/<url_base>/settings/general . Generally used to accommodate reverse proxies where Prowlarr is assigned to a subfolder, e.g. https://example.com/prowlarr . instance_name : NonEmptyStr = 'Prowlarr' class-attribute instance-attribute # Instance name in the browser tab and in syslog. Security # Prowlarr instance security (authentication) settings. authentication : AuthenticationMethod = AuthenticationMethod . none class-attribute instance-attribute # Authentication method for logging into Prowlarr. By default, do not require authentication. Values: none - No authentication basic - Authentication using HTTP basic auth (browser popup) form - Authentication using a login page Requires a restart of Prowlarr to take effect. username : Optional [ str ] = None class-attribute instance-attribute # Username for the administrator user. Required if authentication is enabled. Requires a restart of Prowlarr to take effect. password : Optional [ Password ] = None class-attribute instance-attribute # Password for the administrator user. Required if authentication is enabled. Requires a restart of Prowlarr to take effect. certificate_validation : CertificateValidation = CertificateValidation . enabled class-attribute instance-attribute # Change how strict HTTPS certification validation is. Do not change unless you understand the risks. Values: enabled - Validate HTTPS certificates for all hosts local-disabled - Disable HTTPS certificate validation for hosts on the local network disabled - Disable HTTPS certificate validation completely Proxy # Proxy configuration for Prowlarr. enable : bool = False class-attribute instance-attribute # Use a proxy server to access the Internet. proxy_type : ProxyType = ProxyType . http class-attribute instance-attribute # Type of proxy to connect to. Values: http - HTTP(S) proxy socks4 - SOCKSv4 proxy socks5 - SOCKSv5 proxy (Tor is supported) hostname : Optional [ str ] = None class-attribute instance-attribute # Proxy server hostname. Required if using a proxy is enabled. port : Port = 8080 class-attribute instance-attribute # Proxy server access port. username : Optional [ str ] = None class-attribute instance-attribute # Username to authenticate with. Only enter if authentication is required by the proxy. password : Optional [ Password ] = None class-attribute instance-attribute # Password for the proxy user. Only enter if authentication is required by the proxy. ignored_addresses : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # List of domains/addresses which bypass the proxy. Wildcards ( * ) are supported. bypass_proxy_for_local_addresses : bool = True class-attribute instance-attribute # Do not use the proxy to access local network addresses. Logging # Logging configuration for the Prowlarr application. log_level : ProwlarrLogLevel = ProwlarrLogLevel . INFO class-attribute instance-attribute # Verbosity of logging output. Values: INFO - Standard log output DEBUG - Debugging log output TRACE - Trace diagnostics log output Analytics # Configuration of analytics and telemetry from within Prowlarr. send_anonymous_usage_data : bool = True class-attribute instance-attribute # Send anonymous usage and error information to Prowlarr's servers. This includes information on your browser, which Prowlarr Web UI pages you use, error reporting and OS/runtime versions. This information is reportedly used to prioritise features and bug fixes. Requires a restart of Prowlarr to take effect. Updates # Settings for updating Prowlarr. branch : NonEmptyStr = 'master' class-attribute instance-attribute # Branch used by the external update mechanism. Changing this value has no effect on Docker installations. If unsure, leave this undefined in Buildarr and use the value already set in Prowlarr. automatic : bool = False class-attribute instance-attribute # Automatically download and install updates. Manual updates can still be performed from System -> Updates. This option must be left set to false on Docker installations. mechanism : UpdateMechanism = UpdateMechanism . docker class-attribute instance-attribute # Set the mechanism for updating Prowlarr. Must be set to docker on Docker installations. Values: builtin - Prowlarr built-in updater mechanism script - Use the configured update script external - External update mechanism apt - Debian APT package docker - Docker image script_path : Optional [ str ] = None class-attribute instance-attribute # Path to a custom script that takes an extracted update package and handles the remainder of the update process. Required if mechanism is set to script . Backup # Settings for Prowlarr automatic backups. folder : NonEmptyStr = 'Backups' class-attribute instance-attribute # Folder to backup Prowlarr data to. Relative paths will be under Prowlarr's AppData directory. interval : int = Field ( 7 , ge = 1 , le = 7 ) class-attribute instance-attribute # Interval between automatic backups, in days. Must be set somewhere between 1 and 7 days. retention : int = Field ( 28 , ge = 1 , le = 90 ) class-attribute instance-attribute # Retention period for backups, in days. Backups older than the retention period will be cleaned up automatically. Must be set somewhere between 1 and 90 days.","title":"General"},{"location":"plugins/prowlarr/configuration/settings/general/#general","text":"General configuration for Prowlarr are separated by category. prowlarr : settings : general : host : bind_address : \"*\" port : 9696 url_base : null use_ssl : false instance_name : \"Prowlarr (Buildarr Example)\" security : authentication : \"none\" proxy : enable : false logging : log_level : \"INFO\" analytics : send_anonymous_usage_data : true updates : branch : \"master\" automatic : false mechanism : \"docker\" backup : folder : \"Backups\" interval : 7 retention : 28 Some of the settings may affect Buildarr's ability to connect with the Prowlarr instance. Take care when changing these settings.","title":"General"},{"location":"plugins/prowlarr/configuration/settings/general/#host","text":"Prowlarr instance connection and name configuration. Many of these settings configure Prowlarr's external connection interface. If they are changed, the settings Buildarr uses to connect with this Prowlarr instance may need to be updated, so take care when modifying them. Changing any of these settings require a restart of Prowlarr to take effect.","title":"Host"},{"location":"plugins/prowlarr/configuration/settings/general/#buildarr_prowlarr.config.settings.general.HostGeneralSettings.bind_address","text":"Bind address for Prowlarr. Set to an IPv4 address bound to a local interface or * to bind on all interfaces. Unless you run Prowlarr directly on a host machine (i.e. not via Docker) and want Prowlarr to only be available on a specific network or interface, this generally should be left untouched.","title":"bind_address"},{"location":"plugins/prowlarr/configuration/settings/general/#buildarr_prowlarr.config.settings.general.HostGeneralSettings.port","text":"Unencrypted (HTTP) listening port for Prowlarr. If Prowlarr is being run via Docker in the default bridge mode, this setting shouldn't be changed. Instead, change the external port it is bound to using --publish <port number>:9696 .","title":"port"},{"location":"plugins/prowlarr/configuration/settings/general/#buildarr_prowlarr.config.settings.general.HostGeneralSettings.ssl_port","text":"Encrypted (HTTPS) listening port for Prowlarr. If Prowlarr is being run via Docker in the default bridge mode, this setting shouldn't be changed. Instead, change the external port it is bound to using --publish <port number>:6969 .","title":"ssl_port"},{"location":"plugins/prowlarr/configuration/settings/general/#buildarr_prowlarr.config.settings.general.HostGeneralSettings.use_ssl","text":"Enable the encrypted (HTTPS) listening port in Prowlarr. Instead of enabling HTTPS directly on Prowlarr, it is recommended to put Prowlarr behind a HTTPS-terminating reverse proxy such as Nginx, Caddy or Traefik.","title":"use_ssl"},{"location":"plugins/prowlarr/configuration/settings/general/#buildarr_prowlarr.config.settings.general.HostGeneralSettings.url_base","text":"Add a prefix to all Prowlarr URLs, e.g. http://localhost:9696/<url_base>/settings/general . Generally used to accommodate reverse proxies where Prowlarr is assigned to a subfolder, e.g. https://example.com/prowlarr .","title":"url_base"},{"location":"plugins/prowlarr/configuration/settings/general/#buildarr_prowlarr.config.settings.general.HostGeneralSettings.instance_name","text":"Instance name in the browser tab and in syslog.","title":"instance_name"},{"location":"plugins/prowlarr/configuration/settings/general/#security","text":"Prowlarr instance security (authentication) settings.","title":"Security"},{"location":"plugins/prowlarr/configuration/settings/general/#buildarr_prowlarr.config.settings.general.SecurityGeneralSettings.authentication","text":"Authentication method for logging into Prowlarr. By default, do not require authentication. Values: none - No authentication basic - Authentication using HTTP basic auth (browser popup) form - Authentication using a login page Requires a restart of Prowlarr to take effect.","title":"authentication"},{"location":"plugins/prowlarr/configuration/settings/general/#buildarr_prowlarr.config.settings.general.SecurityGeneralSettings.username","text":"Username for the administrator user. Required if authentication is enabled. Requires a restart of Prowlarr to take effect.","title":"username"},{"location":"plugins/prowlarr/configuration/settings/general/#buildarr_prowlarr.config.settings.general.SecurityGeneralSettings.password","text":"Password for the administrator user. Required if authentication is enabled. Requires a restart of Prowlarr to take effect.","title":"password"},{"location":"plugins/prowlarr/configuration/settings/general/#buildarr_prowlarr.config.settings.general.SecurityGeneralSettings.certificate_validation","text":"Change how strict HTTPS certification validation is. Do not change unless you understand the risks. Values: enabled - Validate HTTPS certificates for all hosts local-disabled - Disable HTTPS certificate validation for hosts on the local network disabled - Disable HTTPS certificate validation completely","title":"certificate_validation"},{"location":"plugins/prowlarr/configuration/settings/general/#proxy","text":"Proxy configuration for Prowlarr.","title":"Proxy"},{"location":"plugins/prowlarr/configuration/settings/general/#buildarr_prowlarr.config.settings.general.ProxyGeneralSettings.enable","text":"Use a proxy server to access the Internet.","title":"enable"},{"location":"plugins/prowlarr/configuration/settings/general/#buildarr_prowlarr.config.settings.general.ProxyGeneralSettings.proxy_type","text":"Type of proxy to connect to. Values: http - HTTP(S) proxy socks4 - SOCKSv4 proxy socks5 - SOCKSv5 proxy (Tor is supported)","title":"proxy_type"},{"location":"plugins/prowlarr/configuration/settings/general/#buildarr_prowlarr.config.settings.general.ProxyGeneralSettings.hostname","text":"Proxy server hostname. Required if using a proxy is enabled.","title":"hostname"},{"location":"plugins/prowlarr/configuration/settings/general/#buildarr_prowlarr.config.settings.general.ProxyGeneralSettings.port","text":"Proxy server access port.","title":"port"},{"location":"plugins/prowlarr/configuration/settings/general/#buildarr_prowlarr.config.settings.general.ProxyGeneralSettings.username","text":"Username to authenticate with. Only enter if authentication is required by the proxy.","title":"username"},{"location":"plugins/prowlarr/configuration/settings/general/#buildarr_prowlarr.config.settings.general.ProxyGeneralSettings.password","text":"Password for the proxy user. Only enter if authentication is required by the proxy.","title":"password"},{"location":"plugins/prowlarr/configuration/settings/general/#buildarr_prowlarr.config.settings.general.ProxyGeneralSettings.ignored_addresses","text":"List of domains/addresses which bypass the proxy. Wildcards ( * ) are supported.","title":"ignored_addresses"},{"location":"plugins/prowlarr/configuration/settings/general/#buildarr_prowlarr.config.settings.general.ProxyGeneralSettings.bypass_proxy_for_local_addresses","text":"Do not use the proxy to access local network addresses.","title":"bypass_proxy_for_local_addresses"},{"location":"plugins/prowlarr/configuration/settings/general/#logging","text":"Logging configuration for the Prowlarr application.","title":"Logging"},{"location":"plugins/prowlarr/configuration/settings/general/#buildarr_prowlarr.config.settings.general.LoggingGeneralSettings.log_level","text":"Verbosity of logging output. Values: INFO - Standard log output DEBUG - Debugging log output TRACE - Trace diagnostics log output","title":"log_level"},{"location":"plugins/prowlarr/configuration/settings/general/#analytics","text":"Configuration of analytics and telemetry from within Prowlarr.","title":"Analytics"},{"location":"plugins/prowlarr/configuration/settings/general/#buildarr_prowlarr.config.settings.general.AnalyticsGeneralSettings.send_anonymous_usage_data","text":"Send anonymous usage and error information to Prowlarr's servers. This includes information on your browser, which Prowlarr Web UI pages you use, error reporting and OS/runtime versions. This information is reportedly used to prioritise features and bug fixes. Requires a restart of Prowlarr to take effect.","title":"send_anonymous_usage_data"},{"location":"plugins/prowlarr/configuration/settings/general/#updates","text":"Settings for updating Prowlarr.","title":"Updates"},{"location":"plugins/prowlarr/configuration/settings/general/#buildarr_prowlarr.config.settings.general.UpdatesGeneralSettings.branch","text":"Branch used by the external update mechanism. Changing this value has no effect on Docker installations. If unsure, leave this undefined in Buildarr and use the value already set in Prowlarr.","title":"branch"},{"location":"plugins/prowlarr/configuration/settings/general/#buildarr_prowlarr.config.settings.general.UpdatesGeneralSettings.automatic","text":"Automatically download and install updates. Manual updates can still be performed from System -> Updates. This option must be left set to false on Docker installations.","title":"automatic"},{"location":"plugins/prowlarr/configuration/settings/general/#buildarr_prowlarr.config.settings.general.UpdatesGeneralSettings.mechanism","text":"Set the mechanism for updating Prowlarr. Must be set to docker on Docker installations. Values: builtin - Prowlarr built-in updater mechanism script - Use the configured update script external - External update mechanism apt - Debian APT package docker - Docker image","title":"mechanism"},{"location":"plugins/prowlarr/configuration/settings/general/#buildarr_prowlarr.config.settings.general.UpdatesGeneralSettings.script_path","text":"Path to a custom script that takes an extracted update package and handles the remainder of the update process. Required if mechanism is set to script .","title":"script_path"},{"location":"plugins/prowlarr/configuration/settings/general/#backup","text":"Settings for Prowlarr automatic backups.","title":"Backup"},{"location":"plugins/prowlarr/configuration/settings/general/#buildarr_prowlarr.config.settings.general.BackupGeneralSettings.folder","text":"Folder to backup Prowlarr data to. Relative paths will be under Prowlarr's AppData directory.","title":"folder"},{"location":"plugins/prowlarr/configuration/settings/general/#buildarr_prowlarr.config.settings.general.BackupGeneralSettings.interval","text":"Interval between automatic backups, in days. Must be set somewhere between 1 and 7 days.","title":"interval"},{"location":"plugins/prowlarr/configuration/settings/general/#buildarr_prowlarr.config.settings.general.BackupGeneralSettings.retention","text":"Retention period for backups, in days. Backups older than the retention period will be cleaned up automatically. Must be set somewhere between 1 and 90 days.","title":"retention"},{"location":"plugins/prowlarr/configuration/settings/notifications/","text":"Notifications # Prowlarr supports pushing notifications to external applications and services. These are not only for Prowlarr to communicate with the outside world, they can also be useful for monitoring since the user can be alerted, by a service of their choice, when some kind of event (or problem) occurs. Configuration # Notification connections are configured using the following syntax. prowlarr : settings : notifications : delete_unmanaged : false # Optional definitions : Email : # Name of notification connection in Prowlarr. type : \"email\" # Required notification_triggers : # When to send notifications. on_health_issue : true include_health_warnings : false # Do not send on just warnings. on_application_update : true tags : # Tags can also be assigned to connections. - \"example\" # Connection-specific parameters. server : \"smtp.example.com\" port : 465 use_encryption : true username : \"prowlarr\" password : \"fake-password\" from_address : \"prowlarr@example.com\" recipient_addresses : - \"admin@example.com\" # Add additional connections here. A type attribute must be defined so Buildarr knows what type of connection to make. Each connection has a unique value for type documented below. The triggers enabled on a connection are defined under notification_triggers . Tags can be assigned to connections, to only allow notifications relating to media under those tags. The delete_unmanaged flag on the outer connect block can be set to remove connections not defined in Buildarr. Take care when using this option, as it can remove connections automatically managed by other applications. The following notification triggers can be enabled. Some connection types only allow a subset of these to be enabled, check the documentation the specific connection type for more information. on_health_issue : bool = False class-attribute instance-attribute # Be notified on health check failures. include_health_warnings : bool = False class-attribute instance-attribute # Be notified on health warnings in addition to errors. Requires on_health_issue to be enabled to have any effect. on_application_update : bool = False class-attribute instance-attribute # Be notified when Prowlarr gets updated to a new version. Apprise # Receive media update and health alert push notifications via an Apprise server. type : Literal [ 'apprise' ] = 'apprise' class-attribute instance-attribute # Type value associated with this kind of connection. base_url : AnyHttpUrl instance-attribute # Apprise server base URL, including http[s]:// and port if needed. configuration_key : Optional [ SecretStr ] = None class-attribute instance-attribute # Configuration key for the Persistent Storage Solution. Leave empty if Stateless URLs are used. stateless_urls : Set [ AnyHttpUrl ] = set () class-attribute instance-attribute # One or more URLs where notifications should be sent to. Leave undefined or empty if Persistent Storage is used. apprise_tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Optionally notify only targets with the defined tags. auth_username : Optional [ str ] = None class-attribute instance-attribute # Username for authenticating with Apprise, if required. auth_password : Optional [ SecretStr ] = None class-attribute instance-attribute # Password for authenticating with Apprise, if required. Boxcar # Receive media update and health alert push notifications via Boxcar. type : Literal [ 'boxcar' ] = 'boxcar' class-attribute instance-attribute # Type value associated with this kind of connection. access_token : Password instance-attribute # Access token for authenticating with Boxcar. Custom Script # Execute a local script on the Prowlarr instance when events occur. type : Literal [ 'customscript' ] = 'customscript' class-attribute instance-attribute # Type value associated with this kind of connection. path : NonEmptyStr instance-attribute # Path of the script to execute. Discord # Send media update and health alert messages to a Discord server. type : Literal [ 'discord' ] = 'discord' class-attribute instance-attribute # Type value associated with this kind of connection. webhook_url : AnyHttpUrl instance-attribute # Discord server webhook URL. username : Optional [ str ] = None class-attribute instance-attribute # The username to post as. If unset, blank or set to None , use the default username set to the webhook URL. avatar : Optional [ str ] = None class-attribute instance-attribute # Change the avatar that is used for messages from this connection. If unset, blank or set to None , use the default avatar for the user. host : Optional [ str ] = None class-attribute instance-attribute # Override the host name that shows for this notification. If unset, blank or set to None , use the machine name. on_grab_fields : Set [ OnGrabField ] = { OnGrabField . overview , OnGrabField . rating , OnGrabField . genres , OnGrabField . quality , OnGrabField . size , OnGrabField . links , OnGrabField . release , OnGrabField . poster , OnGrabField . fanart } class-attribute instance-attribute # Set the fields that are passed in for this 'on grab' notification. By default, all fields are passed in. Values: overview rating genres quality group size links release poster fanart Example: ... connect : definitions : Discord : type : \"discord\" webhook_url : \"https://...\" on_grab_fields : - \"overview\" - \"quality\" - \"release\" on_import_fields : Set [ OnImportField ] = { OnImportField . overview , OnImportField . rating , OnImportField . genres , OnImportField . quality , OnImportField . codecs , OnImportField . group , OnImportField . size , OnImportField . languages , OnImportField . subtitles , OnImportField . links , OnImportField . release , OnImportField . poster , OnImportField . fanart } class-attribute instance-attribute # Set the fields that are passed in for this 'on import' notification. By default, all fields are passed in. Values: overview rating genres quality codecs group size languages subtitles links release poster fanart Example: ... connect : definitions : Discord : type : \"discord\" webhook_url : \"https://...\" on_import_fields : - \"overview\" - \"quality\" - \"release\" Email # Send media update and health alert messages to an email address. type : Literal [ 'email' ] = 'email' class-attribute instance-attribute # Type value associated with this kind of connection. server : NonEmptyStr instance-attribute # Hostname or IP address of the SMTP server to send outbound mail to. port : Port = 587 class-attribute instance-attribute # The port number on the SMTP server to use to submit mail. The default is to use STARTTLS on the standard SMTP submission port. use_encryption : bool = True class-attribute instance-attribute # Whether or not to use encryption when sending mail to the SMTP server. If the port number is set to 465, SMTPS (implicit TLS) will be used. Any other port number will result in STARTTLS being used. The default is to enable encryption. username : NonEmptyStr instance-attribute # SMTP username of the account to send the mail from. password : Password instance-attribute # SMTP password of the account to send the mail from. from_address : NameEmail instance-attribute # Email address to send the mail as. RFC-5322 formatted mailbox addresses are also supported, e.g. Prowlarr Notifications <prowlarr@example.com> . recipient_addresses : Annotated [ List [ NameEmail ], Field ( min_items = 1 , unique_items = True )] instance-attribute # List of email addresses to directly address the mail to. At least one address must be provided. cc_addresses : Annotated [ List [ NameEmail ], Field ( unique_items = True )] = [] class-attribute instance-attribute # Optional list of email addresses to copy (CC) the mail to. bcc_addresses : Annotated [ List [ NameEmail ], Field ( unique_items = True )] = [] class-attribute instance-attribute # Optional list of email addresses to blind copy (BCC) the mail to. Gotify # Send media update and health alert push notifications via a Gotify server. type : Literal [ 'gotify' ] = 'gotify' class-attribute instance-attribute # Type value associated with this kind of connection. server : AnyHttpUrl instance-attribute # Gotify server URL. (e.g. http://gotify.example.com:1234 ) app_token : Password instance-attribute # App token to use to authenticate with Gotify. priority : GotifyPriority = GotifyPriority . normal class-attribute instance-attribute # Gotify notification priority. Values: min low normal high Join # Send media update and health alert push notifications via Join. type : Literal [ 'join' ] = 'join' class-attribute instance-attribute # Type value associated with this kind of connection. api_key : Password instance-attribute # API key to use to authenticate with Join. device_names : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # List of full or partial device names you'd like to send notifications to. If unset or empty, all devices will receive notifications. priority : JoinPriority = JoinPriority . normal class-attribute instance-attribute # Join push notification priority. Values: silent quiet normal high emergency Mailgun # Send media update and health alert emails via the Mailgun delivery service. type : Literal [ 'mailgun' ] = 'mailgun' class-attribute instance-attribute # Type value associated with this kind of connection. api_key : Password instance-attribute # API key to use to authenticate with Mailgun. use_eu_endpoint : bool = False class-attribute instance-attribute # Send mail via the EU endpoint instead of the US one. from_address : NameEmail instance-attribute # Email address to send the mail as. RFC-5322 formatted mailbox addresses are also supported, e.g. Sonarr Notifications <sonarr@example.com> . sender_domain : NonEmptyStr instance-attribute # The domain from which the mail will be sent. recipient_addresses : Annotated [ List [ NameEmail ], Field ( min_items = 1 , unique_items = True )] instance-attribute # The recipient email addresses of the notification mail. At least one recipient address is required. Notifiarr # Send media update and health alert emails via the Notifiarr notification service. type : Literal [ 'notifiarr' ] = 'notifiarr' class-attribute instance-attribute # Type value associated with this kind of connection. api_key : Password instance-attribute # API key to use to authenticate with Notifiarr. ntfy # Send media update and health alert emails via the ntfy.sh notification service, or a self-hosted server using the same software. type : Literal [ 'ntfy' ] = 'ntfy' class-attribute instance-attribute # Type value associated with this kind of connection. server_url : Optional [ AnyHttpUrl ] = None class-attribute instance-attribute # Custom ntfy server URL. Leave blank, set to null or undefined to use the public server ( https://ntfy.sh ). username : Optional [ str ] = None class-attribute instance-attribute # Username to use to authenticate, if required. password : Optional [ SecretStr ] = None class-attribute instance-attribute # Password to use to authenticate, if required. priority : NtfyshPriority = NtfyshPriority . default class-attribute instance-attribute # Values: min low default high max topics : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # List of Topics to send notifications to. ntfy_tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Optional list of tags or emojis to use. click_url : Optional [ AnyHttpUrl ] = None class-attribute instance-attribute # Optional link for when the user clicks the notification. Prowl # Send media update and health alert push notifications to a Prowl client. type : Literal [ 'prowl' ] = 'prowl' class-attribute instance-attribute # Type value associated with this kind of connection. api_key : Password instance-attribute # API key to use when authenticating with Prowl. priority : ProwlPriority = ProwlPriority . normal class-attribute instance-attribute # Prowl push notification priority. Values: verylow low normal high emergency Pushbullet # Send media update and health alert push notifications to 1 or more Pushbullet devices. type : Literal [ 'pushbullet' ] = 'pushbullet' class-attribute instance-attribute # Type value associated with this kind of connection. api_key : Password instance-attribute # API key to use when authenticating with Pushbullet. device_ids : List [ NonEmptyStr ] = [] class-attribute instance-attribute # List of device IDs to send notifications to. If unset or empty, send to all devices. channel_tags : List [ NonEmptyStr ] = [] class-attribute instance-attribute # List of Channel Tags to send notifications to. sender_id : Optional [ str ] = None class-attribute instance-attribute # The device ID to send notifications from ( device_iden in the device's URL on pushbullet.com ). Leave unset, blank or set to None to send from yourself. Pushover # Send media update and health alert push notifications to 1 or more Pushover devices. type : Literal [ 'pushover' ] = 'pushover' class-attribute instance-attribute # Type value associated with this kind of connection. user_key : Annotated [ SecretStr , Field ( min_length = 30 , max_length = 30 )] instance-attribute # User key to use to authenticate with your Pushover account. api_key : Annotated [ SecretStr , Field ( min_length = 30 , max_length = 30 )] instance-attribute # API key assigned to Prowlarr in Pushover. devices : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # List of device names to send notifications to. If unset or empty, send to all devices. priority : PushoverPriority = PushoverPriority . normal class-attribute instance-attribute # Pushover push notification priority. Values: silent quiet normal high emergency retry : Union [ Literal [ 0 ], PushoverRetry ] = 0 class-attribute instance-attribute # Interval to retry emergency alerts, in seconds. Minimum 30 seconds. Set to 0 to disable retrying emergency alerts. expire : int = Field ( 0 , ge = 0 , le = 86400 ) class-attribute instance-attribute # Threshold for retrying emergency alerts, in seconds. If retry is set, this should be set to a higher value. Maximum 86400 seconds (1 day). sound : Optional [ str ] = None class-attribute instance-attribute # Notification sound to use on devices. Leave unset, blank or set to None to use the default. SendGrid # Send media update and health alert emails via the SendGrid delivery service. type : Literal [ 'sendgrid' ] = 'sendgrid' class-attribute instance-attribute # Type value associated with this kind of connection. api_key : Password instance-attribute # API key to use to authenticate with SendGrid. from_address : NameEmail instance-attribute # Email address to send the mail as. RFC-5322 formatted mailbox addresses are also supported, e.g. Prowlarr Notifications <prowlarr@example.com> . recipient_addresses : Annotated [ List [ NameEmail ], Field ( min_items = 1 , unique_items = True )] instance-attribute # The recipient email addresses of the notification mail. At least one recipient address is required. Slack # Send media update and health alert messages to a Slack channel. type : Literal [ 'slack' ] = 'slack' class-attribute instance-attribute # Type value associated with this kind of connection. webhook_url : AnyHttpUrl instance-attribute # Webhook URL for the Slack channel to send to. username : NonEmptyStr instance-attribute # Username to post as. icon : Optional [ str ] = None class-attribute instance-attribute # The icon that is used for messages from this integration (emoji or URL). If unset, blank or set to None , use the default for the user. channel : Optional [ str ] = None class-attribute instance-attribute # If set, overrides the default channel in the webhook. Telegram # Send media update and health alert messages to a Telegram chat room. type : Literal [ 'telegram' ] = 'telegram' class-attribute instance-attribute # Type value associated with this kind of connection. bot_token : Password instance-attribute # The bot token assigned to the Prowlarr instance. chat_id : NonEmptyStr instance-attribute # The ID of the chat room to send messages to. You must start a conversation with the bot or add it to your group to receive messages. send_silently : bool = False class-attribute instance-attribute # Sends the message silently. Users will receive a notification with no sound. Twitter # Send media update and health alert messages via Twitter. Twitter requires you to create an application for their API to generate the necessary keys and secrets. If unsure how to proceed, refer to these guides from Twitter and WikiArr . Access tokens can be obtained using the prodecure documented here . type : Literal [ 'twitter' ] = 'twitter' class-attribute instance-attribute # Type value associated with this kind of connection. consumer_key : Password instance-attribute # Consumer key from a Twitter application. consumer_secret : Password instance-attribute # Consumer key from a Twitter application. access_token : Password instance-attribute # Access token for a Twitter user. access_token_secret : Password instance-attribute # Access token secret for a Twitter user. mention : NonEmptyStr instance-attribute # Mention this user in sent tweets. direct_message : bool = True class-attribute instance-attribute # Send a direct message instead of a public message. Webhook # Send media update and health alert notifications to a webhook API. type : Literal [ 'webhook' ] = 'webhook' class-attribute instance-attribute # Type value associated with this kind of connection. method : WebhookMethod = WebhookMethod . POST class-attribute instance-attribute # HTTP request method type to use. Values: POST PUT username : NonEmptyStr instance-attribute # Webhook API username. password : Password instance-attribute # Webhook API password.","title":"Notifications"},{"location":"plugins/prowlarr/configuration/settings/notifications/#notifications","text":"Prowlarr supports pushing notifications to external applications and services. These are not only for Prowlarr to communicate with the outside world, they can also be useful for monitoring since the user can be alerted, by a service of their choice, when some kind of event (or problem) occurs.","title":"Notifications"},{"location":"plugins/prowlarr/configuration/settings/notifications/#configuration","text":"Notification connections are configured using the following syntax. prowlarr : settings : notifications : delete_unmanaged : false # Optional definitions : Email : # Name of notification connection in Prowlarr. type : \"email\" # Required notification_triggers : # When to send notifications. on_health_issue : true include_health_warnings : false # Do not send on just warnings. on_application_update : true tags : # Tags can also be assigned to connections. - \"example\" # Connection-specific parameters. server : \"smtp.example.com\" port : 465 use_encryption : true username : \"prowlarr\" password : \"fake-password\" from_address : \"prowlarr@example.com\" recipient_addresses : - \"admin@example.com\" # Add additional connections here. A type attribute must be defined so Buildarr knows what type of connection to make. Each connection has a unique value for type documented below. The triggers enabled on a connection are defined under notification_triggers . Tags can be assigned to connections, to only allow notifications relating to media under those tags. The delete_unmanaged flag on the outer connect block can be set to remove connections not defined in Buildarr. Take care when using this option, as it can remove connections automatically managed by other applications. The following notification triggers can be enabled. Some connection types only allow a subset of these to be enabled, check the documentation the specific connection type for more information.","title":"Configuration"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.NotificationTriggers.on_health_issue","text":"Be notified on health check failures.","title":"on_health_issue"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.NotificationTriggers.include_health_warnings","text":"Be notified on health warnings in addition to errors. Requires on_health_issue to be enabled to have any effect.","title":"include_health_warnings"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.NotificationTriggers.on_application_update","text":"Be notified when Prowlarr gets updated to a new version.","title":"on_application_update"},{"location":"plugins/prowlarr/configuration/settings/notifications/#apprise","text":"Receive media update and health alert push notifications via an Apprise server.","title":"Apprise"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.AppriseNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.AppriseNotification.base_url","text":"Apprise server base URL, including http[s]:// and port if needed.","title":"base_url"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.AppriseNotification.configuration_key","text":"Configuration key for the Persistent Storage Solution. Leave empty if Stateless URLs are used.","title":"configuration_key"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.AppriseNotification.stateless_urls","text":"One or more URLs where notifications should be sent to. Leave undefined or empty if Persistent Storage is used.","title":"stateless_urls"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.AppriseNotification.apprise_tags","text":"Optionally notify only targets with the defined tags.","title":"apprise_tags"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.AppriseNotification.auth_username","text":"Username for authenticating with Apprise, if required.","title":"auth_username"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.AppriseNotification.auth_password","text":"Password for authenticating with Apprise, if required.","title":"auth_password"},{"location":"plugins/prowlarr/configuration/settings/notifications/#boxcar","text":"Receive media update and health alert push notifications via Boxcar.","title":"Boxcar"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.BoxcarNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.BoxcarNotification.access_token","text":"Access token for authenticating with Boxcar.","title":"access_token"},{"location":"plugins/prowlarr/configuration/settings/notifications/#custom-script","text":"Execute a local script on the Prowlarr instance when events occur.","title":"Custom Script"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.CustomscriptNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.CustomscriptNotification.path","text":"Path of the script to execute.","title":"path"},{"location":"plugins/prowlarr/configuration/settings/notifications/#discord","text":"Send media update and health alert messages to a Discord server.","title":"Discord"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.DiscordNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.DiscordNotification.webhook_url","text":"Discord server webhook URL.","title":"webhook_url"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.DiscordNotification.username","text":"The username to post as. If unset, blank or set to None , use the default username set to the webhook URL.","title":"username"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.DiscordNotification.avatar","text":"Change the avatar that is used for messages from this connection. If unset, blank or set to None , use the default avatar for the user.","title":"avatar"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.DiscordNotification.host","text":"Override the host name that shows for this notification. If unset, blank or set to None , use the machine name.","title":"host"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.DiscordNotification.on_grab_fields","text":"Set the fields that are passed in for this 'on grab' notification. By default, all fields are passed in. Values: overview rating genres quality group size links release poster fanart Example: ... connect : definitions : Discord : type : \"discord\" webhook_url : \"https://...\" on_grab_fields : - \"overview\" - \"quality\" - \"release\"","title":"on_grab_fields"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.DiscordNotification.on_import_fields","text":"Set the fields that are passed in for this 'on import' notification. By default, all fields are passed in. Values: overview rating genres quality codecs group size languages subtitles links release poster fanart Example: ... connect : definitions : Discord : type : \"discord\" webhook_url : \"https://...\" on_import_fields : - \"overview\" - \"quality\" - \"release\"","title":"on_import_fields"},{"location":"plugins/prowlarr/configuration/settings/notifications/#email","text":"Send media update and health alert messages to an email address.","title":"Email"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.EmailNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.EmailNotification.server","text":"Hostname or IP address of the SMTP server to send outbound mail to.","title":"server"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.EmailNotification.port","text":"The port number on the SMTP server to use to submit mail. The default is to use STARTTLS on the standard SMTP submission port.","title":"port"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.EmailNotification.use_encryption","text":"Whether or not to use encryption when sending mail to the SMTP server. If the port number is set to 465, SMTPS (implicit TLS) will be used. Any other port number will result in STARTTLS being used. The default is to enable encryption.","title":"use_encryption"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.EmailNotification.username","text":"SMTP username of the account to send the mail from.","title":"username"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.EmailNotification.password","text":"SMTP password of the account to send the mail from.","title":"password"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.EmailNotification.from_address","text":"Email address to send the mail as. RFC-5322 formatted mailbox addresses are also supported, e.g. Prowlarr Notifications <prowlarr@example.com> .","title":"from_address"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.EmailNotification.recipient_addresses","text":"List of email addresses to directly address the mail to. At least one address must be provided.","title":"recipient_addresses"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.EmailNotification.cc_addresses","text":"Optional list of email addresses to copy (CC) the mail to.","title":"cc_addresses"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.EmailNotification.bcc_addresses","text":"Optional list of email addresses to blind copy (BCC) the mail to.","title":"bcc_addresses"},{"location":"plugins/prowlarr/configuration/settings/notifications/#gotify","text":"Send media update and health alert push notifications via a Gotify server.","title":"Gotify"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.GotifyNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.GotifyNotification.server","text":"Gotify server URL. (e.g. http://gotify.example.com:1234 )","title":"server"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.GotifyNotification.app_token","text":"App token to use to authenticate with Gotify.","title":"app_token"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.GotifyNotification.priority","text":"Gotify notification priority. Values: min low normal high","title":"priority"},{"location":"plugins/prowlarr/configuration/settings/notifications/#join","text":"Send media update and health alert push notifications via Join.","title":"Join"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.JoinNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.JoinNotification.api_key","text":"API key to use to authenticate with Join.","title":"api_key"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.JoinNotification.device_names","text":"List of full or partial device names you'd like to send notifications to. If unset or empty, all devices will receive notifications.","title":"device_names"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.JoinNotification.priority","text":"Join push notification priority. Values: silent quiet normal high emergency","title":"priority"},{"location":"plugins/prowlarr/configuration/settings/notifications/#mailgun","text":"Send media update and health alert emails via the Mailgun delivery service.","title":"Mailgun"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.MailgunNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.MailgunNotification.api_key","text":"API key to use to authenticate with Mailgun.","title":"api_key"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.MailgunNotification.use_eu_endpoint","text":"Send mail via the EU endpoint instead of the US one.","title":"use_eu_endpoint"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.MailgunNotification.from_address","text":"Email address to send the mail as. RFC-5322 formatted mailbox addresses are also supported, e.g. Sonarr Notifications <sonarr@example.com> .","title":"from_address"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.MailgunNotification.sender_domain","text":"The domain from which the mail will be sent.","title":"sender_domain"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.MailgunNotification.recipient_addresses","text":"The recipient email addresses of the notification mail. At least one recipient address is required.","title":"recipient_addresses"},{"location":"plugins/prowlarr/configuration/settings/notifications/#notifiarr","text":"Send media update and health alert emails via the Notifiarr notification service.","title":"Notifiarr"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.NotifiarrNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.NotifiarrNotification.api_key","text":"API key to use to authenticate with Notifiarr.","title":"api_key"},{"location":"plugins/prowlarr/configuration/settings/notifications/#ntfy","text":"Send media update and health alert emails via the ntfy.sh notification service, or a self-hosted server using the same software.","title":"ntfy"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.NtfyNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.NtfyNotification.server_url","text":"Custom ntfy server URL. Leave blank, set to null or undefined to use the public server ( https://ntfy.sh ).","title":"server_url"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.NtfyNotification.username","text":"Username to use to authenticate, if required.","title":"username"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.NtfyNotification.password","text":"Password to use to authenticate, if required.","title":"password"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.NtfyNotification.priority","text":"Values: min low default high max","title":"priority"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.NtfyNotification.topics","text":"List of Topics to send notifications to.","title":"topics"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.NtfyNotification.ntfy_tags","text":"Optional list of tags or emojis to use.","title":"ntfy_tags"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.NtfyNotification.click_url","text":"Optional link for when the user clicks the notification.","title":"click_url"},{"location":"plugins/prowlarr/configuration/settings/notifications/#prowl","text":"Send media update and health alert push notifications to a Prowl client.","title":"Prowl"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.ProwlNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.ProwlNotification.api_key","text":"API key to use when authenticating with Prowl.","title":"api_key"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.ProwlNotification.priority","text":"Prowl push notification priority. Values: verylow low normal high emergency","title":"priority"},{"location":"plugins/prowlarr/configuration/settings/notifications/#pushbullet","text":"Send media update and health alert push notifications to 1 or more Pushbullet devices.","title":"Pushbullet"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.PushbulletNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.PushbulletNotification.api_key","text":"API key to use when authenticating with Pushbullet.","title":"api_key"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.PushbulletNotification.device_ids","text":"List of device IDs to send notifications to. If unset or empty, send to all devices.","title":"device_ids"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.PushbulletNotification.channel_tags","text":"List of Channel Tags to send notifications to.","title":"channel_tags"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.PushbulletNotification.sender_id","text":"The device ID to send notifications from ( device_iden in the device's URL on pushbullet.com ). Leave unset, blank or set to None to send from yourself.","title":"sender_id"},{"location":"plugins/prowlarr/configuration/settings/notifications/#pushover","text":"Send media update and health alert push notifications to 1 or more Pushover devices.","title":"Pushover"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.PushoverNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.PushoverNotification.user_key","text":"User key to use to authenticate with your Pushover account.","title":"user_key"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.PushoverNotification.api_key","text":"API key assigned to Prowlarr in Pushover.","title":"api_key"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.PushoverNotification.devices","text":"List of device names to send notifications to. If unset or empty, send to all devices.","title":"devices"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.PushoverNotification.priority","text":"Pushover push notification priority. Values: silent quiet normal high emergency","title":"priority"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.PushoverNotification.retry","text":"Interval to retry emergency alerts, in seconds. Minimum 30 seconds. Set to 0 to disable retrying emergency alerts.","title":"retry"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.PushoverNotification.expire","text":"Threshold for retrying emergency alerts, in seconds. If retry is set, this should be set to a higher value. Maximum 86400 seconds (1 day).","title":"expire"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.PushoverNotification.sound","text":"Notification sound to use on devices. Leave unset, blank or set to None to use the default.","title":"sound"},{"location":"plugins/prowlarr/configuration/settings/notifications/#sendgrid","text":"Send media update and health alert emails via the SendGrid delivery service.","title":"SendGrid"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.SendgridNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.SendgridNotification.api_key","text":"API key to use to authenticate with SendGrid.","title":"api_key"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.SendgridNotification.from_address","text":"Email address to send the mail as. RFC-5322 formatted mailbox addresses are also supported, e.g. Prowlarr Notifications <prowlarr@example.com> .","title":"from_address"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.SendgridNotification.recipient_addresses","text":"The recipient email addresses of the notification mail. At least one recipient address is required.","title":"recipient_addresses"},{"location":"plugins/prowlarr/configuration/settings/notifications/#slack","text":"Send media update and health alert messages to a Slack channel.","title":"Slack"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.SlackNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.SlackNotification.webhook_url","text":"Webhook URL for the Slack channel to send to.","title":"webhook_url"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.SlackNotification.username","text":"Username to post as.","title":"username"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.SlackNotification.icon","text":"The icon that is used for messages from this integration (emoji or URL). If unset, blank or set to None , use the default for the user.","title":"icon"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.SlackNotification.channel","text":"If set, overrides the default channel in the webhook.","title":"channel"},{"location":"plugins/prowlarr/configuration/settings/notifications/#telegram","text":"Send media update and health alert messages to a Telegram chat room.","title":"Telegram"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.TelegramNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.TelegramNotification.bot_token","text":"The bot token assigned to the Prowlarr instance.","title":"bot_token"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.TelegramNotification.chat_id","text":"The ID of the chat room to send messages to. You must start a conversation with the bot or add it to your group to receive messages.","title":"chat_id"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.TelegramNotification.send_silently","text":"Sends the message silently. Users will receive a notification with no sound.","title":"send_silently"},{"location":"plugins/prowlarr/configuration/settings/notifications/#twitter","text":"Send media update and health alert messages via Twitter. Twitter requires you to create an application for their API to generate the necessary keys and secrets. If unsure how to proceed, refer to these guides from Twitter and WikiArr . Access tokens can be obtained using the prodecure documented here .","title":"Twitter"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.TwitterNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.TwitterNotification.consumer_key","text":"Consumer key from a Twitter application.","title":"consumer_key"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.TwitterNotification.consumer_secret","text":"Consumer key from a Twitter application.","title":"consumer_secret"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.TwitterNotification.access_token","text":"Access token for a Twitter user.","title":"access_token"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.TwitterNotification.access_token_secret","text":"Access token secret for a Twitter user.","title":"access_token_secret"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.TwitterNotification.mention","text":"Mention this user in sent tweets.","title":"mention"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.TwitterNotification.direct_message","text":"Send a direct message instead of a public message.","title":"direct_message"},{"location":"plugins/prowlarr/configuration/settings/notifications/#webhook","text":"Send media update and health alert notifications to a webhook API.","title":"Webhook"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.WebhookNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.WebhookNotification.method","text":"HTTP request method type to use. Values: POST PUT","title":"method"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.WebhookNotification.username","text":"Webhook API username.","title":"username"},{"location":"plugins/prowlarr/configuration/settings/notifications/#buildarr_prowlarr.config.settings.notifications.WebhookNotification.password","text":"Webhook API password.","title":"password"},{"location":"plugins/prowlarr/configuration/settings/tags/","text":"Tags # Tags are used to associate media files with certain resources (e.g. indexers). prowlarr : settings : tags : definitions : - \"example1\" - \"example2\" To be able to use those tags in Buildarr, they need to be defined in this configuration section. definitions : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Define tags that are used within Buildarr here. If they are not defined here, you may get errors resulting from non-existent tags from either Buildarr or Prowlarr.","title":"Tags"},{"location":"plugins/prowlarr/configuration/settings/tags/#tags","text":"Tags are used to associate media files with certain resources (e.g. indexers). prowlarr : settings : tags : definitions : - \"example1\" - \"example2\" To be able to use those tags in Buildarr, they need to be defined in this configuration section.","title":"Tags"},{"location":"plugins/prowlarr/configuration/settings/tags/#buildarr_prowlarr.config.settings.tags.ProwlarrTagsSettings.definitions","text":"Define tags that are used within Buildarr here. If they are not defined here, you may get errors resulting from non-existent tags from either Buildarr or Prowlarr.","title":"definitions"},{"location":"plugins/prowlarr/configuration/settings/ui/","text":"UI # Prowlarr user interface configuration can also be set directly from Buildarr. prowlarr : settings : ui : first_day_of_week : \"monday\" week_column_header : \"day-first\" short_date_format : \"word-month-second\" long_date_format : \"day-first\" time_format : \"twentyfour-hour\" show_relative_dates : true enable_color_impaired_mode : false theme : \"light\" ui_language : \"en\" first_day_of_week : FirstDayOfWeek = FirstDayOfWeek . sunday class-attribute instance-attribute # The first day of the week that Prowlarr will show in the calendar. Values: sunday - Sunday monday - Monday week_column_header : WeekColumnHeader = WeekColumnHeader . month_first class-attribute instance-attribute # The format of the date in columns when \"Week\" is the active view in the calendar. Values: month-first - Print month first (e.g. Tue 3/25) month-first-padded - Print month first with padded numbers (e.g. Tue 03/25) day-first - Print day first with padded numbers (e.g. Tue 25/3) day-first-padded - Print day first with padded numbers (e.g. Tue 25/03) short_date_format : ShortDateFormat = ShortDateFormat . word_month_first class-attribute instance-attribute # The format of short dates in the user interface. Values: word-month-first - Month as word, print month first (e.g. Mar 4 2014) word-month-second - Month as word, print month second (e.g. 4 Mar 2014) slash-month-first - Slash-separated date, print month first (e.g. 03/4/2014) slash-month-first-padded - Slash-separated date, print month first (e.g. 03/04/2014) slash-day-first - Slash-separated date, print day first (e.g. 04/03/2014) iso8601 - ISO-8601 date (e.g. 2014-03-04) long_date_format : LongDateFormat = LongDateFormat . month_first class-attribute instance-attribute # The format of long dates in the user interface. Values: month-first - Print month first (e.g. Tuesday, March 4 2014) day-first - Print day first (e.g. Tuesday, 4 March 2014) time_format : TimeFormat = TimeFormat . twelve_hour class-attribute instance-attribute # The format of time in the user information. Values: twelve-hour - 12-hour time (e.g. 5pm/5:30pm) twentyfour-hour - 24-hour time (e.g. 17:00/17:30) show_relative_dates : bool = True class-attribute instance-attribute # When set to True , Prowlarr will show relative dates (e.g. today, yesterday) instead of absolute dates (e.g. Monday, Tuesday ...). enable_color_impaired_mode : bool = False class-attribute instance-attribute # Enable an altered view style to allow colour-impaired users to better distinguish colour-coded information. theme : Theme = Theme . light class-attribute instance-attribute # The theme to use when browsing the Prowlarr UI. Values: light (Light-coloured theme) dark (Dark-coloured theme) ui_language : LowerCaseStr = 'en' class-attribute instance-attribute # The display language for the Prowlarr UI. Specify the language using the two-character language code.","title":"UI"},{"location":"plugins/prowlarr/configuration/settings/ui/#ui","text":"Prowlarr user interface configuration can also be set directly from Buildarr. prowlarr : settings : ui : first_day_of_week : \"monday\" week_column_header : \"day-first\" short_date_format : \"word-month-second\" long_date_format : \"day-first\" time_format : \"twentyfour-hour\" show_relative_dates : true enable_color_impaired_mode : false theme : \"light\" ui_language : \"en\"","title":"UI"},{"location":"plugins/prowlarr/configuration/settings/ui/#buildarr_prowlarr.config.settings.ui.ProwlarrUISettings.first_day_of_week","text":"The first day of the week that Prowlarr will show in the calendar. Values: sunday - Sunday monday - Monday","title":"first_day_of_week"},{"location":"plugins/prowlarr/configuration/settings/ui/#buildarr_prowlarr.config.settings.ui.ProwlarrUISettings.week_column_header","text":"The format of the date in columns when \"Week\" is the active view in the calendar. Values: month-first - Print month first (e.g. Tue 3/25) month-first-padded - Print month first with padded numbers (e.g. Tue 03/25) day-first - Print day first with padded numbers (e.g. Tue 25/3) day-first-padded - Print day first with padded numbers (e.g. Tue 25/03)","title":"week_column_header"},{"location":"plugins/prowlarr/configuration/settings/ui/#buildarr_prowlarr.config.settings.ui.ProwlarrUISettings.short_date_format","text":"The format of short dates in the user interface. Values: word-month-first - Month as word, print month first (e.g. Mar 4 2014) word-month-second - Month as word, print month second (e.g. 4 Mar 2014) slash-month-first - Slash-separated date, print month first (e.g. 03/4/2014) slash-month-first-padded - Slash-separated date, print month first (e.g. 03/04/2014) slash-day-first - Slash-separated date, print day first (e.g. 04/03/2014) iso8601 - ISO-8601 date (e.g. 2014-03-04)","title":"short_date_format"},{"location":"plugins/prowlarr/configuration/settings/ui/#buildarr_prowlarr.config.settings.ui.ProwlarrUISettings.long_date_format","text":"The format of long dates in the user interface. Values: month-first - Print month first (e.g. Tuesday, March 4 2014) day-first - Print day first (e.g. Tuesday, 4 March 2014)","title":"long_date_format"},{"location":"plugins/prowlarr/configuration/settings/ui/#buildarr_prowlarr.config.settings.ui.ProwlarrUISettings.time_format","text":"The format of time in the user information. Values: twelve-hour - 12-hour time (e.g. 5pm/5:30pm) twentyfour-hour - 24-hour time (e.g. 17:00/17:30)","title":"time_format"},{"location":"plugins/prowlarr/configuration/settings/ui/#buildarr_prowlarr.config.settings.ui.ProwlarrUISettings.show_relative_dates","text":"When set to True , Prowlarr will show relative dates (e.g. today, yesterday) instead of absolute dates (e.g. Monday, Tuesday ...).","title":"show_relative_dates"},{"location":"plugins/prowlarr/configuration/settings/ui/#buildarr_prowlarr.config.settings.ui.ProwlarrUISettings.enable_color_impaired_mode","text":"Enable an altered view style to allow colour-impaired users to better distinguish colour-coded information.","title":"enable_color_impaired_mode"},{"location":"plugins/prowlarr/configuration/settings/ui/#buildarr_prowlarr.config.settings.ui.ProwlarrUISettings.theme","text":"The theme to use when browsing the Prowlarr UI. Values: light (Light-coloured theme) dark (Dark-coloured theme)","title":"theme"},{"location":"plugins/prowlarr/configuration/settings/ui/#buildarr_prowlarr.config.settings.ui.ProwlarrUISettings.ui_language","text":"The display language for the Prowlarr UI. Specify the language using the two-character language code.","title":"ui_language"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/","text":"Applications # Prowlarr syncs indexer configuration with connected applications, and performs requests to the indexer on the application's behalf. Buildarr makes configuring these applications easier through instance links. By installing the Buildarr plugin for the application (e.g. Sonarr) alongside the Prowlarr plugin, you can manage the instances using a single Buildarr instance, and link them together so that you don't need to supply certain parameters multiple times, e.g. the API key. Buildarr will also intelligently manage updates so that the connected application instance is updated before the Prowlarr instance, to ensure state is consistent at each update stage. --- sonarr : instances : \"Sonarr\" : {} # Define instance configuration. prowlarr : settings : apps : applications : definitions : \"Sonarr\" : type : \"sonarr\" instance_name : \"Sonarr\" prowlarr_url : \"http://prowlarr:9696\" base_url : \"http://sonarr:8989\" tags : - \"anime\" If the application does not have a Buildarr plugin, they can also be configured without instance links by supplying the required parameters. prowlarr : settings : apps : applications : definitions : \"Radarr\" : type : \"radarr\" api_key : \"1a2b3c4d5e6f1a2b3c4d5e6f1a2b3c4d\" prowlarr_url : \"http://prowlarr:9696\" base_url : \"http://radarr:7878\" sync_level : \"add-and-remove-only\" sync_categories : - \"Movies/UHD\" - \"Movies/HD\" - \"Movies/SD\" - \"Movies/3D\" - \"Movies/BluRay\" - \"Movies/DVD\" - \"Movies/WEB-DL\" - \"Movies/Foreign\" - \"Movies/Other\" tags : - \"movies\" For more information on configuring application links in Prowlarr, refer to the guide for applications on WikiArr. delete_unmanaged : bool = False class-attribute instance-attribute # Automatically delete application links not configured in Buildarr. Take care when enabling this option, as this can remove connections automatically managed by other applications. definitions : Dict [ str , Annotated [ ApplicationType , Field ( discriminator = 'type' )]] = {} class-attribute instance-attribute # Application link definitions to configure in Prowlarr. Configuration # Prowlarr application links have the following common configuration attributes. prowlarr_url : AnyHttpUrl instance-attribute # Prowlarr server URL as the target application sees it, including http[s]:// , port, and URL base (if needed). This attribute is required, even for applications with instance links. base_url : AnyHttpUrl instance-attribute # URL that Prowlarr uses to connect to the target application server, including http[s]:// , port, and URL base (if needed). This attribute is required, even for applications with instance links. sync_level : SyncLevel = SyncLevel . add_and_remove_only class-attribute instance-attribute # Configures when Prowlarr will sync indexer configuration with the application. Values: disable (Do not sync indexers with the application) add-and-remove-only (Sync when indexers are added or removed) full-sync (Sync all indexer changes to the application) sync_categories : Set [ LowerCaseNonEmptyStr ] instance-attribute # Categories of content to sync with the target application. Each type of application has individually set default values. Note that only categories supported by the application will actually be used. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Prowlarr tags to assign to this application. This is used to associate the application with indexers. LazyLibrarian # Add a LazyLibrarian instance to sync with Prowlarr. type : Literal [ 'lazylibrarian' , 'lazylibrary' ] = 'lazylibrarian' class-attribute instance-attribute # Type value associated with this kind of application. api_key : Password instance-attribute # API key used to access the target instance. sync_categories : Set [ LowerCaseNonEmptyStr ] = { 'Books/Mags' , 'Books/EBook' , 'Books/Comics' , 'Books/Technical' , 'Books/Other' , 'Books/Foreign' } class-attribute instance-attribute # Default sync category values for this application type. Lidarr # Add a Lidarr instance to sync with Prowlarr. type : Literal [ 'lidarr' ] = 'lidarr' class-attribute instance-attribute # Type value associated with this kind of application. api_key : ArrApiKey instance-attribute # API key used to access the target instance. sync_categories : Set [ LowerCaseNonEmptyStr ] = { 'Audio/MP3' , 'Audio/Audiobook' , 'Audio/Lossless' , 'Audio/Other' , 'Audio/Foreign' } class-attribute instance-attribute # Default sync category values for this application type. Mylar # Add a Mylar instance to sync with Prowlarr. type : Literal [ 'mylar' ] = 'mylar' class-attribute instance-attribute # Type value associated with this kind of application. api_key : Password instance-attribute # API key used to access the target instance. sync_categories : Set [ LowerCaseNonEmptyStr ] = { 'Books/Comics' } class-attribute instance-attribute # Default sync category values for this application type. Radarr # Add a Radarr instance to sync with Prowlarr. Note There is a Radarr plugin for Buildarr that can be used to link Radarr instances with Prowlarr using the instance_name attribute. type : Literal [ 'radarr' ] = 'radarr' class-attribute instance-attribute # Type value associated with this kind of application. instance_name : Optional [ InstanceName ] = Field ( None , plugin = 'radarr' ) class-attribute instance-attribute # The name of the Radarr instance within Buildarr, if adding a Buildarr-defined Radarr instance to this Prowlarr instance. api_key : Optional [ ArrApiKey ] = None class-attribute instance-attribute # API key used to access the target Radarr instance. If a Radarr instance managed by Buildarr is not referenced using instance_name , this attribute is required. sync_categories : Set [ LowerCaseNonEmptyStr ] = { 'Movies/Foreign' , 'Movies/Other' , 'Movies/SD' , 'Movies/HD' , 'Movies/UHD' , 'Movies/BluRay' , 'Movies/3D' , 'Movies/DVD' , 'Movies/WEB-DL' } class-attribute instance-attribute # Default sync category values for this application type. Readarr # Add a Readarr instance to sync with Prowlarr. type : Literal [ 'readarr' ] = 'readarr' class-attribute instance-attribute # Type value associated with this kind of application. api_key : ArrApiKey instance-attribute # API key used to access the target instance. sync_categories : Set [ LowerCaseNonEmptyStr ] = { 'Audio/Audiobook' , 'Books/Mags' , 'Books/EBook' , 'Books/Comics' , 'Books/Technical' , 'Books/Other' , 'Books/Foreign' } class-attribute instance-attribute # Default sync category values for this application type. Sonarr # Add a Sonarr instance to sync with Prowlarr. Note There is a Sonarr plugin for Buildarr that can be used to link Sonarr instances with Prowlarr using the instance_name attribute. type : Literal [ 'sonarr' ] = 'sonarr' class-attribute instance-attribute # Type value associated with this kind of application. instance_name : Optional [ InstanceName ] = Field ( None , plugin = 'sonarr' ) class-attribute instance-attribute # The name of the Sonarr instance within Buildarr, if adding a Buildarr-defined Sonarr instance to this Prowlarr instance. api_key : Optional [ ArrApiKey ] = None class-attribute instance-attribute # API key used to access the target Sonarr instance. If a Sonarr instance managed by Buildarr is not referenced using instance_name , this attribute is required. sync_categories : Set [ LowerCaseNonEmptyStr ] = { 'TV/WEB-DL' , 'TV/Foreign' , 'TV/SD' , 'TV/HD' , 'TV/UHD' , 'TV/Other' } class-attribute instance-attribute # Default sync category values for this application type. anime_sync_categories : Set [ LowerCaseNonEmptyStr ] = { 'TV/Anime' } class-attribute instance-attribute # Categories of content for sync with the target application, classified as anime. Note that only categories supported by the application will actually be used. Whisparr # Add a Whisparr instance to sync with Prowlarr. type : Literal [ 'whisparr' ] = 'whisparr' class-attribute instance-attribute # Type value associated with this kind of application. api_key : ArrApiKey instance-attribute # API key used to access the target instance. sync_categories : Set [ LowerCaseNonEmptyStr ] = { 'XXX/DVD' , 'XXX/WMV' , 'XXX/XviD' , 'XXX/x264' , 'XXX/Pack' , 'XXX/Other' , 'XXX/SD' , 'XXX/WEB-DL' } class-attribute instance-attribute # Default sync category values for this application type.","title":"Applications"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#applications","text":"Prowlarr syncs indexer configuration with connected applications, and performs requests to the indexer on the application's behalf. Buildarr makes configuring these applications easier through instance links. By installing the Buildarr plugin for the application (e.g. Sonarr) alongside the Prowlarr plugin, you can manage the instances using a single Buildarr instance, and link them together so that you don't need to supply certain parameters multiple times, e.g. the API key. Buildarr will also intelligently manage updates so that the connected application instance is updated before the Prowlarr instance, to ensure state is consistent at each update stage. --- sonarr : instances : \"Sonarr\" : {} # Define instance configuration. prowlarr : settings : apps : applications : definitions : \"Sonarr\" : type : \"sonarr\" instance_name : \"Sonarr\" prowlarr_url : \"http://prowlarr:9696\" base_url : \"http://sonarr:8989\" tags : - \"anime\" If the application does not have a Buildarr plugin, they can also be configured without instance links by supplying the required parameters. prowlarr : settings : apps : applications : definitions : \"Radarr\" : type : \"radarr\" api_key : \"1a2b3c4d5e6f1a2b3c4d5e6f1a2b3c4d\" prowlarr_url : \"http://prowlarr:9696\" base_url : \"http://radarr:7878\" sync_level : \"add-and-remove-only\" sync_categories : - \"Movies/UHD\" - \"Movies/HD\" - \"Movies/SD\" - \"Movies/3D\" - \"Movies/BluRay\" - \"Movies/DVD\" - \"Movies/WEB-DL\" - \"Movies/Foreign\" - \"Movies/Other\" tags : - \"movies\" For more information on configuring application links in Prowlarr, refer to the guide for applications on WikiArr.","title":"Applications"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.ApplicationsSettings.delete_unmanaged","text":"Automatically delete application links not configured in Buildarr. Take care when enabling this option, as this can remove connections automatically managed by other applications.","title":"delete_unmanaged"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.ApplicationsSettings.definitions","text":"Application link definitions to configure in Prowlarr.","title":"definitions"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#configuration","text":"Prowlarr application links have the following common configuration attributes.","title":"Configuration"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.Application.prowlarr_url","text":"Prowlarr server URL as the target application sees it, including http[s]:// , port, and URL base (if needed). This attribute is required, even for applications with instance links.","title":"prowlarr_url"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.Application.base_url","text":"URL that Prowlarr uses to connect to the target application server, including http[s]:// , port, and URL base (if needed). This attribute is required, even for applications with instance links.","title":"base_url"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.Application.sync_level","text":"Configures when Prowlarr will sync indexer configuration with the application. Values: disable (Do not sync indexers with the application) add-and-remove-only (Sync when indexers are added or removed) full-sync (Sync all indexer changes to the application)","title":"sync_level"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.Application.sync_categories","text":"Categories of content to sync with the target application. Each type of application has individually set default values. Note that only categories supported by the application will actually be used.","title":"sync_categories"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.Application.tags","text":"Prowlarr tags to assign to this application. This is used to associate the application with indexers.","title":"tags"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#lazylibrarian","text":"Add a LazyLibrarian instance to sync with Prowlarr.","title":"LazyLibrarian"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.LazylibrarianApplication.type","text":"Type value associated with this kind of application.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.LazylibrarianApplication.api_key","text":"API key used to access the target instance.","title":"api_key"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.LazylibrarianApplication.sync_categories","text":"Default sync category values for this application type.","title":"sync_categories"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#lidarr","text":"Add a Lidarr instance to sync with Prowlarr.","title":"Lidarr"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.LidarrApplication.type","text":"Type value associated with this kind of application.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.LidarrApplication.api_key","text":"API key used to access the target instance.","title":"api_key"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.LidarrApplication.sync_categories","text":"Default sync category values for this application type.","title":"sync_categories"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#mylar","text":"Add a Mylar instance to sync with Prowlarr.","title":"Mylar"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.MylarApplication.type","text":"Type value associated with this kind of application.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.MylarApplication.api_key","text":"API key used to access the target instance.","title":"api_key"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.MylarApplication.sync_categories","text":"Default sync category values for this application type.","title":"sync_categories"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#radarr","text":"Add a Radarr instance to sync with Prowlarr. Note There is a Radarr plugin for Buildarr that can be used to link Radarr instances with Prowlarr using the instance_name attribute.","title":"Radarr"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.RadarrApplication.type","text":"Type value associated with this kind of application.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.RadarrApplication.instance_name","text":"The name of the Radarr instance within Buildarr, if adding a Buildarr-defined Radarr instance to this Prowlarr instance.","title":"instance_name"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.RadarrApplication.api_key","text":"API key used to access the target Radarr instance. If a Radarr instance managed by Buildarr is not referenced using instance_name , this attribute is required.","title":"api_key"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.RadarrApplication.sync_categories","text":"Default sync category values for this application type.","title":"sync_categories"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#readarr","text":"Add a Readarr instance to sync with Prowlarr.","title":"Readarr"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.ReadarrApplication.type","text":"Type value associated with this kind of application.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.ReadarrApplication.api_key","text":"API key used to access the target instance.","title":"api_key"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.ReadarrApplication.sync_categories","text":"Default sync category values for this application type.","title":"sync_categories"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#sonarr","text":"Add a Sonarr instance to sync with Prowlarr. Note There is a Sonarr plugin for Buildarr that can be used to link Sonarr instances with Prowlarr using the instance_name attribute.","title":"Sonarr"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.SonarrApplication.type","text":"Type value associated with this kind of application.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.SonarrApplication.instance_name","text":"The name of the Sonarr instance within Buildarr, if adding a Buildarr-defined Sonarr instance to this Prowlarr instance.","title":"instance_name"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.SonarrApplication.api_key","text":"API key used to access the target Sonarr instance. If a Sonarr instance managed by Buildarr is not referenced using instance_name , this attribute is required.","title":"api_key"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.SonarrApplication.sync_categories","text":"Default sync category values for this application type.","title":"sync_categories"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.SonarrApplication.anime_sync_categories","text":"Categories of content for sync with the target application, classified as anime. Note that only categories supported by the application will actually be used.","title":"anime_sync_categories"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#whisparr","text":"Add a Whisparr instance to sync with Prowlarr.","title":"Whisparr"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.WhisparrApplication.type","text":"Type value associated with this kind of application.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.WhisparrApplication.api_key","text":"API key used to access the target instance.","title":"api_key"},{"location":"plugins/prowlarr/configuration/settings/apps/applications/#buildarr_prowlarr.config.settings.apps.applications.WhisparrApplication.sync_categories","text":"Default sync category values for this application type.","title":"sync_categories"},{"location":"plugins/prowlarr/configuration/settings/apps/sync-profiles/","text":"App Sync Profiles # App sync profiles are used to set application syncing configuration with respect to an indexer. Configure the sync profile in Buildarr: prowlarr : settings : apps : sync_profiles : delete_unmanaged : false definitions : \"Standard\" : enable_automatic_search : true enable_interactive_search : true enable_rss : true minimum_seeders : 1 When the sync_profile attribute on the indexer is set to the name of the sync profile, the applications connected to the indexer will respect the settings defined in the sync profile for that indexer. For more information, refer to the guide for sync profiles on WikiArr. delete_unmanaged : bool = False class-attribute instance-attribute # Automatically delete indexer proxies not configured in Buildarr. If unsure, leave set to the default value of false . definitions : Dict [ str , SyncProfile ] = {} class-attribute instance-attribute # Application sync profiles are defined here. Configuration # The following configuration attributes are available for an app sync profile. enable_rss : bool = True class-attribute instance-attribute # Enable RSS searches/queries for the connected applications. enable_interactive_search : bool = True class-attribute instance-attribute # Enable interactive (manual) searches for the connection applications. enable_automatic_search : bool = True class-attribute instance-attribute # Enable automatic searches for the connected applications. minimum_seeders : PositiveInt = 1 class-attribute instance-attribute # The minimum number of seeders required by the application to download a release.","title":"Sync Profiles"},{"location":"plugins/prowlarr/configuration/settings/apps/sync-profiles/#app-sync-profiles","text":"App sync profiles are used to set application syncing configuration with respect to an indexer. Configure the sync profile in Buildarr: prowlarr : settings : apps : sync_profiles : delete_unmanaged : false definitions : \"Standard\" : enable_automatic_search : true enable_interactive_search : true enable_rss : true minimum_seeders : 1 When the sync_profile attribute on the indexer is set to the name of the sync profile, the applications connected to the indexer will respect the settings defined in the sync profile for that indexer. For more information, refer to the guide for sync profiles on WikiArr.","title":"App Sync Profiles"},{"location":"plugins/prowlarr/configuration/settings/apps/sync-profiles/#buildarr_prowlarr.config.settings.apps.sync_profiles.SyncProfilesSettings.delete_unmanaged","text":"Automatically delete indexer proxies not configured in Buildarr. If unsure, leave set to the default value of false .","title":"delete_unmanaged"},{"location":"plugins/prowlarr/configuration/settings/apps/sync-profiles/#buildarr_prowlarr.config.settings.apps.sync_profiles.SyncProfilesSettings.definitions","text":"Application sync profiles are defined here.","title":"definitions"},{"location":"plugins/prowlarr/configuration/settings/apps/sync-profiles/#configuration","text":"The following configuration attributes are available for an app sync profile.","title":"Configuration"},{"location":"plugins/prowlarr/configuration/settings/apps/sync-profiles/#buildarr_prowlarr.config.settings.apps.sync_profiles.SyncProfile.enable_rss","text":"Enable RSS searches/queries for the connected applications.","title":"enable_rss"},{"location":"plugins/prowlarr/configuration/settings/apps/sync-profiles/#buildarr_prowlarr.config.settings.apps.sync_profiles.SyncProfile.enable_interactive_search","text":"Enable interactive (manual) searches for the connection applications.","title":"enable_interactive_search"},{"location":"plugins/prowlarr/configuration/settings/apps/sync-profiles/#buildarr_prowlarr.config.settings.apps.sync_profiles.SyncProfile.enable_automatic_search","text":"Enable automatic searches for the connected applications.","title":"enable_automatic_search"},{"location":"plugins/prowlarr/configuration/settings/apps/sync-profiles/#buildarr_prowlarr.config.settings.apps.sync_profiles.SyncProfile.minimum_seeders","text":"The minimum number of seeders required by the application to download a release.","title":"minimum_seeders"},{"location":"plugins/prowlarr/configuration/settings/indexers/indexers/","text":"Indexers # Indexers are used to monitor for new releases of media on external trackers. Prowlarr acts as a proxy for configured indexer sites. Configured applications will subscribe to Prowlarr, which will perform searches on the applications' behalf, and return the results. The applications will then decide whether or not to fetch the release, and if so, schedule grabs with their own configured download clients. For more information on correctly setting up Prowlarr indexers, refer to the Prowlarr indexers configuration guide on WikiArr. In Buildarr, Prowlarr indexers are configured under the following structure: prowlarr : settings : indexers : indexers : delete_unmanaged : false # Do not delete indexers not setup by Buildarr by default. definitions : \"Indexer1\" : type : nyaasi ... \"Indexer2\" : type : 1337x ... delete_unmanaged : bool = False class-attribute instance-attribute # Automatically delete indexers not configured by Buildarr. If unsure, leave set at the default of false . definitions : Dict [ str , Indexer ] = {} class-attribute instance-attribute # Indexers to manage via Buildarr are defined here. Adding indexers to Buildarr # Due to the sheer number of possible indexer types in Prowlarr (583 at the time of writing), indexers are expressed differently in Buildarr compared to other resource types. Indexer configurations are partly composed of individually defined configuration attributes common to all indexer types, and partly composed of dynamically parsed fields unique to each indexer type. The easiest way to add an indexer to the Buildarr configuration file is to configure it manually in Prowlarr first, and then export the configuration using buildarr prowlarr dump-config . The resulting indexer configuration will have all possible attributes defined on it, as shown below. Most of these are not required, so it is a good idea to only use configuration attributes that are actually changed from default. prowlarr : settings : indexers : indexers : definitions : 1337x : enable : false fields : baseUrl : null definitionFile : 1337x downloadlink : iTorrents.org downloadlink2 : magnet sort : created torrentBaseSettings.seedRatio : null torrentBaseSettings.seedTime : null type : desc grab_limit : null indexer_priority : 1 query_limit : null redirect : false secret_fields : {} sync_profile : Standard tags : [] type : 1337x Indexer configuration format # The Prowlarr plugin employs a generic configuration structure for defining indexers, where attributes common to all indexer types are individually defined, and fields unique to each indexer type are set using Prowlarr's internal representation. Below is an example of two indexers being configured in this manner. Type-specific configuration attribute are defined under the fields attribute. There is also a secret_fields attribute for defining sensitive information such as API keys. prowlarr : settings : indexers : indexers : definitions : \"1337x\" : type : \"1337x\" enable : true sync_profile : \"Standard\" redirect : false priority : 1 query_limit : 4 grab_limit : 4 tags : - \"shows\" fields : \"torrentBaseSettings.seedRatio\" : 3 \"sort\" : \"created\" \"type\" : \"desc\" \"Nyaa.si\" : type : \"nyaasi\" enable : true sync_profile : \"Standard\" redirect : false priority : 1 query_limit : 4 grab_limit : 4 tags : - \"anime\" fields : \"torrentBaseSettings.seedRatio\" : 3 \"sort\" : \"created\" \"type\" : \"desc\" \"cat-id\" : \"All categories\" \"filter-id\" : \"No filter\" \"prefer_magnet_links\" : true Attributes common to all indexer types are documented below. type : LowerCaseNonEmptyStr instance-attribute # The type of indexer to manage. This attribute is unique to each indexer site. enable : bool = True class-attribute instance-attribute # When set to True , the indexer is active and Prowlarr is making requests to it. sync_profile : NonEmptyStr instance-attribute # The application sync profile to use for this indexer. App Sync Profiles should be configured before using it in an indexer. redirect : bool = False class-attribute instance-attribute # Redirect incoming download requests for the indexer, and pass the grab directly instead of proxying the request via Prowlarr. Only supported by some indexer types. priority : int = Field ( 25 , ge = 1 , le = 50 ) class-attribute instance-attribute # Priority of this indexer to prefer one indexer over another in release tiebreaker scenarios. 1 is highest priority and 50 is lowest priority. query_limit : Optional [ Annotated [ int , Field ( ge = 0 )]] = None class-attribute instance-attribute # The number of queries within a rolling 24 hour period Prowlarr will allow to the site. If empty, undefined or set to 0 , use no limit. grab_limit : Optional [ Annotated [ int , Field ( ge = 0 )]] = None class-attribute instance-attribute # The number of grabs within a rolling 24 hour period Prowlarr will allow to the site. If empty, undefined or set to 0 , use no limit. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Tags to associate this indexer with. Generally used to associate indexers with applications. fields : Dict [ str , Any ] = {} class-attribute instance-attribute # Define configuration attributes unique to each indexer type. If an attribute is not defined, its default value is used. secret_fields : Dict [ str , Password ] = {} class-attribute instance-attribute # Same as fields , but used for string attributes containing sensitive information such as API keys. Any attributes defined here will have their values hidden in the Buildarr log output.","title":"Indexers"},{"location":"plugins/prowlarr/configuration/settings/indexers/indexers/#indexers","text":"Indexers are used to monitor for new releases of media on external trackers. Prowlarr acts as a proxy for configured indexer sites. Configured applications will subscribe to Prowlarr, which will perform searches on the applications' behalf, and return the results. The applications will then decide whether or not to fetch the release, and if so, schedule grabs with their own configured download clients. For more information on correctly setting up Prowlarr indexers, refer to the Prowlarr indexers configuration guide on WikiArr. In Buildarr, Prowlarr indexers are configured under the following structure: prowlarr : settings : indexers : indexers : delete_unmanaged : false # Do not delete indexers not setup by Buildarr by default. definitions : \"Indexer1\" : type : nyaasi ... \"Indexer2\" : type : 1337x ...","title":"Indexers"},{"location":"plugins/prowlarr/configuration/settings/indexers/indexers/#buildarr_prowlarr.config.settings.indexers.indexers.IndexersSettings.delete_unmanaged","text":"Automatically delete indexers not configured by Buildarr. If unsure, leave set at the default of false .","title":"delete_unmanaged"},{"location":"plugins/prowlarr/configuration/settings/indexers/indexers/#buildarr_prowlarr.config.settings.indexers.indexers.IndexersSettings.definitions","text":"Indexers to manage via Buildarr are defined here.","title":"definitions"},{"location":"plugins/prowlarr/configuration/settings/indexers/indexers/#adding-indexers-to-buildarr","text":"Due to the sheer number of possible indexer types in Prowlarr (583 at the time of writing), indexers are expressed differently in Buildarr compared to other resource types. Indexer configurations are partly composed of individually defined configuration attributes common to all indexer types, and partly composed of dynamically parsed fields unique to each indexer type. The easiest way to add an indexer to the Buildarr configuration file is to configure it manually in Prowlarr first, and then export the configuration using buildarr prowlarr dump-config . The resulting indexer configuration will have all possible attributes defined on it, as shown below. Most of these are not required, so it is a good idea to only use configuration attributes that are actually changed from default. prowlarr : settings : indexers : indexers : definitions : 1337x : enable : false fields : baseUrl : null definitionFile : 1337x downloadlink : iTorrents.org downloadlink2 : magnet sort : created torrentBaseSettings.seedRatio : null torrentBaseSettings.seedTime : null type : desc grab_limit : null indexer_priority : 1 query_limit : null redirect : false secret_fields : {} sync_profile : Standard tags : [] type : 1337x","title":"Adding indexers to Buildarr"},{"location":"plugins/prowlarr/configuration/settings/indexers/indexers/#indexer-configuration-format","text":"The Prowlarr plugin employs a generic configuration structure for defining indexers, where attributes common to all indexer types are individually defined, and fields unique to each indexer type are set using Prowlarr's internal representation. Below is an example of two indexers being configured in this manner. Type-specific configuration attribute are defined under the fields attribute. There is also a secret_fields attribute for defining sensitive information such as API keys. prowlarr : settings : indexers : indexers : definitions : \"1337x\" : type : \"1337x\" enable : true sync_profile : \"Standard\" redirect : false priority : 1 query_limit : 4 grab_limit : 4 tags : - \"shows\" fields : \"torrentBaseSettings.seedRatio\" : 3 \"sort\" : \"created\" \"type\" : \"desc\" \"Nyaa.si\" : type : \"nyaasi\" enable : true sync_profile : \"Standard\" redirect : false priority : 1 query_limit : 4 grab_limit : 4 tags : - \"anime\" fields : \"torrentBaseSettings.seedRatio\" : 3 \"sort\" : \"created\" \"type\" : \"desc\" \"cat-id\" : \"All categories\" \"filter-id\" : \"No filter\" \"prefer_magnet_links\" : true Attributes common to all indexer types are documented below.","title":"Indexer configuration format"},{"location":"plugins/prowlarr/configuration/settings/indexers/indexers/#buildarr_prowlarr.config.settings.indexers.indexers.Indexer.type","text":"The type of indexer to manage. This attribute is unique to each indexer site.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/indexers/indexers/#buildarr_prowlarr.config.settings.indexers.indexers.Indexer.enable","text":"When set to True , the indexer is active and Prowlarr is making requests to it.","title":"enable"},{"location":"plugins/prowlarr/configuration/settings/indexers/indexers/#buildarr_prowlarr.config.settings.indexers.indexers.Indexer.sync_profile","text":"The application sync profile to use for this indexer. App Sync Profiles should be configured before using it in an indexer.","title":"sync_profile"},{"location":"plugins/prowlarr/configuration/settings/indexers/indexers/#buildarr_prowlarr.config.settings.indexers.indexers.Indexer.redirect","text":"Redirect incoming download requests for the indexer, and pass the grab directly instead of proxying the request via Prowlarr. Only supported by some indexer types.","title":"redirect"},{"location":"plugins/prowlarr/configuration/settings/indexers/indexers/#buildarr_prowlarr.config.settings.indexers.indexers.Indexer.priority","text":"Priority of this indexer to prefer one indexer over another in release tiebreaker scenarios. 1 is highest priority and 50 is lowest priority.","title":"priority"},{"location":"plugins/prowlarr/configuration/settings/indexers/indexers/#buildarr_prowlarr.config.settings.indexers.indexers.Indexer.query_limit","text":"The number of queries within a rolling 24 hour period Prowlarr will allow to the site. If empty, undefined or set to 0 , use no limit.","title":"query_limit"},{"location":"plugins/prowlarr/configuration/settings/indexers/indexers/#buildarr_prowlarr.config.settings.indexers.indexers.Indexer.grab_limit","text":"The number of grabs within a rolling 24 hour period Prowlarr will allow to the site. If empty, undefined or set to 0 , use no limit.","title":"grab_limit"},{"location":"plugins/prowlarr/configuration/settings/indexers/indexers/#buildarr_prowlarr.config.settings.indexers.indexers.Indexer.tags","text":"Tags to associate this indexer with. Generally used to associate indexers with applications.","title":"tags"},{"location":"plugins/prowlarr/configuration/settings/indexers/indexers/#buildarr_prowlarr.config.settings.indexers.indexers.Indexer.fields","text":"Define configuration attributes unique to each indexer type. If an attribute is not defined, its default value is used.","title":"fields"},{"location":"plugins/prowlarr/configuration/settings/indexers/indexers/#buildarr_prowlarr.config.settings.indexers.indexers.Indexer.secret_fields","text":"Same as fields , but used for string attributes containing sensitive information such as API keys. Any attributes defined here will have their values hidden in the Buildarr log output.","title":"secret_fields"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/","text":"Indexer Proxies # Prowlarr supports making indexer search requests through proxies. This is often used to get around ISP-level blocking of indexer sites, or to resolve ingress traffic protection measures such as CloudFlare. For more information on configuring indexer proxies, refer to this guide on WikiArr. delete_unmanaged : bool = False class-attribute instance-attribute # Automatically delete indexer proxies not configured in Buildarr. If unsure, leave set to the default of false . definitions : Dict [ str , Annotated [ ProxyType , Field ( discriminator = 'type' )]] = {} class-attribute instance-attribute # Define indexer proxy definitions here. Configuring indexer proxies # In Buildarr, indexer proxies are defined as in the following example: prowlarr : settings : indexers : proxies : definitions : \"FlareSolverr\" : type : \"flaresolverr\" host_url : \"http://flaresolverr:8191/\" request_timeout : 60.0 tags : - \"anime\" The type attribute denotes what type of proxy to manage. The following attributes are common to all proxy types: tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Prowlarr tags to associate this indexer proxy with. When set, indexers with at least one matching tag will use this proxy. If unset or empty, all indexers will use this proxy. FlareSolverr # Bypass CloudFlare and DDoS-GUARD protection using FlareSolverr. type : Literal [ 'flaresolverr' ] = 'flaresolverr' class-attribute instance-attribute # Type value associated with this kind of proxy. host_url : AnyHttpUrl instance-attribute # Host URL to connect to the Flaresolverr instance, from the Prowlarr instance's persective. request_timeout : PositiveInt = 60 class-attribute instance-attribute # Timeout for requests sent to FlareSolverr, in seconds. HTTP proxy # Send indexer requests through a HTTP proxy. type : Literal [ 'http' ] = 'http' class-attribute instance-attribute # Type value associated with this kind of proxy. hostname : NonEmptyStr instance-attribute # Hostname of the proxy server. port : Port = 8080 class-attribute instance-attribute # Access port for the proxy. username : Optional [ str ] = None class-attribute instance-attribute # Username used to authenticate with the proxy, if required. password : Optional [ SecretStr ] = None class-attribute instance-attribute # Password used to authenticate with the proxy, if required. SOCKS4 proxy # Send indexer requests through a SOCKS version 4 proxy. Note SOCKS4 does not support full username-based authentication, even though Prowlarr exposes the configuration attribbutes. If you would like to secure your proxy server, upgrade to SOCKS5 or switch to using an HTTP proxy. type : Literal [ 'socks4' ] = 'socks4' class-attribute instance-attribute # Type value associated with this kind of proxy. hostname : NonEmptyStr instance-attribute # Hostname of the proxy server. port : Port = 1080 class-attribute instance-attribute # Access port for the proxy. username : Optional [ str ] = None class-attribute instance-attribute # Username used to authenticate with the proxy, if required. password : Optional [ SecretStr ] = None class-attribute instance-attribute # Password used to authenticate with the proxy, if required. SOCKS5 proxy # Send indexer requests through a SOCKS version 5 proxy. type : Literal [ 'socks5' ] = 'socks5' class-attribute instance-attribute # Type value associated with this kind of proxy. hostname : NonEmptyStr instance-attribute # Hostname of the proxy server. port : Port = 1080 class-attribute instance-attribute # Access port for the proxy. username : Optional [ str ] = None class-attribute instance-attribute # Username used to authenticate with the proxy, if required. password : Optional [ SecretStr ] = None class-attribute instance-attribute # Password used to authenticate with the proxy, if required.","title":"Proxies"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/#indexer-proxies","text":"Prowlarr supports making indexer search requests through proxies. This is often used to get around ISP-level blocking of indexer sites, or to resolve ingress traffic protection measures such as CloudFlare. For more information on configuring indexer proxies, refer to this guide on WikiArr.","title":"Indexer Proxies"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/#buildarr_prowlarr.config.settings.indexers.proxies.ProxiesSettings.delete_unmanaged","text":"Automatically delete indexer proxies not configured in Buildarr. If unsure, leave set to the default of false .","title":"delete_unmanaged"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/#buildarr_prowlarr.config.settings.indexers.proxies.ProxiesSettings.definitions","text":"Define indexer proxy definitions here.","title":"definitions"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/#configuring-indexer-proxies","text":"In Buildarr, indexer proxies are defined as in the following example: prowlarr : settings : indexers : proxies : definitions : \"FlareSolverr\" : type : \"flaresolverr\" host_url : \"http://flaresolverr:8191/\" request_timeout : 60.0 tags : - \"anime\" The type attribute denotes what type of proxy to manage. The following attributes are common to all proxy types:","title":"Configuring indexer proxies"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/#buildarr_prowlarr.config.settings.indexers.proxies.Proxy.tags","text":"Prowlarr tags to associate this indexer proxy with. When set, indexers with at least one matching tag will use this proxy. If unset or empty, all indexers will use this proxy.","title":"tags"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/#flaresolverr","text":"Bypass CloudFlare and DDoS-GUARD protection using FlareSolverr.","title":"FlareSolverr"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/#buildarr_prowlarr.config.settings.indexers.proxies.FlaresolverrProxy.type","text":"Type value associated with this kind of proxy.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/#buildarr_prowlarr.config.settings.indexers.proxies.FlaresolverrProxy.host_url","text":"Host URL to connect to the Flaresolverr instance, from the Prowlarr instance's persective.","title":"host_url"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/#buildarr_prowlarr.config.settings.indexers.proxies.FlaresolverrProxy.request_timeout","text":"Timeout for requests sent to FlareSolverr, in seconds.","title":"request_timeout"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/#http-proxy","text":"Send indexer requests through a HTTP proxy.","title":"HTTP proxy"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/#buildarr_prowlarr.config.settings.indexers.proxies.HttpProxy.type","text":"Type value associated with this kind of proxy.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/#buildarr_prowlarr.config.settings.indexers.proxies.HttpProxy.hostname","text":"Hostname of the proxy server.","title":"hostname"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/#buildarr_prowlarr.config.settings.indexers.proxies.HttpProxy.port","text":"Access port for the proxy.","title":"port"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/#buildarr_prowlarr.config.settings.indexers.proxies.HttpProxy.username","text":"Username used to authenticate with the proxy, if required.","title":"username"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/#buildarr_prowlarr.config.settings.indexers.proxies.HttpProxy.password","text":"Password used to authenticate with the proxy, if required.","title":"password"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/#socks4-proxy","text":"Send indexer requests through a SOCKS version 4 proxy. Note SOCKS4 does not support full username-based authentication, even though Prowlarr exposes the configuration attribbutes. If you would like to secure your proxy server, upgrade to SOCKS5 or switch to using an HTTP proxy.","title":"SOCKS4 proxy"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/#buildarr_prowlarr.config.settings.indexers.proxies.Socks4Proxy.type","text":"Type value associated with this kind of proxy.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/#buildarr_prowlarr.config.settings.indexers.proxies.Socks4Proxy.hostname","text":"Hostname of the proxy server.","title":"hostname"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/#buildarr_prowlarr.config.settings.indexers.proxies.Socks4Proxy.port","text":"Access port for the proxy.","title":"port"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/#buildarr_prowlarr.config.settings.indexers.proxies.Socks4Proxy.username","text":"Username used to authenticate with the proxy, if required.","title":"username"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/#buildarr_prowlarr.config.settings.indexers.proxies.Socks4Proxy.password","text":"Password used to authenticate with the proxy, if required.","title":"password"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/#socks5-proxy","text":"Send indexer requests through a SOCKS version 5 proxy.","title":"SOCKS5 proxy"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/#buildarr_prowlarr.config.settings.indexers.proxies.Socks5Proxy.type","text":"Type value associated with this kind of proxy.","title":"type"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/#buildarr_prowlarr.config.settings.indexers.proxies.Socks5Proxy.hostname","text":"Hostname of the proxy server.","title":"hostname"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/#buildarr_prowlarr.config.settings.indexers.proxies.Socks5Proxy.port","text":"Access port for the proxy.","title":"port"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/#buildarr_prowlarr.config.settings.indexers.proxies.Socks5Proxy.username","text":"Username used to authenticate with the proxy, if required.","title":"username"},{"location":"plugins/prowlarr/configuration/settings/indexers/proxies/#buildarr_prowlarr.config.settings.indexers.proxies.Socks5Proxy.password","text":"Password used to authenticate with the proxy, if required.","title":"password"},{"location":"plugins/radarr/","text":"Buildarr Radarr Plugin # The Buildarr Radarr plugin ( buildarr-radarr ) is a plugin for Buildarr that adds the capability to configure and manage Radarr instances. Radarr is a PVR application which downloads, renames and manages the lifecycle of movies in your media library. In other words, it is to movies what Sonarr is to TV shoes. It can monitor for both upcoming and current releases and grab them when they become available, as well as upgrade to higher quality versions of monitored releases when a suitable version is available. Installation # When using Buildarr as a standalone application , the Radarr plugin can simply be installed using pip : pip install buildarr buildarr-radarr When using Buildarr as a Docker container , the Radarr plugin is bundled with the official container ( callum027/buildarr ), so there is no need to install it separately. You can upgrade, or pin the version of the plugin to a specific version, within the container by setting the $BUILDARR_INSTALL_PACKAGES environment variable in the docker run command using --env / -e : -e BUILDARR_INSTALL_PACKAGES = \"buildarr-radarr==<version>\" Quick Start # To use the Radarr plugin, create a radarr block within buildarr.yml , and enter the connection information required for the Buildarr instance to connect to the Radarr instance you'd like to manage. If authentication is disabled on your Radarr instance, Buildarr will automatically retrieve the API key from the instance, meaning that you do not need to define it in the configuration. If authentication is enabled, manually retrieve the API key for Radarr by copying it from Settings -> General -> Security -> API Key, and pasting it into the configuration file as shown below. --- buildarr : watch_config : true radarr : hostname : localhost # Defaults to `radarr`, or the instance name for instance-specific configs. port : 7878 # Defaults to 7878. protocol : http # Defaults to `http`. api_key : ... # Required if authentication is enabled. Auto-fetch if authentication is disabled. Buildarr won't modify anything yet since no configuration has been defined, but you are able to test if Buildarr is able to connect to and authenticate with the Radarr instance. Try a buildarr run . If the output is similar to the below output, Buildarr was able to connect to your Radarr instance. 2023-09-02 18:46:05,366 buildarr:1 buildarr.cli.run [INFO] Buildarr version 0.6.0 (log level: INFO) 2023-09-02 18:46:05,366 buildarr:1 buildarr.cli.run [INFO] Loading configuration file '/config/buildarr.yml' 2023-09-02 18:46:05,403 buildarr:1 buildarr.cli.run [INFO] Finished loading configuration file 2023-09-02 18:46:05,417 buildarr:1 buildarr.cli.run [INFO] Loaded plugins: radarr (0.1.0) 2023-09-02 18:46:05,417 buildarr:1 buildarr.cli.run [INFO] Loading instance configurations 2023-09-02 18:46:05,422 buildarr:1 buildarr.cli.run [INFO] Finished loading instance configurations 2023-09-02 18:46:05,422 buildarr:1 buildarr.cli.run [INFO] Running with plugins: radarr 2023-09-02 18:46:05,422 buildarr:1 buildarr.cli.run [INFO] Resolving instance dependencies 2023-09-02 18:46:05,422 buildarr:1 buildarr.cli.run [INFO] Finished resolving instance dependencies 2023-09-02 18:46:05,422 buildarr:1 buildarr.cli.run [INFO] Fetching TRaSH metadata 2023-09-02 18:46:09,856 buildarr:1 buildarr.cli.run [INFO] Finished fetching TRaSH metadata 2023-09-02 18:46:09,856 buildarr:1 buildarr.cli.run [INFO] Rendering instance configuration dynamic attributes 2023-09-02 18:46:09,856 buildarr:1 buildarr.cli.run [INFO] Finished rendering instance configuration dynamic attributes 2023-09-02 18:46:09,856 buildarr:1 buildarr.cli.run [INFO] Loading secrets file from '/config/secrets.json' 2023-09-02 18:46:09,857 buildarr:1 buildarr.cli.run [INFO] Finished loading secrets file 2023-09-02 18:46:09,857 buildarr:1 buildarr.cli.run [INFO] <radarr> (default) Checking secrets 2023-09-02 18:46:09,869 buildarr:1 buildarr.cli.run [INFO] <radarr> (default) Connection test successful using cached secrets 2023-09-02 18:46:09,869 buildarr:1 buildarr.cli.run [INFO] <radarr> (default) Finished checking secrets 2023-09-02 18:46:09,870 buildarr:1 buildarr.cli.run [INFO] Saving updated secrets file to '/config/secrets.json' 2023-09-02 18:46:09,871 buildarr:1 buildarr.cli.run [INFO] Finished saving updated secrets file 2023-09-02 18:46:09,871 buildarr:1 buildarr.cli.run [INFO] Performing post-initialisation configuration render 2023-09-02 18:46:10,092 buildarr:1 buildarr.cli.run [INFO] Finished performing post-initialisation configuration render 2023-09-02 18:46:10,092 buildarr:1 buildarr.cli.run [INFO] Updating configuration on remote instances 2023-09-02 18:46:10,092 buildarr:1 buildarr.cli.run [INFO] <radarr> (default) Fetching remote configuration to check if updates are required 2023-09-02 18:46:10,446 buildarr:1 buildarr.cli.run [INFO] <radarr> (default) Finished fetching remote configuration 2023-09-02 18:46:10,522 buildarr:1 buildarr.cli.run [INFO] <radarr> (default) Updating remote configuration 2023-09-02 18:46:10,840 buildarr:1 buildarr.cli.run [INFO] <radarr> (default) Remote configuration is up to date 2023-09-02 18:46:10,840 buildarr:1 buildarr.cli.run [INFO] <radarr> (default) Finished updating remote configuration 2023-09-02 18:46:10,840 buildarr:1 buildarr.cli.run [INFO] Finished updating configuration on remote instances 2023-09-02 18:46:10,840 buildarr:1 buildarr.cli.run [INFO] Deleting unmanaged/unused resources on remote instances 2023-09-02 18:46:10,840 buildarr:1 buildarr.cli.run [INFO] <radarr> (default) Refetching remote configuration to delete unused resources 2023-09-02 18:46:11,171 buildarr:1 buildarr.cli.run [INFO] <radarr> (default) Finished refetching remote configuration 2023-09-02 18:46:11,263 buildarr:1 buildarr.cli.run [INFO] <radarr> (default) Deleting unmanaged/unused resources on the remote instance 2023-09-02 18:46:11,442 buildarr:1 buildarr.cli.run [INFO] <radarr> (default) Remote configuration is clean 2023-09-02 18:46:11,442 buildarr:1 buildarr.cli.run [INFO] <radarr> (default) Finished deleting unmanaged/unused resources on the remote instance 2023-09-02 18:46:11,442 buildarr:1 buildarr.cli.run [INFO] Finished deleting unmanaged/unused resources on remote instances 2023-09-02 18:46:11,442 buildarr:1 buildarr.cli.run [INFO] Deleting downloaded TRaSH metadata 2023-09-02 18:46:11,461 buildarr:1 buildarr.cli.run [INFO] Finished deleting downloaded TRaSH metadata Configuring your Buildarr instance # The following sections cover comprehensive configuration of a Radarr instance. Note that these documents do not show how you should configure a Radarr instance. Rather, they show how you can configure a Radarr instance the way you want with Buildarr. For more information on how to optimally configure Radarr, you can refer to the excellent guides from WikiArr and TRaSH-Guides . Note Configuration of the following resources are not yet supported by this plugin (but will be added in future versions): Import Lists Host Configuration Settings Media Management Profiles Quality Profiles Delay Profiles Quality Custom Formats Indexers Download Clients Notifications (Connect) Metadata Tags General UI Dumping an existing Radarr instance configuration # Buildarr is capable of dumping a running Radarr instance's configuration. $ buildarr radarr dump-config http://localhost:7878 > radarr.yml Radarr instance API key: <Paste API key here> The dumped YAML object can be placed directly under the radarr configuration block, or used as an instance-specific configuration . All possible values are explicitly defined in this dumped configuration. hostname : localhost port : 7878 protocol : http api_key : 1a2b3c4d5e6f1a2b3c4d5e6f1a2b3c4d image : lscr.io/linuxserver/radarr version : 4.7.5.7809 settings : media_management : rename_movies : true replace_illegal_characters : true colon_replacement : space-dash-space standard_movie_format : '{Movie CleanTitle} - {Edition Tags }{[Custom Formats] }{[Quality Full] }{[MediaInfo 3D] }{[MediaInfo VideoDynamicRangeType] }[{Mediainfo AudioCodec}{ Mediainfo AudioChannels}]{ [Mediainfo VideoCodec]}{ [Release Group]} - Default' movie_folder_format : '{Movie CleanTitle} ({Release Year}) [imdbid-{ImdbId}]' create_missing_movie_folders : false delete_empty_folders : false skip_free_space_check : false minimum_free_space : 100 use_hardlinks : true import_using_script : false import_script_path : null import_extra_files : false unmonitor_deleted_movies : false propers_and_repacks : do-not-prefer analyze_video_files : true rescan_folder_after_refresh : always change_file_date : none recycling_bin : null recycling_bin_cleanup : 28 set_permissions : false chmod_folder : drwxr-xr-x chown_group : null root_folders : delete_unmanaged : false definitions : [] profiles : quality_profiles : delete_unmanaged : false definitions : Movies : upgrades_allowed : true qualities : - Bluray-1080p - name : WEB 1080p members : - WEBRip-1080p - WEBDL-1080p - Bluray-720p - name : WEB 720p members : - WEBDL-720p - WEBRip-720p - Bluray-576p - Bluray-480p - name : WEB 480p members : - WEBDL-480p - WEBRip-480p - name : DVD-Video members : - DVD-R - DVD upgrade_until_quality : Bluray-1080p minimum_custom_format_score : 0 upgrade_until_custom_format_score : 10000 custom_formats : - name : 4k-remaster score : 25 - name : remaster score : 25 language : English delay_profiles : definitions : - preferred_protocol : torrent-prefer usenet_delay : 0 torrent_delay : 1440 bypass_if_highest_quality : true tags : [] delete_unmanaged : false quality : trash_id : null definitions : Unknown : title : null min : 0.0 preferred : 3.3 max : null WORKPRINT : title : null min : 0.0 preferred : 95.0 max : 100.0 CAM : title : null min : 0.0 preferred : 95.0 max : 100.0 TELESYNC : title : null min : 0.0 preferred : 95.0 max : 100.0 TELECINE : title : null min : 0.0 preferred : 95.0 max : 100.0 REGIONAL : title : null min : 0.0 preferred : 95.0 max : 100.0 DVDSCR : title : null min : 0.0 preferred : 95.0 max : 100.0 SDTV : title : null min : 0.0 preferred : 95.0 max : 100.0 DVD : title : null min : 0.0 preferred : 95.0 max : 100.0 DVD-R : title : null min : 0.0 preferred : 95.0 max : 100.0 WEBDL-480p : title : null min : 0.0 preferred : 95.0 max : 100.0 WEBRip-480p : title : null min : 0.0 preferred : 95.0 max : 100.0 Bluray-480p : title : null min : 0.0 preferred : 95.0 max : 100.0 Bluray-576p : title : null min : 0.0 preferred : 95.0 max : 100.0 HDTV-720p : title : null min : 17.1 preferred : 95.0 max : null WEBDL-720p : title : null min : 12.5 preferred : 95.0 max : null WEBRip-720p : title : null min : 12.5 preferred : 95.0 max : null Bluray-720p : title : null min : 25.7 preferred : 95.0 max : null HDTV-1080p : title : null min : 33.8 preferred : 95.0 max : null WEBDL-1080p : title : null min : 12.5 preferred : 95.0 max : null WEBRip-1080p : title : null min : 12.5 preferred : 95.0 max : null Bluray-1080p : title : null min : 50.8 preferred : null max : null Remux-1080p : title : null min : 136.8 preferred : null max : null HDTV-2160p : title : null min : 85.0 preferred : null max : null WEBDL-2160p : title : null min : 34.5 preferred : null max : null WEBRip-2160p : title : null min : 34.5 preferred : null max : null Bluray-2160p : title : null min : 102.0 preferred : null max : null Remux-2160p : title : null min : 187.4 preferred : null max : null BR-DISK : title : null min : 0.0 preferred : null max : null Raw-HD : title : null min : 0.0 preferred : null max : null custom_formats : delete_unmanaged : false definitions : remaster : trash_id : null default_score : null include_when_renaming : false delete_unmanaged_conditions : false conditions : Not 4K Remaster : negate : true required : true type : release-title regex : 4K Remaster : negate : false required : true type : release-title regex : Remaster 4k-remaster : trash_id : null default_score : null include_when_renaming : false delete_unmanaged_conditions : false conditions : 4K : negate : false required : true type : release-title regex : 4k Not 4K Resolution : negate : true required : true type : resolution resolution : r2160p Remaster : negate : false required : true type : release-title regex : Remaster indexers : minimum_age : 0 retention : 0 maximum_size : 0 rss_sync_interval : 60 delete_unmanaged : false definitions : 1337x (Prowlarr) : enable_rss : true enable_automatic_search : true enable_interactive_search : true priority : 25 download_client : null tags : [] minimum_seeders : 2 seed_ratio : null seed_time : null type : torznab base_url : http://prowlarr:9696/1/ api_path : /api api_key : f6e5d4c3b2a10f6e5d4c3b2a10f6e5d4 multi_languages : [] categories : - MOVIES-FOREIGN - MOVIES-SD - MOVIES-DVD - MOVIES-HD additional_parameters : null download_clients : delete_unmanaged : false definitions : Transmission : enable : true priority : 1 remove_completed : true tags : [] host : transmission port : 9091 use_ssl : false url_base : /transmission/ username : null password : null category : null directory : /data/torrents/movies recent_priority : last older_priority : last add_paused : false type : transmission notifications : delete_unmanaged : false definitions : {} metadata : certification_country : us emby_legacy : enable : false movie_metadata : true kodi_emby : enable : false movie_metadata : true movie_metadata_url : false movie_metadata_language : english movie_images : true use_movie_nfo : false add_collection_name : true roksbox : enable : false movie_metadata : true movie_images : true wdtv : enable : false movie_metadata : true movie_images : true tags : definitions : - sup general : host : bind_address : '*' port : 7878 ssl_port : 9898 use_ssl : false ssl_cert_path : null ssl_cert_password : null url_base : null instance_name : Radarr security : authentication : none username : null password : null certificate_validation : enabled proxy : enable : false proxy_type : http hostname : null port : 8080 username : null password : null ignored_addresses : [] bypass_proxy_for_local_addresses : true logging : log_level : INFO analytics : send_anonymous_usage_data : false updates : branch : master automatic : false mechanism : docker script_path : null backup : folder : Backups interval : 7 retention : 28 ui : first_day_of_week : monday week_column_header : day-first runtime_format : hours-minutes short_date_format : slash-day-first long_date_format : day-first time_format : twentyfour-hour show_relative_dates : true theme : auto enable_color_impaired_mode : false movie_info_language : english ui_language : english","title":"Introduction"},{"location":"plugins/radarr/#buildarr-radarr-plugin","text":"The Buildarr Radarr plugin ( buildarr-radarr ) is a plugin for Buildarr that adds the capability to configure and manage Radarr instances. Radarr is a PVR application which downloads, renames and manages the lifecycle of movies in your media library. In other words, it is to movies what Sonarr is to TV shoes. It can monitor for both upcoming and current releases and grab them when they become available, as well as upgrade to higher quality versions of monitored releases when a suitable version is available.","title":"Buildarr Radarr Plugin"},{"location":"plugins/radarr/#installation","text":"When using Buildarr as a standalone application , the Radarr plugin can simply be installed using pip : pip install buildarr buildarr-radarr When using Buildarr as a Docker container , the Radarr plugin is bundled with the official container ( callum027/buildarr ), so there is no need to install it separately. You can upgrade, or pin the version of the plugin to a specific version, within the container by setting the $BUILDARR_INSTALL_PACKAGES environment variable in the docker run command using --env / -e : -e BUILDARR_INSTALL_PACKAGES = \"buildarr-radarr==<version>\"","title":"Installation"},{"location":"plugins/radarr/#quick-start","text":"To use the Radarr plugin, create a radarr block within buildarr.yml , and enter the connection information required for the Buildarr instance to connect to the Radarr instance you'd like to manage. If authentication is disabled on your Radarr instance, Buildarr will automatically retrieve the API key from the instance, meaning that you do not need to define it in the configuration. If authentication is enabled, manually retrieve the API key for Radarr by copying it from Settings -> General -> Security -> API Key, and pasting it into the configuration file as shown below. --- buildarr : watch_config : true radarr : hostname : localhost # Defaults to `radarr`, or the instance name for instance-specific configs. port : 7878 # Defaults to 7878. protocol : http # Defaults to `http`. api_key : ... # Required if authentication is enabled. Auto-fetch if authentication is disabled. Buildarr won't modify anything yet since no configuration has been defined, but you are able to test if Buildarr is able to connect to and authenticate with the Radarr instance. Try a buildarr run . If the output is similar to the below output, Buildarr was able to connect to your Radarr instance. 2023-09-02 18:46:05,366 buildarr:1 buildarr.cli.run [INFO] Buildarr version 0.6.0 (log level: INFO) 2023-09-02 18:46:05,366 buildarr:1 buildarr.cli.run [INFO] Loading configuration file '/config/buildarr.yml' 2023-09-02 18:46:05,403 buildarr:1 buildarr.cli.run [INFO] Finished loading configuration file 2023-09-02 18:46:05,417 buildarr:1 buildarr.cli.run [INFO] Loaded plugins: radarr (0.1.0) 2023-09-02 18:46:05,417 buildarr:1 buildarr.cli.run [INFO] Loading instance configurations 2023-09-02 18:46:05,422 buildarr:1 buildarr.cli.run [INFO] Finished loading instance configurations 2023-09-02 18:46:05,422 buildarr:1 buildarr.cli.run [INFO] Running with plugins: radarr 2023-09-02 18:46:05,422 buildarr:1 buildarr.cli.run [INFO] Resolving instance dependencies 2023-09-02 18:46:05,422 buildarr:1 buildarr.cli.run [INFO] Finished resolving instance dependencies 2023-09-02 18:46:05,422 buildarr:1 buildarr.cli.run [INFO] Fetching TRaSH metadata 2023-09-02 18:46:09,856 buildarr:1 buildarr.cli.run [INFO] Finished fetching TRaSH metadata 2023-09-02 18:46:09,856 buildarr:1 buildarr.cli.run [INFO] Rendering instance configuration dynamic attributes 2023-09-02 18:46:09,856 buildarr:1 buildarr.cli.run [INFO] Finished rendering instance configuration dynamic attributes 2023-09-02 18:46:09,856 buildarr:1 buildarr.cli.run [INFO] Loading secrets file from '/config/secrets.json' 2023-09-02 18:46:09,857 buildarr:1 buildarr.cli.run [INFO] Finished loading secrets file 2023-09-02 18:46:09,857 buildarr:1 buildarr.cli.run [INFO] <radarr> (default) Checking secrets 2023-09-02 18:46:09,869 buildarr:1 buildarr.cli.run [INFO] <radarr> (default) Connection test successful using cached secrets 2023-09-02 18:46:09,869 buildarr:1 buildarr.cli.run [INFO] <radarr> (default) Finished checking secrets 2023-09-02 18:46:09,870 buildarr:1 buildarr.cli.run [INFO] Saving updated secrets file to '/config/secrets.json' 2023-09-02 18:46:09,871 buildarr:1 buildarr.cli.run [INFO] Finished saving updated secrets file 2023-09-02 18:46:09,871 buildarr:1 buildarr.cli.run [INFO] Performing post-initialisation configuration render 2023-09-02 18:46:10,092 buildarr:1 buildarr.cli.run [INFO] Finished performing post-initialisation configuration render 2023-09-02 18:46:10,092 buildarr:1 buildarr.cli.run [INFO] Updating configuration on remote instances 2023-09-02 18:46:10,092 buildarr:1 buildarr.cli.run [INFO] <radarr> (default) Fetching remote configuration to check if updates are required 2023-09-02 18:46:10,446 buildarr:1 buildarr.cli.run [INFO] <radarr> (default) Finished fetching remote configuration 2023-09-02 18:46:10,522 buildarr:1 buildarr.cli.run [INFO] <radarr> (default) Updating remote configuration 2023-09-02 18:46:10,840 buildarr:1 buildarr.cli.run [INFO] <radarr> (default) Remote configuration is up to date 2023-09-02 18:46:10,840 buildarr:1 buildarr.cli.run [INFO] <radarr> (default) Finished updating remote configuration 2023-09-02 18:46:10,840 buildarr:1 buildarr.cli.run [INFO] Finished updating configuration on remote instances 2023-09-02 18:46:10,840 buildarr:1 buildarr.cli.run [INFO] Deleting unmanaged/unused resources on remote instances 2023-09-02 18:46:10,840 buildarr:1 buildarr.cli.run [INFO] <radarr> (default) Refetching remote configuration to delete unused resources 2023-09-02 18:46:11,171 buildarr:1 buildarr.cli.run [INFO] <radarr> (default) Finished refetching remote configuration 2023-09-02 18:46:11,263 buildarr:1 buildarr.cli.run [INFO] <radarr> (default) Deleting unmanaged/unused resources on the remote instance 2023-09-02 18:46:11,442 buildarr:1 buildarr.cli.run [INFO] <radarr> (default) Remote configuration is clean 2023-09-02 18:46:11,442 buildarr:1 buildarr.cli.run [INFO] <radarr> (default) Finished deleting unmanaged/unused resources on the remote instance 2023-09-02 18:46:11,442 buildarr:1 buildarr.cli.run [INFO] Finished deleting unmanaged/unused resources on remote instances 2023-09-02 18:46:11,442 buildarr:1 buildarr.cli.run [INFO] Deleting downloaded TRaSH metadata 2023-09-02 18:46:11,461 buildarr:1 buildarr.cli.run [INFO] Finished deleting downloaded TRaSH metadata","title":"Quick Start"},{"location":"plugins/radarr/#configuring-your-buildarr-instance","text":"The following sections cover comprehensive configuration of a Radarr instance. Note that these documents do not show how you should configure a Radarr instance. Rather, they show how you can configure a Radarr instance the way you want with Buildarr. For more information on how to optimally configure Radarr, you can refer to the excellent guides from WikiArr and TRaSH-Guides . Note Configuration of the following resources are not yet supported by this plugin (but will be added in future versions): Import Lists Host Configuration Settings Media Management Profiles Quality Profiles Delay Profiles Quality Custom Formats Indexers Download Clients Notifications (Connect) Metadata Tags General UI","title":"Configuring your Buildarr instance"},{"location":"plugins/radarr/#dumping-an-existing-radarr-instance-configuration","text":"Buildarr is capable of dumping a running Radarr instance's configuration. $ buildarr radarr dump-config http://localhost:7878 > radarr.yml Radarr instance API key: <Paste API key here> The dumped YAML object can be placed directly under the radarr configuration block, or used as an instance-specific configuration . All possible values are explicitly defined in this dumped configuration. hostname : localhost port : 7878 protocol : http api_key : 1a2b3c4d5e6f1a2b3c4d5e6f1a2b3c4d image : lscr.io/linuxserver/radarr version : 4.7.5.7809 settings : media_management : rename_movies : true replace_illegal_characters : true colon_replacement : space-dash-space standard_movie_format : '{Movie CleanTitle} - {Edition Tags }{[Custom Formats] }{[Quality Full] }{[MediaInfo 3D] }{[MediaInfo VideoDynamicRangeType] }[{Mediainfo AudioCodec}{ Mediainfo AudioChannels}]{ [Mediainfo VideoCodec]}{ [Release Group]} - Default' movie_folder_format : '{Movie CleanTitle} ({Release Year}) [imdbid-{ImdbId}]' create_missing_movie_folders : false delete_empty_folders : false skip_free_space_check : false minimum_free_space : 100 use_hardlinks : true import_using_script : false import_script_path : null import_extra_files : false unmonitor_deleted_movies : false propers_and_repacks : do-not-prefer analyze_video_files : true rescan_folder_after_refresh : always change_file_date : none recycling_bin : null recycling_bin_cleanup : 28 set_permissions : false chmod_folder : drwxr-xr-x chown_group : null root_folders : delete_unmanaged : false definitions : [] profiles : quality_profiles : delete_unmanaged : false definitions : Movies : upgrades_allowed : true qualities : - Bluray-1080p - name : WEB 1080p members : - WEBRip-1080p - WEBDL-1080p - Bluray-720p - name : WEB 720p members : - WEBDL-720p - WEBRip-720p - Bluray-576p - Bluray-480p - name : WEB 480p members : - WEBDL-480p - WEBRip-480p - name : DVD-Video members : - DVD-R - DVD upgrade_until_quality : Bluray-1080p minimum_custom_format_score : 0 upgrade_until_custom_format_score : 10000 custom_formats : - name : 4k-remaster score : 25 - name : remaster score : 25 language : English delay_profiles : definitions : - preferred_protocol : torrent-prefer usenet_delay : 0 torrent_delay : 1440 bypass_if_highest_quality : true tags : [] delete_unmanaged : false quality : trash_id : null definitions : Unknown : title : null min : 0.0 preferred : 3.3 max : null WORKPRINT : title : null min : 0.0 preferred : 95.0 max : 100.0 CAM : title : null min : 0.0 preferred : 95.0 max : 100.0 TELESYNC : title : null min : 0.0 preferred : 95.0 max : 100.0 TELECINE : title : null min : 0.0 preferred : 95.0 max : 100.0 REGIONAL : title : null min : 0.0 preferred : 95.0 max : 100.0 DVDSCR : title : null min : 0.0 preferred : 95.0 max : 100.0 SDTV : title : null min : 0.0 preferred : 95.0 max : 100.0 DVD : title : null min : 0.0 preferred : 95.0 max : 100.0 DVD-R : title : null min : 0.0 preferred : 95.0 max : 100.0 WEBDL-480p : title : null min : 0.0 preferred : 95.0 max : 100.0 WEBRip-480p : title : null min : 0.0 preferred : 95.0 max : 100.0 Bluray-480p : title : null min : 0.0 preferred : 95.0 max : 100.0 Bluray-576p : title : null min : 0.0 preferred : 95.0 max : 100.0 HDTV-720p : title : null min : 17.1 preferred : 95.0 max : null WEBDL-720p : title : null min : 12.5 preferred : 95.0 max : null WEBRip-720p : title : null min : 12.5 preferred : 95.0 max : null Bluray-720p : title : null min : 25.7 preferred : 95.0 max : null HDTV-1080p : title : null min : 33.8 preferred : 95.0 max : null WEBDL-1080p : title : null min : 12.5 preferred : 95.0 max : null WEBRip-1080p : title : null min : 12.5 preferred : 95.0 max : null Bluray-1080p : title : null min : 50.8 preferred : null max : null Remux-1080p : title : null min : 136.8 preferred : null max : null HDTV-2160p : title : null min : 85.0 preferred : null max : null WEBDL-2160p : title : null min : 34.5 preferred : null max : null WEBRip-2160p : title : null min : 34.5 preferred : null max : null Bluray-2160p : title : null min : 102.0 preferred : null max : null Remux-2160p : title : null min : 187.4 preferred : null max : null BR-DISK : title : null min : 0.0 preferred : null max : null Raw-HD : title : null min : 0.0 preferred : null max : null custom_formats : delete_unmanaged : false definitions : remaster : trash_id : null default_score : null include_when_renaming : false delete_unmanaged_conditions : false conditions : Not 4K Remaster : negate : true required : true type : release-title regex : 4K Remaster : negate : false required : true type : release-title regex : Remaster 4k-remaster : trash_id : null default_score : null include_when_renaming : false delete_unmanaged_conditions : false conditions : 4K : negate : false required : true type : release-title regex : 4k Not 4K Resolution : negate : true required : true type : resolution resolution : r2160p Remaster : negate : false required : true type : release-title regex : Remaster indexers : minimum_age : 0 retention : 0 maximum_size : 0 rss_sync_interval : 60 delete_unmanaged : false definitions : 1337x (Prowlarr) : enable_rss : true enable_automatic_search : true enable_interactive_search : true priority : 25 download_client : null tags : [] minimum_seeders : 2 seed_ratio : null seed_time : null type : torznab base_url : http://prowlarr:9696/1/ api_path : /api api_key : f6e5d4c3b2a10f6e5d4c3b2a10f6e5d4 multi_languages : [] categories : - MOVIES-FOREIGN - MOVIES-SD - MOVIES-DVD - MOVIES-HD additional_parameters : null download_clients : delete_unmanaged : false definitions : Transmission : enable : true priority : 1 remove_completed : true tags : [] host : transmission port : 9091 use_ssl : false url_base : /transmission/ username : null password : null category : null directory : /data/torrents/movies recent_priority : last older_priority : last add_paused : false type : transmission notifications : delete_unmanaged : false definitions : {} metadata : certification_country : us emby_legacy : enable : false movie_metadata : true kodi_emby : enable : false movie_metadata : true movie_metadata_url : false movie_metadata_language : english movie_images : true use_movie_nfo : false add_collection_name : true roksbox : enable : false movie_metadata : true movie_images : true wdtv : enable : false movie_metadata : true movie_images : true tags : definitions : - sup general : host : bind_address : '*' port : 7878 ssl_port : 9898 use_ssl : false ssl_cert_path : null ssl_cert_password : null url_base : null instance_name : Radarr security : authentication : none username : null password : null certificate_validation : enabled proxy : enable : false proxy_type : http hostname : null port : 8080 username : null password : null ignored_addresses : [] bypass_proxy_for_local_addresses : true logging : log_level : INFO analytics : send_anonymous_usage_data : false updates : branch : master automatic : false mechanism : docker script_path : null backup : folder : Backups interval : 7 retention : 28 ui : first_day_of_week : monday week_column_header : day-first runtime_format : hours-minutes short_date_format : slash-day-first long_date_format : day-first time_format : twentyfour-hour show_relative_dates : true theme : auto enable_color_impaired_mode : false movie_info_language : english ui_language : english","title":"Dumping an existing Radarr instance configuration"},{"location":"plugins/radarr/release-notes/","text":"Release Notes (Buildarr Radarr Plugin) # v0.1.1 - 2023-09-09 # This release fixes an issue where if you have unmanaged root folders on a Buildarr instance that are not defined in Buildarr, Buildarr would print a misleading log message about it being modified in some way. These root folders are not being changed, and the logging has been improved to reflect that. Changed # Improve CLI and secrets type handling ( #5 ) Fix misleading root folder state logging ( #6 ) v0.1.0 - 2023-09-09 # First release of the Radarr plugin for Buildarr.","title":"Buildarr Radarr Plugin"},{"location":"plugins/radarr/release-notes/#release-notes-buildarr-radarr-plugin","text":"","title":"Release Notes (Buildarr Radarr Plugin)"},{"location":"plugins/radarr/release-notes/#v011-2023-09-09","text":"This release fixes an issue where if you have unmanaged root folders on a Buildarr instance that are not defined in Buildarr, Buildarr would print a misleading log message about it being modified in some way. These root folders are not being changed, and the logging has been improved to reflect that.","title":"v0.1.1 - 2023-09-09"},{"location":"plugins/radarr/release-notes/#changed","text":"Improve CLI and secrets type handling ( #5 ) Fix misleading root folder state logging ( #6 )","title":"Changed"},{"location":"plugins/radarr/release-notes/#v010-2023-09-09","text":"First release of the Radarr plugin for Buildarr.","title":"v0.1.0 - 2023-09-09"},{"location":"plugins/radarr/configuration/host/","text":"Host Configuration # By default, Buildarr will look for a single instance at http://radarr:7878 . Most configurations are different, and to accommodate those, you can configure how Buildarr connects to individual Radarr instances. Configuration of a single Radarr instance: radarr : hostname : \"radarr.example.com\" port : 7878 protocol : \"http\" settings : ... Configuration of multiple instances: radarr : # Configuration and settings common to all instances. port : 7878 settings : ... instances : # Radarr instance 1-specific configuration. radarr1 : hostname : \"radarr1.example.com\" settings : ... # Radarr instance 2-specific configuration. radarr2 : hostname : \"radarr2.example.com\" api_key : \"...\" # Explicitly define API key settings : ... hostname : NonEmptyStr = 'radarr' class-attribute instance-attribute # Hostname of the Radarr instance to connect to. When defining a single instance using the global radarr configuration block, the default hostname is radarr . When using multiple instance-specific configurations, the default hostname is the name given to the instance in the instances attribute. radarr : instances : radarr1 : # <--- This becomes the default hostname ... port : Port = 7878 class-attribute instance-attribute # Port number of the Radarr instance to connect to. protocol : RadarrProtocol = 'http' class-attribute instance-attribute # Communication protocol to use to connect to Radarr. Values: http https api_key : Optional [ ArrApiKey ] = None class-attribute instance-attribute # API key to use to authenticate with the Radarr instance. If undefined or set to null , automatically retrieve the API key. This can only be done on Radarr instances with authentication disabled. If authentication is enabled on the Radarr instance, this field is required. version : Optional [ str ] = None class-attribute instance-attribute # The expected version of the Radarr instance. If undefined or set to null , the version is auto-detected. This value is also used when generating a Docker Compose file. When undefined or set to null , the version tag will be set to latest . image : NonEmptyStr = 'lscr.io/linuxserver/radarr' class-attribute instance-attribute # The default Docker image URI to use when generating a Docker Compose file. settings : RadarrSettings = RadarrSettings () class-attribute instance-attribute # Radarr application settings. Configuration options for Radarr itself are set within this structure.","title":"Host Configuration"},{"location":"plugins/radarr/configuration/host/#host-configuration","text":"By default, Buildarr will look for a single instance at http://radarr:7878 . Most configurations are different, and to accommodate those, you can configure how Buildarr connects to individual Radarr instances. Configuration of a single Radarr instance: radarr : hostname : \"radarr.example.com\" port : 7878 protocol : \"http\" settings : ... Configuration of multiple instances: radarr : # Configuration and settings common to all instances. port : 7878 settings : ... instances : # Radarr instance 1-specific configuration. radarr1 : hostname : \"radarr1.example.com\" settings : ... # Radarr instance 2-specific configuration. radarr2 : hostname : \"radarr2.example.com\" api_key : \"...\" # Explicitly define API key settings : ...","title":"Host Configuration"},{"location":"plugins/radarr/configuration/host/#buildarr_radarr.config.RadarrInstanceConfig.hostname","text":"Hostname of the Radarr instance to connect to. When defining a single instance using the global radarr configuration block, the default hostname is radarr . When using multiple instance-specific configurations, the default hostname is the name given to the instance in the instances attribute. radarr : instances : radarr1 : # <--- This becomes the default hostname ...","title":"hostname"},{"location":"plugins/radarr/configuration/host/#buildarr_radarr.config.RadarrInstanceConfig.port","text":"Port number of the Radarr instance to connect to.","title":"port"},{"location":"plugins/radarr/configuration/host/#buildarr_radarr.config.RadarrInstanceConfig.protocol","text":"Communication protocol to use to connect to Radarr. Values: http https","title":"protocol"},{"location":"plugins/radarr/configuration/host/#buildarr_radarr.config.RadarrInstanceConfig.api_key","text":"API key to use to authenticate with the Radarr instance. If undefined or set to null , automatically retrieve the API key. This can only be done on Radarr instances with authentication disabled. If authentication is enabled on the Radarr instance, this field is required.","title":"api_key"},{"location":"plugins/radarr/configuration/host/#buildarr_radarr.config.RadarrInstanceConfig.version","text":"The expected version of the Radarr instance. If undefined or set to null , the version is auto-detected. This value is also used when generating a Docker Compose file. When undefined or set to null , the version tag will be set to latest .","title":"version"},{"location":"plugins/radarr/configuration/host/#buildarr_radarr.config.RadarrInstanceConfig.image","text":"The default Docker image URI to use when generating a Docker Compose file.","title":"image"},{"location":"plugins/radarr/configuration/host/#buildarr_radarr.config.RadarrInstanceConfig.settings","text":"Radarr application settings. Configuration options for Radarr itself are set within this structure.","title":"settings"},{"location":"plugins/radarr/configuration/settings/custom-formats/","text":"Custom Formats # Custom formats are the primary method for controlling how releases are selected and prioritised in Radarr. Criteria can be something as simple as a single preferred word, or as complex as multiple regular expressions matching for a variety of complementing media attributes, and in any case, Radarr allows you to flexibly determine how releases should be picked when managing movies. Note For more information on how to use custom formats in Radarr, refer to How to setup Quality Profiles . In Buildarr, custom formats can be configured using two different methods: importing from TRaSH-Guides , or manually definitions . radarr : settings : custom_formats : delete_unmanaged : true definitions : # Import custom formats from TRaSH-Guides. remaster : trash_id : 570bc9ebecd92723d2d21500f4be314c # `default_score` is 25, as set in the TRaSH-Guides custom format. 4k-remaster : trash_id : eca37840c13c6ef2dd0262b141a5482f default_score : 26 # Override default score from TRaSH-Guides custom format. # Manually define custom formats. br-disk : default_score : -10000 conditions : br-disk : type : quality-modifier modifier : BRDISK negate : false required : false 3d : # No `default_score` defined on manually defined custom format: default to 0. conditions : bluray-3d : type : release-title regex : '\\\\b(BluRay3D)\\\\b' negate : false required : false The following attributes determine how custom formats are managed by Buildarr. delete_unmanaged : bool = False class-attribute instance-attribute # Automatically delete custom formats not defined in Buildarr. definitions : Dict [ str , CustomFormat ] = {} class-attribute instance-attribute # Define download clients under this attribute. Quality Profiles # When using custom formats in quality profiles, they are assigned a score value to configure how releases are prioritised. radarr : settings : profiles : quality_profiles : definitions : HD : upgrades_allowed : true upgrade_until_quality : Bluray-1080p qualities : - Bluray-1080p - name : WEB 1080p members : - WEBDL-1080p - WEBRip-1080p minimum_custom_format_score : 0 upgrade_until_custom_format_score : 10000 custom_formats : # Wanted - name : remaster # No `score` defined: Use `default_score` from the custom format. - name : 4k-remaster # Unwanted - name : br-disk - name : 3d score : -10000 # Inverse of maximum allowed score, to ensure it is never selected. language : english For more information on how to use custom formats to filter and prioritise media in Buildarr, check the Quality Profiles documentation. Importing from TRaSH-Guides # TRaSH-Guides contains a large collection of pre-made custom formats , to make it easier for new users to get started with configuring Radarr correctly. Buildarr makes it even easier by providing a convenient way to automatically import these custom formats, using the trash_id attribute. Simply create a custom format with any desired name, set the corresponding trash_id attribute, and Buildarr will take care of everything. Using Buildarr daemon, these custom formats are also kept automatically up to date whenever they are changed in the guides, eliminating the need to manually check and update your configuration. ... custom_formats : delete_unmanaged : true definitions : # Import custom formats from TRaSH-Guides. remaster : trash_id : 570bc9ebecd92723d2d21500f4be314c # `default_score` is 25, as set in the TRaSH-Guides custom format. 4k-remaster : trash_id : eca37840c13c6ef2dd0262b141a5482f default_score : 26 # Override default score from TRaSH-Guides custom format. When using only the trash_id parameter, Buildarr will set the default score and all conditions using sane defaults from TRaSH-Guides. However, all aspects of a TRaSH-Guides imported custom format can be overridden using the same parameters as available in manually defining custom formats . When overriding conditions, make sure to use the same name for the condition as in the TRaSH-Guides definition. trash_id : Optional [ TrashID ] = None class-attribute instance-attribute # Trash ID of the TRaSH-Guides custom format profile to load default values from. If there is an update in the profile, the custom format conditions will be updated accordingly. If a condition that is explicitly defined on this custom format in Buildarr has the same name as a condition in the TRaSH-Guides profile, the explicitly defined condition takes precedence. Manual Definitions # If the pre-made custom formats available online are not sufficient for your needs, you can define a custom format completely manually in Buildarr, using the following syntax. ... custom_formats : delete_unmanaged : true definitions : br-disk : default_score : -10000 conditions : br-disk : type : quality-modifier modifier : BRDISK negate : false required : false 3d : # No `default_score` defined on manually defined custom format: default to 0. include_when_renaming : true # Set to false by default. delete_unmanaged_conditions : false # Set to true by default, and should be most of the time. conditions : bluray-3d : type : release-title regex : '\\\\b(BluRay3D)\\\\b' negate : false required : false default_score : Optional [ int ] = None class-attribute instance-attribute # The default score assigned to this custom format when it is assigned to a quality profile. If this attribute is explicitly defined on the custom format, the defined value will always be used as the default score. If default_score is not defined, the default value used by Buildarr depends on the type of custom format: If this is a custom format imported from a Trash ID, this will default to the default score TRaSH-Guides has assigned this custom format ( trash_score in the metadata). If the custom format does not have a default score defined, the default score will be 0. If this is a manually defined custom format, the default score will be 0. include_when_renaming : bool = False class-attribute instance-attribute # Make the custom format available in the {Custom Formats} template when renaming media titles. delete_unmanaged_conditions : bool = True class-attribute instance-attribute # Delete conditions defined on this custom format on the remote instance not managed by Buildarr. It is recommended to keep this option enabled, particularly for custom formats imported from TRaSH-Guides. conditions : Dict [ str , Annotated [ ConditionType , Field ( discriminator = 'type' )]] = {} class-attribute instance-attribute # A list of conditions that will cause the custom format to be applied to a release if matches are found. By default, only one of the defined conditions need to match for the custom format to be applied. If one or more conditions have required set to true , those conditions must all match in order for the custom format to be applied. The following sections document the custom format condition types available for use in Buildarr. Edition # Custom format condition for matching based on media edition. ... custom_formats : definitions : edition : default_score : 0 conditions : extended-edition : type : edition regex : '(?<!^|{)\\\\b(extended|uncut|directors|special|unrated|uncensored|cut|version|edition)(\\\\b|\\\\d)' negate : false required : false type : Literal [ 'edition' ] = 'edition' class-attribute instance-attribute # Buildarr type keyword associated with this condition type. regex : NonEmptyStr instance-attribute # The regular expression to use to match editions to the custom format. Regular expression matching is case-insensitive. negate : bool = False class-attribute instance-attribute # When set to true , negates the condition on the custom format. If a condition with this field set to true matches, the custom format will not apply to the media. required : bool = False class-attribute instance-attribute # When set to true , this condition must match in order for the custom format to apply to media. If this field is false on all conditions in a custom format, it will apply if any one of the defined conditions match. Indexer Flag # Custom format condition for matching based on indexer flags. ... custom_formats : definitions : indexer-flags : default_score : 0 conditions : freeleech : type : indexer-flag flag : g-freeleech negate : false required : false type : Literal [ 'indexer-flag' , 'indexer_flag' , 'indexerflag' ] = 'indexer-flag' class-attribute instance-attribute # Buildarr type keywords associated with this condition type. flag : NonEmptyStr instance-attribute # The indexer flag to match against. All values supported by your Radarr instance version can be defined. As of Radarr v4.7.5, the following flags are available: g-freeleech g-halfleech g-doubleupload ptp-golden ptp-approved hdb-internal ahd-internal g-scene g-freeleech75 g-freeleech25 ahd-userrelease negate : bool = False class-attribute instance-attribute # When set to true , negates the condition on the custom format. If a condition with this field set to true matches, the custom format will not apply to the media. required : bool = False class-attribute instance-attribute # When set to true , this condition must match in order for the custom format to apply to media. If this field is false on all conditions in a custom format, it will apply if any one of the defined conditions match. Language # Custom format condition for matching based on language. ... custom_formats : definitions : english : default_score : 20 conditions : english : type : language language : english negate : false required : false japanese : default_score : 10 conditions : japanese : type : language language : japanese negate : false required : false portuguese : default_score : 0 conditions : portuguese : type : language language : portuguese negate : false required : false portuguese-brazil : type : language language : portuguese-brazil negate : false required : false type : Literal [ 'language' ] = 'language' class-attribute instance-attribute # Buildarr type keyword associated with this condition type. language : NonEmptyStr instance-attribute # The language to match against, written in English. Use the any keyword to match any language. Use the original keyword to match for the original language of the media. All languages supported by your Radarr instance version can be defined in this condition. Examples: english portuguese-brazil negate : bool = False class-attribute instance-attribute # When set to true , negates the condition on the custom format. If a condition with this field set to true matches, the custom format will not apply to the media. required : bool = False class-attribute instance-attribute # When set to true , this condition must match in order for the custom format to apply to media. If this field is false on all conditions in a custom format, it will apply if any one of the defined conditions match. Quality Modifier # Custom format condition for matching based on quality modifiers. ... custom_formats : definitions : br-disk : default_score : -10000 conditions : br-disk : type : quality-modifier modifier : BRDISK negate : false required : false type : Literal [ 'quality-modifier' , 'quality_modifier' , 'qualitymodifier' , 'quality' ] = 'quality-modifier' class-attribute instance-attribute # Buildarr type keywords associated with this condition type. modifier : UpperCaseNonEmptyStr instance-attribute # The modifier to match against. All values supported by your Radarr instance version can be defined. As of Radarr v4.7.5, the following modifiers are available: NONE REGIONAL SCREENER RAWHD BRDISK REMUX negate : bool = False class-attribute instance-attribute # When set to true , negates the condition on the custom format. If a condition with this field set to true matches, the custom format will not apply to the media. required : bool = False class-attribute instance-attribute # When set to true , this condition must match in order for the custom format to apply to media. If this field is false on all conditions in a custom format, it will apply if any one of the defined conditions match. Release Group # Custom format condition for matching based on release group. ... custom_formats : definitions : release-groups : default_score : 1800 conditions : chotab : type : release-group regex : '^(Chotab)$' negate : false required : false ctrlhd : type : release-group regex : '^(CtrlHD)$' negate : false required : false type : Literal [ 'release-group' , 'release_group' , 'releasegroup' ] = 'release-group' class-attribute instance-attribute # Buildarr type keywords associated with this condition type. regex : NonEmptyStr instance-attribute # The regular expression to use to match release groups to the custom format. Regular expression matching is case-insensitive. negate : bool = False class-attribute instance-attribute # When set to true , negates the condition on the custom format. If a condition with this field set to true matches, the custom format will not apply to the media. required : bool = False class-attribute instance-attribute # When set to true , this condition must match in order for the custom format to apply to media. If this field is false on all conditions in a custom format, it will apply if any one of the defined conditions match. Release Title # Custom format condition for matching based on release title contents. ... custom_formats : definitions : anime-groups : default_score : 500 conditions : asakura : type : release-title regex : '\\\\[Asakura\\\\]|-Asakura\\\\b' negate : false required : false tenshi : type : release-title regex : '\\\\[tenshi\\\\]|-tenshi\\\\b' negate : false required : false type : Literal [ 'release-title' , 'release_title' , 'releasetitle' ] = 'release-title' class-attribute instance-attribute # Buildarr type keywords associated with this condition type. regex : Optional [ str ] = None class-attribute instance-attribute # The regular expression to use to match release titles to the custom format. Regular expression matching is case-insensitive. negate : bool = False class-attribute instance-attribute # When set to true , negates the condition on the custom format. If a condition with this field set to true matches, the custom format will not apply to the media. required : bool = False class-attribute instance-attribute # When set to true , this condition must match in order for the custom format to apply to media. If this field is false on all conditions in a custom format, it will apply if any one of the defined conditions match. Resolution # Custom format condition for matching based on media resolution. ... custom_formats : definitions : 1080p : default_score : 1000 conditions : chotab : type : resolution resolution : r1080p negate : false required : false 4k : default_score : -10000 conditions : ctrlhd : type : resoltuion resolution : r2160p negate : false required : false type : Literal [ 'resolution' ] = 'resolution' class-attribute instance-attribute # Buildarr type keyword associated with this condition type. resolution : LowerCaseNonEmptyStr instance-attribute # The resolution to match against. All values supported by your Radarr instance version can be defined. As of Radarr v4.7.5, the following resolutions are available: r360p (360p) r480p (480p) r576p (576p) r720p (720p) r1080p (1080p HD) r2160p (2160p Ultra-HD) negate : bool = False class-attribute instance-attribute # When set to true , negates the condition on the custom format. If a condition with this field set to true matches, the custom format will not apply to the media. required : bool = False class-attribute instance-attribute # When set to true , this condition must match in order for the custom format to apply to media. If this field is false on all conditions in a custom format, it will apply if any one of the defined conditions match. Size # Custom format condition for matching based on media file size. ... custom_formats : definitions : allowed-size : default_score : 1000 conditions : allowed-size : type : size min : 10 # GB max : 20 # GB negate : false required : false type : Literal [ 'size' ] = 'size' class-attribute instance-attribute # Buildarr type keyword associated with this condition type. min : int = Field ( 0 , ge = 0 ) class-attribute instance-attribute # The minimum size, in gigabytes (GB). In order to match, the media must be larger than this size. max : int = Field ( 1 , ge = 1 ) class-attribute instance-attribute # The maximum size, in gigabytes (GB). In order to match, the media must be smaller than, or equal to, this size. negate : bool = False class-attribute instance-attribute # When set to true , negates the condition on the custom format. If a condition with this field set to true matches, the custom format will not apply to the media. required : bool = False class-attribute instance-attribute # When set to true , this condition must match in order for the custom format to apply to media. If this field is false on all conditions in a custom format, it will apply if any one of the defined conditions match. Source # Custom format condition for matching based on media source type. ... custom_formats : definitions : allowed-sources : default_score : 0 conditions : blu-ray : type : source source : BLURAY negate : false required : true type : Literal [ 'source' ] = 'source' class-attribute instance-attribute # Buildarr type keyword associated with this condition type. source : UpperCaseNonEmptyStr instance-attribute # The source type to match against. All values supported by your Radarr instance version can be defined. As of Radarr v4.7.5, the following source types are available: UNKNOWN CAM TELESYNC TELECINE WORKPRINT DVD TV WEBDL WEBRIP BLURAY negate : bool = False class-attribute instance-attribute # When set to true , negates the condition on the custom format. If a condition with this field set to true matches, the custom format will not apply to the media. required : bool = False class-attribute instance-attribute # When set to true , this condition must match in order for the custom format to apply to media. If this field is false on all conditions in a custom format, it will apply if any one of the defined conditions match.","title":"Custom Formats"},{"location":"plugins/radarr/configuration/settings/custom-formats/#custom-formats","text":"Custom formats are the primary method for controlling how releases are selected and prioritised in Radarr. Criteria can be something as simple as a single preferred word, or as complex as multiple regular expressions matching for a variety of complementing media attributes, and in any case, Radarr allows you to flexibly determine how releases should be picked when managing movies. Note For more information on how to use custom formats in Radarr, refer to How to setup Quality Profiles . In Buildarr, custom formats can be configured using two different methods: importing from TRaSH-Guides , or manually definitions . radarr : settings : custom_formats : delete_unmanaged : true definitions : # Import custom formats from TRaSH-Guides. remaster : trash_id : 570bc9ebecd92723d2d21500f4be314c # `default_score` is 25, as set in the TRaSH-Guides custom format. 4k-remaster : trash_id : eca37840c13c6ef2dd0262b141a5482f default_score : 26 # Override default score from TRaSH-Guides custom format. # Manually define custom formats. br-disk : default_score : -10000 conditions : br-disk : type : quality-modifier modifier : BRDISK negate : false required : false 3d : # No `default_score` defined on manually defined custom format: default to 0. conditions : bluray-3d : type : release-title regex : '\\\\b(BluRay3D)\\\\b' negate : false required : false The following attributes determine how custom formats are managed by Buildarr.","title":"Custom Formats"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.RadarrCustomFormatsSettings.delete_unmanaged","text":"Automatically delete custom formats not defined in Buildarr.","title":"delete_unmanaged"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.RadarrCustomFormatsSettings.definitions","text":"Define download clients under this attribute.","title":"definitions"},{"location":"plugins/radarr/configuration/settings/custom-formats/#quality-profiles","text":"When using custom formats in quality profiles, they are assigned a score value to configure how releases are prioritised. radarr : settings : profiles : quality_profiles : definitions : HD : upgrades_allowed : true upgrade_until_quality : Bluray-1080p qualities : - Bluray-1080p - name : WEB 1080p members : - WEBDL-1080p - WEBRip-1080p minimum_custom_format_score : 0 upgrade_until_custom_format_score : 10000 custom_formats : # Wanted - name : remaster # No `score` defined: Use `default_score` from the custom format. - name : 4k-remaster # Unwanted - name : br-disk - name : 3d score : -10000 # Inverse of maximum allowed score, to ensure it is never selected. language : english For more information on how to use custom formats to filter and prioritise media in Buildarr, check the Quality Profiles documentation.","title":"Quality Profiles"},{"location":"plugins/radarr/configuration/settings/custom-formats/#importing-from-trash-guides","text":"TRaSH-Guides contains a large collection of pre-made custom formats , to make it easier for new users to get started with configuring Radarr correctly. Buildarr makes it even easier by providing a convenient way to automatically import these custom formats, using the trash_id attribute. Simply create a custom format with any desired name, set the corresponding trash_id attribute, and Buildarr will take care of everything. Using Buildarr daemon, these custom formats are also kept automatically up to date whenever they are changed in the guides, eliminating the need to manually check and update your configuration. ... custom_formats : delete_unmanaged : true definitions : # Import custom formats from TRaSH-Guides. remaster : trash_id : 570bc9ebecd92723d2d21500f4be314c # `default_score` is 25, as set in the TRaSH-Guides custom format. 4k-remaster : trash_id : eca37840c13c6ef2dd0262b141a5482f default_score : 26 # Override default score from TRaSH-Guides custom format. When using only the trash_id parameter, Buildarr will set the default score and all conditions using sane defaults from TRaSH-Guides. However, all aspects of a TRaSH-Guides imported custom format can be overridden using the same parameters as available in manually defining custom formats . When overriding conditions, make sure to use the same name for the condition as in the TRaSH-Guides definition.","title":"Importing from TRaSH-Guides"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.custom_format.CustomFormat.trash_id","text":"Trash ID of the TRaSH-Guides custom format profile to load default values from. If there is an update in the profile, the custom format conditions will be updated accordingly. If a condition that is explicitly defined on this custom format in Buildarr has the same name as a condition in the TRaSH-Guides profile, the explicitly defined condition takes precedence.","title":"trash_id"},{"location":"plugins/radarr/configuration/settings/custom-formats/#manual-definitions","text":"If the pre-made custom formats available online are not sufficient for your needs, you can define a custom format completely manually in Buildarr, using the following syntax. ... custom_formats : delete_unmanaged : true definitions : br-disk : default_score : -10000 conditions : br-disk : type : quality-modifier modifier : BRDISK negate : false required : false 3d : # No `default_score` defined on manually defined custom format: default to 0. include_when_renaming : true # Set to false by default. delete_unmanaged_conditions : false # Set to true by default, and should be most of the time. conditions : bluray-3d : type : release-title regex : '\\\\b(BluRay3D)\\\\b' negate : false required : false","title":"Manual Definitions"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.custom_format.CustomFormat.default_score","text":"The default score assigned to this custom format when it is assigned to a quality profile. If this attribute is explicitly defined on the custom format, the defined value will always be used as the default score. If default_score is not defined, the default value used by Buildarr depends on the type of custom format: If this is a custom format imported from a Trash ID, this will default to the default score TRaSH-Guides has assigned this custom format ( trash_score in the metadata). If the custom format does not have a default score defined, the default score will be 0. If this is a manually defined custom format, the default score will be 0.","title":"default_score"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.custom_format.CustomFormat.include_when_renaming","text":"Make the custom format available in the {Custom Formats} template when renaming media titles.","title":"include_when_renaming"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.custom_format.CustomFormat.delete_unmanaged_conditions","text":"Delete conditions defined on this custom format on the remote instance not managed by Buildarr. It is recommended to keep this option enabled, particularly for custom formats imported from TRaSH-Guides.","title":"delete_unmanaged_conditions"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.custom_format.CustomFormat.conditions","text":"A list of conditions that will cause the custom format to be applied to a release if matches are found. By default, only one of the defined conditions need to match for the custom format to be applied. If one or more conditions have required set to true , those conditions must all match in order for the custom format to be applied. The following sections document the custom format condition types available for use in Buildarr.","title":"conditions"},{"location":"plugins/radarr/configuration/settings/custom-formats/#edition","text":"Custom format condition for matching based on media edition. ... custom_formats : definitions : edition : default_score : 0 conditions : extended-edition : type : edition regex : '(?<!^|{)\\\\b(extended|uncut|directors|special|unrated|uncensored|cut|version|edition)(\\\\b|\\\\d)' negate : false required : false","title":"Edition"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.edition.EditionCondition.type","text":"Buildarr type keyword associated with this condition type.","title":"type"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.edition.EditionCondition.regex","text":"The regular expression to use to match editions to the custom format. Regular expression matching is case-insensitive.","title":"regex"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.base.Condition.negate","text":"When set to true , negates the condition on the custom format. If a condition with this field set to true matches, the custom format will not apply to the media.","title":"negate"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.base.Condition.required","text":"When set to true , this condition must match in order for the custom format to apply to media. If this field is false on all conditions in a custom format, it will apply if any one of the defined conditions match.","title":"required"},{"location":"plugins/radarr/configuration/settings/custom-formats/#indexer-flag","text":"Custom format condition for matching based on indexer flags. ... custom_formats : definitions : indexer-flags : default_score : 0 conditions : freeleech : type : indexer-flag flag : g-freeleech negate : false required : false","title":"Indexer Flag"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.indexer_flag.IndexerFlagCondition.type","text":"Buildarr type keywords associated with this condition type.","title":"type"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.indexer_flag.IndexerFlagCondition.flag","text":"The indexer flag to match against. All values supported by your Radarr instance version can be defined. As of Radarr v4.7.5, the following flags are available: g-freeleech g-halfleech g-doubleupload ptp-golden ptp-approved hdb-internal ahd-internal g-scene g-freeleech75 g-freeleech25 ahd-userrelease","title":"flag"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.base.Condition.negate","text":"When set to true , negates the condition on the custom format. If a condition with this field set to true matches, the custom format will not apply to the media.","title":"negate"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.base.Condition.required","text":"When set to true , this condition must match in order for the custom format to apply to media. If this field is false on all conditions in a custom format, it will apply if any one of the defined conditions match.","title":"required"},{"location":"plugins/radarr/configuration/settings/custom-formats/#language","text":"Custom format condition for matching based on language. ... custom_formats : definitions : english : default_score : 20 conditions : english : type : language language : english negate : false required : false japanese : default_score : 10 conditions : japanese : type : language language : japanese negate : false required : false portuguese : default_score : 0 conditions : portuguese : type : language language : portuguese negate : false required : false portuguese-brazil : type : language language : portuguese-brazil negate : false required : false","title":"Language"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.language.LanguageCondition.type","text":"Buildarr type keyword associated with this condition type.","title":"type"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.language.LanguageCondition.language","text":"The language to match against, written in English. Use the any keyword to match any language. Use the original keyword to match for the original language of the media. All languages supported by your Radarr instance version can be defined in this condition. Examples: english portuguese-brazil","title":"language"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.base.Condition.negate","text":"When set to true , negates the condition on the custom format. If a condition with this field set to true matches, the custom format will not apply to the media.","title":"negate"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.base.Condition.required","text":"When set to true , this condition must match in order for the custom format to apply to media. If this field is false on all conditions in a custom format, it will apply if any one of the defined conditions match.","title":"required"},{"location":"plugins/radarr/configuration/settings/custom-formats/#quality-modifier","text":"Custom format condition for matching based on quality modifiers. ... custom_formats : definitions : br-disk : default_score : -10000 conditions : br-disk : type : quality-modifier modifier : BRDISK negate : false required : false","title":"Quality Modifier"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.quality_modifier.QualityModifierCondition.type","text":"Buildarr type keywords associated with this condition type.","title":"type"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.quality_modifier.QualityModifierCondition.modifier","text":"The modifier to match against. All values supported by your Radarr instance version can be defined. As of Radarr v4.7.5, the following modifiers are available: NONE REGIONAL SCREENER RAWHD BRDISK REMUX","title":"modifier"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.base.Condition.negate","text":"When set to true , negates the condition on the custom format. If a condition with this field set to true matches, the custom format will not apply to the media.","title":"negate"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.base.Condition.required","text":"When set to true , this condition must match in order for the custom format to apply to media. If this field is false on all conditions in a custom format, it will apply if any one of the defined conditions match.","title":"required"},{"location":"plugins/radarr/configuration/settings/custom-formats/#release-group","text":"Custom format condition for matching based on release group. ... custom_formats : definitions : release-groups : default_score : 1800 conditions : chotab : type : release-group regex : '^(Chotab)$' negate : false required : false ctrlhd : type : release-group regex : '^(CtrlHD)$' negate : false required : false","title":"Release Group"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.release_group.ReleaseGroupCondition.type","text":"Buildarr type keywords associated with this condition type.","title":"type"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.release_group.ReleaseGroupCondition.regex","text":"The regular expression to use to match release groups to the custom format. Regular expression matching is case-insensitive.","title":"regex"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.base.Condition.negate","text":"When set to true , negates the condition on the custom format. If a condition with this field set to true matches, the custom format will not apply to the media.","title":"negate"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.base.Condition.required","text":"When set to true , this condition must match in order for the custom format to apply to media. If this field is false on all conditions in a custom format, it will apply if any one of the defined conditions match.","title":"required"},{"location":"plugins/radarr/configuration/settings/custom-formats/#release-title","text":"Custom format condition for matching based on release title contents. ... custom_formats : definitions : anime-groups : default_score : 500 conditions : asakura : type : release-title regex : '\\\\[Asakura\\\\]|-Asakura\\\\b' negate : false required : false tenshi : type : release-title regex : '\\\\[tenshi\\\\]|-tenshi\\\\b' negate : false required : false","title":"Release Title"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.release_title.ReleaseTitleCondition.type","text":"Buildarr type keywords associated with this condition type.","title":"type"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.release_title.ReleaseTitleCondition.regex","text":"The regular expression to use to match release titles to the custom format. Regular expression matching is case-insensitive.","title":"regex"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.base.Condition.negate","text":"When set to true , negates the condition on the custom format. If a condition with this field set to true matches, the custom format will not apply to the media.","title":"negate"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.base.Condition.required","text":"When set to true , this condition must match in order for the custom format to apply to media. If this field is false on all conditions in a custom format, it will apply if any one of the defined conditions match.","title":"required"},{"location":"plugins/radarr/configuration/settings/custom-formats/#resolution","text":"Custom format condition for matching based on media resolution. ... custom_formats : definitions : 1080p : default_score : 1000 conditions : chotab : type : resolution resolution : r1080p negate : false required : false 4k : default_score : -10000 conditions : ctrlhd : type : resoltuion resolution : r2160p negate : false required : false","title":"Resolution"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.resolution.ResolutionCondition.type","text":"Buildarr type keyword associated with this condition type.","title":"type"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.resolution.ResolutionCondition.resolution","text":"The resolution to match against. All values supported by your Radarr instance version can be defined. As of Radarr v4.7.5, the following resolutions are available: r360p (360p) r480p (480p) r576p (576p) r720p (720p) r1080p (1080p HD) r2160p (2160p Ultra-HD)","title":"resolution"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.base.Condition.negate","text":"When set to true , negates the condition on the custom format. If a condition with this field set to true matches, the custom format will not apply to the media.","title":"negate"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.base.Condition.required","text":"When set to true , this condition must match in order for the custom format to apply to media. If this field is false on all conditions in a custom format, it will apply if any one of the defined conditions match.","title":"required"},{"location":"plugins/radarr/configuration/settings/custom-formats/#size","text":"Custom format condition for matching based on media file size. ... custom_formats : definitions : allowed-size : default_score : 1000 conditions : allowed-size : type : size min : 10 # GB max : 20 # GB negate : false required : false","title":"Size"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.size.SizeCondition.type","text":"Buildarr type keyword associated with this condition type.","title":"type"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.size.SizeCondition.min","text":"The minimum size, in gigabytes (GB). In order to match, the media must be larger than this size.","title":"min"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.size.SizeCondition.max","text":"The maximum size, in gigabytes (GB). In order to match, the media must be smaller than, or equal to, this size.","title":"max"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.base.Condition.negate","text":"When set to true , negates the condition on the custom format. If a condition with this field set to true matches, the custom format will not apply to the media.","title":"negate"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.base.Condition.required","text":"When set to true , this condition must match in order for the custom format to apply to media. If this field is false on all conditions in a custom format, it will apply if any one of the defined conditions match.","title":"required"},{"location":"plugins/radarr/configuration/settings/custom-formats/#source","text":"Custom format condition for matching based on media source type. ... custom_formats : definitions : allowed-sources : default_score : 0 conditions : blu-ray : type : source source : BLURAY negate : false required : true","title":"Source"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.source.SourceCondition.type","text":"Buildarr type keyword associated with this condition type.","title":"type"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.source.SourceCondition.source","text":"The source type to match against. All values supported by your Radarr instance version can be defined. As of Radarr v4.7.5, the following source types are available: UNKNOWN CAM TELESYNC TELECINE WORKPRINT DVD TV WEBDL WEBRIP BLURAY","title":"source"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.base.Condition.negate","text":"When set to true , negates the condition on the custom format. If a condition with this field set to true matches, the custom format will not apply to the media.","title":"negate"},{"location":"plugins/radarr/configuration/settings/custom-formats/#buildarr_radarr.config.settings.custom_formats.conditions.base.Condition.required","text":"When set to true , this condition must match in order for the custom format to apply to media. If this field is false on all conditions in a custom format, it will apply if any one of the defined conditions match.","title":"required"},{"location":"plugins/radarr/configuration/settings/download-clients/","text":"Download Clients # Radarr is linked to one or more download clients to actually handle downloading releases that have been grabbed from indexers. There are two types of download clients: Usenet clients, which grab releases from Usenet indexers, and torrent download clients, which download (and subsequently seed) releases using the BitTorrent P2P protocol. --- radarr : settings : download_clients : delete_unmanaged : true definitions : Transmission : # Name of the download client type : transmission # Type of download client enable : true # Enable the download client in Radarr host : transmission port : 9091 category : radarr # Define any other type-specific or global # download client attributes as needed. ... In Buildarr, download clients are defined using a dictionary structure, as shown above. The following parameters control how Buildarr configures download clients on Radarr instances. delete_unmanaged : bool = False class-attribute instance-attribute # Automatically delete download clients not defined in Buildarr. definitions : Dict [ str , Annotated [ DownloadClientType , Field ( discriminator = 'type' )]] = {} class-attribute instance-attribute # Define download clients under this attribute. Aria2 # Download client for torrent releases using the Aria2 download utility. type : Literal [ 'aria2' ] = 'aria2' class-attribute instance-attribute # Type value associated with this kind of download client. enable : bool = True class-attribute instance-attribute # When True , this download client is active and Radarr is able to send requests to it. hostname : NonEmptyStr instance-attribute # Aria2 host name. port : Port = 6800 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. rpc_path : NonEmptyStr = '/rpc' class-attribute instance-attribute # XML RPC path in the Aria2 client URL. secret_token : Password instance-attribute # Secret token to use to authenticate with the download client. remove_completed_downloads : bool = True class-attribute instance-attribute # When set to true , remove completed downloads from the download client history. remove_failed_downloads : bool = True class-attribute instance-attribute # When set to true , remove failed downloads from the download client history. priority : PositiveInt = 1 class-attribute instance-attribute # Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client. Deluge # Download client for torrent releases using the Deluge torrent client. type : Literal [ 'deluge' ] = 'deluge' class-attribute instance-attribute # Type value associated with this kind of download client. enable : bool = True class-attribute instance-attribute # When True , this download client is active and Radarr is able to send requests to it. hostname : NonEmptyStr instance-attribute # Deluge host name. port : Port = 8112 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : Optional [ str ] = None class-attribute instance-attribute # Adds a prefix to the Deluge JSON URL, e.g. http://[host]:[port]/[url_base]/json . password : Password instance-attribute # Password to use to authenticate the download client user. category : Optional [ str ] = 'radarr' class-attribute instance-attribute # Associate media from Radarr with a category. Adding a category specific to Radarr avoids conflicts with unrelated non-Radarr downloads. Using a category is optional, but strongly recommended. recent_priority : DelugePriority = DelugePriority . last class-attribute instance-attribute # Priority to use when grabbing media that released within the last 14 days. Values: last first older_priority : DelugePriority = DelugePriority . last class-attribute instance-attribute # Priority to use when grabbing media that released within over 14 days ago. Values: last first add_paused : bool = False class-attribute instance-attribute # When set to true , add releases to the download client in paused state. remove_completed_downloads : bool = True class-attribute instance-attribute # When set to true , remove completed downloads from the download client history. remove_failed_downloads : bool = True class-attribute instance-attribute # When set to true , remove failed downloads from the download client history. priority : PositiveInt = 1 class-attribute instance-attribute # Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client. Download Station (Torrent) # Download client for torrent releases using the Download Station download utility. type : Literal [ 'downloadstation-torrent' ] = 'downloadstation-torrent' class-attribute instance-attribute # Type value associated with this kind of download client. enable : bool = True class-attribute instance-attribute # When True , this download client is active and Radarr is able to send requests to it. hostname : NonEmptyStr instance-attribute # Download Station host name. port : Port = 5000 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. username : NonEmptyStr instance-attribute # User name to use when authenticating with the download client. password : Password instance-attribute # Password to use to authenticate the download client user. category : Optional [ str ] = None class-attribute instance-attribute # Associate media from Radarr with a category. Creates a [category] subdirectory in the output directory. Adding a category specific to Radarr avoids conflicts with unrelated non-Radarr downloads. Using a category is optional, but strongly recommended. directory : Optional [ str ] = None class-attribute instance-attribute # Optional shared folder to put downloads into. Leave blank, set to null or undefined to use the default download client location. remove_completed_downloads : bool = True class-attribute instance-attribute # When set to true , remove completed downloads from the download client history. remove_failed_downloads : bool = True class-attribute instance-attribute # When set to true , remove failed downloads from the download client history. priority : PositiveInt = 1 class-attribute instance-attribute # Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client. Download Station (Usenet) # Download client for Usenet releases using the Download Station download utility. type : Literal [ 'downloadstation-usenet' ] = 'downloadstation-usenet' class-attribute instance-attribute # Type value associated with this kind of download client. enable : bool = True class-attribute instance-attribute # When True , this download client is active and Radarr is able to send requests to it. hostname : NonEmptyStr instance-attribute # Download Station host name. port : Port = 5000 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. username : NonEmptyStr instance-attribute # User name to use when authenticating with the download client. password : Password instance-attribute # Password to use to authenticate the download client user. category : Optional [ str ] = None class-attribute instance-attribute # Associate media from Radarr with a category. Creates a [category] subdirectory in the output directory. Adding a category specific to Radarr avoids conflicts with unrelated non-Radarr downloads. Using a category is optional, but strongly recommended. directory : Optional [ str ] = None class-attribute instance-attribute # Optional shared folder to put downloads into. Leave blank, set to null or undefined to use the default download client location. remove_completed_downloads : bool = True class-attribute instance-attribute # When set to true , remove completed downloads from the download client history. remove_failed_downloads : bool = True class-attribute instance-attribute # When set to true , remove failed downloads from the download client history. priority : PositiveInt = 1 class-attribute instance-attribute # Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client. Flood # Download client for torrent releases using the Flood torrent client. Flood download client. type : Literal [ 'flood' ] = 'flood' class-attribute instance-attribute # Type value associated with this kind of download client. enable : bool = True class-attribute instance-attribute # When True , this download client is active and Radarr is able to send requests to it. Flood download client. hostname : NonEmptyStr instance-attribute # Flood host name. port : Port = 3000 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : Optional [ str ] = None class-attribute instance-attribute # Optionally adds a prefix to Flood API, such as [protocol]://[host]:[port]/[url_base]api . username : NonEmptyStr instance-attribute # User name to use when authenticating with the download client. password : Password instance-attribute # Password to use to authenticate the download client user. destination : Optional [ str ] = None class-attribute instance-attribute # Manually specified download destination. flood_tags : Set [ NonEmptyStr ] = { 'radarr' } class-attribute instance-attribute # Initial tags of a download within Flood. To be recognized, a download must have all initial tags. This avoids conflicts with unrelated downloads. additional_tags : Set [ FloodMediaTag ] = set () class-attribute instance-attribute # Adds properties of media as tags within Flood. Multiple can be specified at a time. Values: collection quality languages release-group year indexer studio add_paused : bool = False class-attribute instance-attribute # Add media to the download client in the Paused state. remove_completed_downloads : bool = True class-attribute instance-attribute # When set to true , remove completed downloads from the download client history. remove_failed_downloads : bool = True class-attribute instance-attribute # When set to true , remove failed downloads from the download client history. priority : PositiveInt = 1 class-attribute instance-attribute # Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client. Freebox # Download client for torrent releases using a Freebox instance. type : Literal [ 'freebox' ] = 'freebox' class-attribute instance-attribute # Type value associated with this kind of download client. enable : bool = True class-attribute instance-attribute # When True , this download client is active and Radarr is able to send requests to it. port : Port = 443 class-attribute instance-attribute # Freebox access port. Set to the HTTPS default port as Freebox uses HTTPS by default. use_ssl : bool = True class-attribute instance-attribute # Use a secure connection when connecting to the Freebox API. api_url : NonEmptyStr = '/api/v1' class-attribute instance-attribute # Define Freebox API base URL with API version, e.g. http[s]://<host>:<port>/<api_url>/ . app_id : NonEmptyStr instance-attribute # App ID used to authenticate with the Freebox. app_token : Password instance-attribute # Unique token used to authenticate with the Freebox. destination_directory : Optional [ str ] = None class-attribute instance-attribute # Optional location to put downloads in, on the Freebox node. Leave blank, undefined or set to null to use the default Freebox download location. category : Optional [ str ] = None class-attribute instance-attribute # Default category to classify downloads under if no category mappings apply to it. This will create a [category] subdirectory in the output directory. Adding a category specific to Radarr avoids conflicts with unrelated non-Radarr downloads. recent_priority : FreeboxPriority = FreeboxPriority . last class-attribute instance-attribute # Priority to use when grabbing media that released within the last 14 days. older_priority : FreeboxPriority = FreeboxPriority . last class-attribute instance-attribute # Priority to use when grabbing media that released over 14 days ago. add_paused : bool = False class-attribute instance-attribute # Add media to the download client in the Paused state. remove_completed_downloads : bool = True class-attribute instance-attribute # When set to true , remove completed downloads from the download client history. remove_failed_downloads : bool = True class-attribute instance-attribute # When set to true , remove failed downloads from the download client history. priority : PositiveInt = 1 class-attribute instance-attribute # Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client. Hadouken # Download client for torrent releases using the Hadouken torrent client. type : Literal [ 'hadouken' ] = 'hadouken' class-attribute instance-attribute # Type value associated with this kind of download client. enable : bool = True class-attribute instance-attribute # When True , this download client is active and Radarr is able to send requests to it. hostname : NonEmptyStr instance-attribute # Hadouken host name. port : Port = 7070 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : Optional [ str ] = None class-attribute instance-attribute # Adds a prefix to the Hadouken url, e.g. http://[host]:[port]/[url_base]/api . username : NonEmptyStr instance-attribute # User name to use when authenticating with the download client. password : Password instance-attribute # Password to use to authenticate the download client user. category : NonEmptyStr = 'radarr' class-attribute instance-attribute # Associate media from Radarr with a category. Adding a category specific to Radarr avoids conflicts with unrelated non-Radarr downloads. Using a category is optional, but strongly recommended. remove_completed_downloads : bool = True class-attribute instance-attribute # When set to true , remove completed downloads from the download client history. remove_failed_downloads : bool = True class-attribute instance-attribute # When set to true , remove failed downloads from the download client history. priority : PositiveInt = 1 class-attribute instance-attribute # Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client. NZBGet # Download client for Usenet releases using the NZBGet Usenet client. type : Literal [ 'nzbget' ] = 'nzbget' class-attribute instance-attribute # Type value associated with this kind of download client. enable : bool = True class-attribute instance-attribute # When True , this download client is active and Radarr is able to send requests to it. hostname : NonEmptyStr instance-attribute # NZBGet host name. port : Port = 5000 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : Optional [ str ] = None class-attribute instance-attribute # Adds a prefix to the NZBGet url, e.g. http://[host]:[port]/[url_base]/jsonrpc . username : NonEmptyStr instance-attribute # User name to use when authenticating with the download client. password : Password instance-attribute # Password to use to authenticate the download client user. category : Optional [ str ] = None class-attribute instance-attribute # Associate media from Radarr with a category. Adding a category specific to Radarr avoids conflicts with unrelated non-Radarr downloads. Using a category is optional, but strongly recommended. recent_priority : NzbgetPriority = NzbgetPriority . normal class-attribute instance-attribute # Priority to use when grabbing media that released within the last 21 days. Values: verylow low normal high veryhigh force older_priority : NzbgetPriority = NzbgetPriority . normal class-attribute instance-attribute # Priority to use when grabbing media that released over 21 days ago. Values: verylow low normal high veryhigh force add_paused : bool = False class-attribute instance-attribute # Add media to the download client in the paused state. This option requires NZBGet version 16.0 or later. remove_completed_downloads : bool = True class-attribute instance-attribute # When set to true , remove completed downloads from the download client history. remove_failed_downloads : bool = True class-attribute instance-attribute # When set to true , remove failed downloads from the download client history. priority : PositiveInt = 1 class-attribute instance-attribute # Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client. NZBVortex # Download client for Usenet releases using the NZBVortex Usenet client. type : Literal [ 'nzbvortex' ] = 'nzbvortex' class-attribute instance-attribute # Type value associated with this kind of download client. enable : bool = True class-attribute instance-attribute # When True , this download client is active and Radarr is able to send requests to it. hostname : NonEmptyStr instance-attribute # NZBVortex host name. port : Port = 4321 class-attribute instance-attribute # Download client access port. url_base : Optional [ str ] = None class-attribute instance-attribute # Adds a prefix to the NZBVortex url, e.g. http://[host]:[port]/[url_base]/api . api_key : Password instance-attribute # API key to use to authenticate with the download client. category : Optional [ str ] = None class-attribute instance-attribute # Associate media from Radarr with a category. Adding a category specific to Radarr avoids conflicts with unrelated non-Radarr downloads. Using a category is optional, but strongly recommended. recent_priority : NzbvortexPriority = NzbvortexPriority . normal class-attribute instance-attribute # Priority to use when grabbing media that released within the last 21 days. Values: low normal high older_priority : NzbvortexPriority = NzbvortexPriority . normal class-attribute instance-attribute # Priority to use when grabbing media that released over 21 days ago. Values: low normal high remove_completed_downloads : bool = True class-attribute instance-attribute # When set to true , remove completed downloads from the download client history. remove_failed_downloads : bool = True class-attribute instance-attribute # When set to true , remove failed downloads from the download client history. priority : PositiveInt = 1 class-attribute instance-attribute # Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client. Pneumatic # Download client for Usenet releases using the Pneumatic add-on for Kodi (XBMC). type : Literal [ 'pneumatic' ] = 'pneumatic' class-attribute instance-attribute # Type value associated with this kind of download client. enable : bool = True class-attribute instance-attribute # When True , this download client is active and Radarr is able to send requests to it. nzb_folder : NonEmptyStr instance-attribute # Folder in which Radarr will store .nzb files. This folder will need to be reachable from Kodi/XMBC. strm_folder : NonEmptyStr instance-attribute # Folder from which .strm files will be imported by Drone. remove_completed_downloads : bool = True class-attribute instance-attribute # When set to true , remove completed downloads from the download client history. remove_failed_downloads : bool = True class-attribute instance-attribute # When set to true , remove failed downloads from the download client history. priority : PositiveInt = 1 class-attribute instance-attribute # Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client. qBittorrent # Download client for torrent releases using the qBittorrent torrent client. type : Literal [ 'qbittorrent' ] = 'qbittorrent' class-attribute instance-attribute # Type value associated with this kind of download client. enable : bool = True class-attribute instance-attribute # When True , this download client is active and Radarr is able to send requests to it. hostname : NonEmptyStr instance-attribute # qBittorrent host name. port : Port = 8080 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : Optional [ str ] = None class-attribute instance-attribute # Adds a prefix to the qBittorrent URL, e.g. http://[host]:[port]/[url_base]/api . username : NonEmptyStr instance-attribute # User name to use when authenticating with the download client. password : Password instance-attribute # Password to use to authenticate the download client user. category : Optional [ str ] = 'radarr' class-attribute instance-attribute # Associate media from Radarr with a category. Adding a category specific to Radarr avoids conflicts with unrelated non-Radarr downloads. Using a category is optional, but strongly recommended. postimport_category : Optional [ str ] = None class-attribute instance-attribute # Category for Radarr to set after it has imported the download. Radarr will not remove the torrent if seeding has finished. Leave blank to keep the same category as set in category . recent_priority : QbittorrentPriority = QbittorrentPriority . last class-attribute instance-attribute # Priority to use when grabbing media that released within the last 14 days. Values: last first older_priority : QbittorrentPriority = QbittorrentPriority . last class-attribute instance-attribute # Priority to use when grabbing media that released over 14 days ago. Values: last first initial_state : QbittorrentState = QbittorrentState . start class-attribute instance-attribute # Initial state for torrents added to qBittorrent. Note that forced torrents do not abide by seed restrictions. sequential_order : bool = False class-attribute instance-attribute # When set to true , download pieces in sequential order. Requires qBittorrent v4.1.0 or later. first_and_last_first : bool = False class-attribute instance-attribute # When set to true , download the first and last pieces first. Requires qBittorrent v4.1.0 or later. remove_completed_downloads : bool = True class-attribute instance-attribute # When set to true , remove completed downloads from the download client history. remove_failed_downloads : bool = True class-attribute instance-attribute # When set to true , remove failed downloads from the download client history. priority : PositiveInt = 1 class-attribute instance-attribute # Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client. RTorrent (ruTorrent) # Download client for torrent releases using the RTorrent (ruTorrent) torrent client. type : Literal [ 'rtorrent' , 'rutorrent' ] = 'rtorrent' class-attribute instance-attribute # Type value associated with this kind of download client. enable : bool = True class-attribute instance-attribute # When True , this download client is active and Radarr is able to send requests to it. hostname : NonEmptyStr instance-attribute # RTorrent host name. port : Port = 8080 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : NonEmptyStr = 'RPC2' class-attribute instance-attribute # Path to the XMLRPC endpoint, e.g. http(s)://[host]:[port]/[url_base] . When using RTorrent this usually is RPC2 or plugins/rpc/rpc.php . username : NonEmptyStr instance-attribute # User name to use when authenticating with the download client. password : Password instance-attribute # Password to use to authenticate the download client user. category : Optional [ str ] = 'radarr' class-attribute instance-attribute # Associate media from Radarr with a category. Adding a category specific to Radarr avoids conflicts with unrelated non-Radarr downloads. Using a category is optional, but strongly recommended. postimport_category : Optional [ str ] = None class-attribute instance-attribute # Category for Radarr to set after it has imported the download. Radarr will not remove the torrent if seeding has finished. Leave blank to keep the same category as set in category . directory : Optional [ str ] = None class-attribute instance-attribute # Optional shared folder to put downloads into. Leave blank, set to null or undefined to use the default download client location. recent_priority : RtorrentPriority = RtorrentPriority . normal class-attribute instance-attribute # Priority to use when grabbing media that released within the last 14 days. Values: do-not-download low normal high older_priority : RtorrentPriority = RtorrentPriority . normal class-attribute instance-attribute # Priority to use when grabbing media that released over 14 days ago. Values: do-not-download low normal high add_stopped : bool = False class-attribute instance-attribute # Enabling will add torrents and magnets to RTorrent in a stopped state. This may break magnet files. remove_completed_downloads : bool = True class-attribute instance-attribute # When set to true , remove completed downloads from the download client history. remove_failed_downloads : bool = True class-attribute instance-attribute # When set to true , remove failed downloads from the download client history. priority : PositiveInt = 1 class-attribute instance-attribute # Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client. SABnzbd # Download client for Usenet releases using the SABnzbd Usenet client. type : Literal [ 'sabnzbd' ] = 'sabnzbd' class-attribute instance-attribute # Type value associated with this kind of download client. enable : bool = True class-attribute instance-attribute # When True , this download client is active and Radarr is able to send requests to it. hostname : NonEmptyStr instance-attribute # SABnzbd host name. port : Port = 4321 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : Optional [ str ] = None class-attribute instance-attribute # Adds a prefix to the SABnzbd URL, e.g. http://[host]:[port]/[url_base]/api/ . api_key : Optional [ SecretStr ] = None class-attribute instance-attribute # API key to use to authenticate with SABnzbd, if required. category : Optional [ str ] = None class-attribute instance-attribute # Associate media from Radarr with a category. Adding a category specific to Radarr avoids conflicts with unrelated non-Radarr downloads. Using a category is optional, but strongly recommended. recent_priority : SabnzbdPriority = SabnzbdPriority . default class-attribute instance-attribute # Priority to use when grabbing media that releases within the last 21 days. Values: default paused low normal high force older_priority : SabnzbdPriority = SabnzbdPriority . default class-attribute instance-attribute # Priority to use when grabbing media that releases over 21 days ago. Values: default paused low normal high force remove_completed_downloads : bool = True class-attribute instance-attribute # When set to true , remove completed downloads from the download client history. remove_failed_downloads : bool = True class-attribute instance-attribute # When set to true , remove failed downloads from the download client history. priority : PositiveInt = 1 class-attribute instance-attribute # Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client. Torrent Blackhole # Use .torrent files and watch folders to manage requests to an externally managed download client. type : Literal [ 'torrent-blackhole' ] = 'torrent-blackhole' class-attribute instance-attribute # Type value associated with this kind of download client. enable : bool = True class-attribute instance-attribute # When True , this download client is active and Radarr is able to send requests to it. torrent_folder : NonEmptyStr instance-attribute # Folder in which Radarr will store .torrent files. watch_folder : NonEmptyStr instance-attribute # Folder from which Radarr should import completed downloads. save_magnet_files : bool = False class-attribute instance-attribute # Save the magnet link if no .torrent file is available. Only useful if the download client supports magnets saved to a file. magnet_file_extension : NonEmptyStr = '.magnet' class-attribute instance-attribute # Extension to use for magnet links. read_only : bool = True class-attribute instance-attribute # When set to true , this instructs Radarr to copy or hard link completed downloads to their final directory, instead of moving them. To allow torrents to continue seeding after download, this should be enabled. remove_completed_downloads : bool = True class-attribute instance-attribute # When set to true , remove completed downloads from the download client history. remove_failed_downloads : bool = True class-attribute instance-attribute # When set to true , remove failed downloads from the download client history. priority : PositiveInt = 1 class-attribute instance-attribute # Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client. Transmission # Download client for torrent releases using the Transmission torrent client. type : Literal [ 'transmission' ] = 'transmission' class-attribute instance-attribute # Type value associated with this kind of download client. enable : bool = True class-attribute instance-attribute # When True , this download client is active and Radarr is able to send requests to it. hostname : NonEmptyStr instance-attribute # Download client host name. port : Port = 9091 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : NonEmptyStr = '/transmission/' class-attribute instance-attribute # Adds a prefix to the API RPC url, e.g. http://[host]:[port][url_base]rpc . This is set by default in most clients to /transmission/ . username : Optional [ str ] = None class-attribute instance-attribute # User name to use when authenticating with the download client, if required. password : Optional [ Password ] = None class-attribute instance-attribute # Password to use to authenticate the download client user, if required. category : Optional [ str ] = None class-attribute instance-attribute # Associate media from Radarr with a category. Creates a [category] subdirectory in the output directory. Adding a category specific to Radarr avoids conflicts with unrelated non-Radarr downloads. Using a category is optional, but strongly recommended. directory : Optional [ str ] = None class-attribute instance-attribute # Optional shared folder to put downloads into. Leave blank, set to null or undefined to use the default download client location. recent_priority : TransmissionPriority = TransmissionPriority . last class-attribute instance-attribute # Priority to use when grabbing media that released within the last 21 days. Values: last first older_priority : TransmissionPriority = TransmissionPriority . last class-attribute instance-attribute # Priority to use when grabbing media that released over 21 days ago. Values: last first add_paused : bool = False class-attribute instance-attribute # Add media to the download client in the Paused state. remove_completed_downloads : bool = True class-attribute instance-attribute # When set to true , remove completed downloads from the download client history. remove_failed_downloads : bool = True class-attribute instance-attribute # When set to true , remove failed downloads from the download client history. priority : PositiveInt = 1 class-attribute instance-attribute # Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client. Usenet Blackhole # Use .nzb files and watch folders to manage requests to an externally managed download client. type : Literal [ 'usenet-blackhole' ] = 'usenet-blackhole' class-attribute instance-attribute # Type value associated with this kind of download client. enable : bool = True class-attribute instance-attribute # When True , this download client is active and Radarr is able to send requests to it. nzb_folder : NonEmptyStr instance-attribute # Folder in which Radarr will store .nzb files. watch_folder : NonEmptyStr instance-attribute # Folder from which Radarr should import completed downloads. remove_completed_downloads : bool = True class-attribute instance-attribute # When set to true , remove completed downloads from the download client history. remove_failed_downloads : bool = True class-attribute instance-attribute # When set to true , remove failed downloads from the download client history. priority : PositiveInt = 1 class-attribute instance-attribute # Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client. uTorrent # type : Literal [ 'utorrent' ] = 'utorrent' class-attribute instance-attribute # Type value associated with this kind of download client. enable : bool = True class-attribute instance-attribute # When True , this download client is active and Radarr is able to send requests to it. hostname : NonEmptyStr instance-attribute # uTorrent host name. port : Port = 8080 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : Optional [ str ] = None class-attribute instance-attribute # Adds a prefix to the uTorrent URL, e.g. http://[host]:[port]/[url_base]/api . username : NonEmptyStr instance-attribute # User name to use when authenticating with the download client. password : Password instance-attribute # Password to use to authenticate the download client user. category : Optional [ str ] = 'radarr' class-attribute instance-attribute # Associate media from Radarr with a category. Adding a category specific to Radarr avoids conflicts with unrelated non-Radarr downloads. Using a category is optional, but strongly recommended. postimport_category : Optional [ str ] = 'radarr' class-attribute instance-attribute # Category for Radarr to set after it has imported the download. Radarr will not remove the torrent if seeding has finished. Leave blank to keep the same category as set in category . recent_priority : UtorrentPriority = UtorrentPriority . last class-attribute instance-attribute # Priority to use when grabbing media that released within the last 21 days. Values: last first older_priority : UtorrentPriority = UtorrentPriority . last class-attribute instance-attribute # Priority to use when grabbing media that released over 21 days ago. Values: last first initial_state : UtorrentState = UtorrentState . start class-attribute instance-attribute # Initial state for torrents added to uTorrent. remove_completed_downloads : bool = True class-attribute instance-attribute # When set to true , remove completed downloads from the download client history. remove_failed_downloads : bool = True class-attribute instance-attribute # When set to true , remove failed downloads from the download client history. priority : PositiveInt = 1 class-attribute instance-attribute # Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client. Vuze # Download client for torrent releases using the Vuze torrent client. type : Literal [ 'vuze' ] = 'vuze' class-attribute instance-attribute # Type value associated with this kind of download client. enable : bool = True class-attribute instance-attribute # When True , this download client is active and Radarr is able to send requests to it. hostname : NonEmptyStr instance-attribute # Download client host name. port : Port = 9091 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : NonEmptyStr = '/transmission/' class-attribute instance-attribute # Adds a prefix to the API RPC url, e.g. http://[host]:[port][url_base]rpc . This is set by default in most clients to /transmission/ . username : Optional [ str ] = None class-attribute instance-attribute # User name to use when authenticating with the download client, if required. password : Optional [ Password ] = None class-attribute instance-attribute # Password to use to authenticate the download client user, if required. category : Optional [ str ] = None class-attribute instance-attribute # Associate media from Radarr with a category. Creates a [category] subdirectory in the output directory. Adding a category specific to Radarr avoids conflicts with unrelated non-Radarr downloads. Using a category is optional, but strongly recommended. directory : Optional [ str ] = None class-attribute instance-attribute # Optional shared folder to put downloads into. Leave blank, set to null or undefined to use the default download client location. recent_priority : TransmissionPriority = TransmissionPriority . last class-attribute instance-attribute # Priority to use when grabbing media that released within the last 21 days. Values: last first older_priority : TransmissionPriority = TransmissionPriority . last class-attribute instance-attribute # Priority to use when grabbing media that released over 21 days ago. Values: last first add_paused : bool = False class-attribute instance-attribute # Add media to the download client in the Paused state. remove_completed_downloads : bool = True class-attribute instance-attribute # When set to true , remove completed downloads from the download client history. remove_failed_downloads : bool = True class-attribute instance-attribute # When set to true , remove failed downloads from the download client history. priority : PositiveInt = 1 class-attribute instance-attribute # Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client.","title":"Download Clients"},{"location":"plugins/radarr/configuration/settings/download-clients/#download-clients","text":"Radarr is linked to one or more download clients to actually handle downloading releases that have been grabbed from indexers. There are two types of download clients: Usenet clients, which grab releases from Usenet indexers, and torrent download clients, which download (and subsequently seed) releases using the BitTorrent P2P protocol. --- radarr : settings : download_clients : delete_unmanaged : true definitions : Transmission : # Name of the download client type : transmission # Type of download client enable : true # Enable the download client in Radarr host : transmission port : 9091 category : radarr # Define any other type-specific or global # download client attributes as needed. ... In Buildarr, download clients are defined using a dictionary structure, as shown above. The following parameters control how Buildarr configures download clients on Radarr instances.","title":"Download Clients"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.RadarrDownloadClientsSettings.delete_unmanaged","text":"Automatically delete download clients not defined in Buildarr.","title":"delete_unmanaged"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.RadarrDownloadClientsSettings.definitions","text":"Define download clients under this attribute.","title":"definitions"},{"location":"plugins/radarr/configuration/settings/download-clients/#aria2","text":"Download client for torrent releases using the Aria2 download utility.","title":"Aria2"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.aria2.Aria2DownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.enable","text":"When True , this download client is active and Radarr is able to send requests to it.","title":"enable"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.aria2.Aria2DownloadClient.hostname","text":"Aria2 host name.","title":"hostname"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.aria2.Aria2DownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.aria2.Aria2DownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.aria2.Aria2DownloadClient.rpc_path","text":"XML RPC path in the Aria2 client URL.","title":"rpc_path"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.aria2.Aria2DownloadClient.secret_token","text":"Secret token to use to authenticate with the download client.","title":"secret_token"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_completed_downloads","text":"When set to true , remove completed downloads from the download client history.","title":"remove_completed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_failed_downloads","text":"When set to true , remove failed downloads from the download client history.","title":"remove_failed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.priority","text":"Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority.","title":"priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.tags","text":"Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client.","title":"tags"},{"location":"plugins/radarr/configuration/settings/download-clients/#deluge","text":"Download client for torrent releases using the Deluge torrent client.","title":"Deluge"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.deluge.DelugeDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.enable","text":"When True , this download client is active and Radarr is able to send requests to it.","title":"enable"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.deluge.DelugeDownloadClient.hostname","text":"Deluge host name.","title":"hostname"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.deluge.DelugeDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.deluge.DelugeDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.deluge.DelugeDownloadClient.url_base","text":"Adds a prefix to the Deluge JSON URL, e.g. http://[host]:[port]/[url_base]/json .","title":"url_base"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.deluge.DelugeDownloadClient.password","text":"Password to use to authenticate the download client user.","title":"password"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.deluge.DelugeDownloadClient.category","text":"Associate media from Radarr with a category. Adding a category specific to Radarr avoids conflicts with unrelated non-Radarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.deluge.DelugeDownloadClient.recent_priority","text":"Priority to use when grabbing media that released within the last 14 days. Values: last first","title":"recent_priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.deluge.DelugeDownloadClient.older_priority","text":"Priority to use when grabbing media that released within over 14 days ago. Values: last first","title":"older_priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.deluge.DelugeDownloadClient.add_paused","text":"When set to true , add releases to the download client in paused state.","title":"add_paused"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_completed_downloads","text":"When set to true , remove completed downloads from the download client history.","title":"remove_completed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_failed_downloads","text":"When set to true , remove failed downloads from the download client history.","title":"remove_failed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.priority","text":"Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority.","title":"priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.tags","text":"Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client.","title":"tags"},{"location":"plugins/radarr/configuration/settings/download-clients/#download-station-torrent","text":"Download client for torrent releases using the Download Station download utility.","title":"Download Station (Torrent)"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.downloadstation.DownloadstationTorrentDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.enable","text":"When True , this download client is active and Radarr is able to send requests to it.","title":"enable"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.downloadstation.DownloadstationTorrentDownloadClient.hostname","text":"Download Station host name.","title":"hostname"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.downloadstation.DownloadstationTorrentDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.downloadstation.DownloadstationTorrentDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.downloadstation.DownloadstationTorrentDownloadClient.username","text":"User name to use when authenticating with the download client.","title":"username"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.downloadstation.DownloadstationTorrentDownloadClient.password","text":"Password to use to authenticate the download client user.","title":"password"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.downloadstation.DownloadstationTorrentDownloadClient.category","text":"Associate media from Radarr with a category. Creates a [category] subdirectory in the output directory. Adding a category specific to Radarr avoids conflicts with unrelated non-Radarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.downloadstation.DownloadstationTorrentDownloadClient.directory","text":"Optional shared folder to put downloads into. Leave blank, set to null or undefined to use the default download client location.","title":"directory"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_completed_downloads","text":"When set to true , remove completed downloads from the download client history.","title":"remove_completed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_failed_downloads","text":"When set to true , remove failed downloads from the download client history.","title":"remove_failed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.priority","text":"Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority.","title":"priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.tags","text":"Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client.","title":"tags"},{"location":"plugins/radarr/configuration/settings/download-clients/#download-station-usenet","text":"Download client for Usenet releases using the Download Station download utility.","title":"Download Station (Usenet)"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.downloadstation.DownloadstationUsenetDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.enable","text":"When True , this download client is active and Radarr is able to send requests to it.","title":"enable"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.downloadstation.DownloadstationUsenetDownloadClient.hostname","text":"Download Station host name.","title":"hostname"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.downloadstation.DownloadstationUsenetDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.downloadstation.DownloadstationUsenetDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.downloadstation.DownloadstationUsenetDownloadClient.username","text":"User name to use when authenticating with the download client.","title":"username"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.downloadstation.DownloadstationUsenetDownloadClient.password","text":"Password to use to authenticate the download client user.","title":"password"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.downloadstation.DownloadstationUsenetDownloadClient.category","text":"Associate media from Radarr with a category. Creates a [category] subdirectory in the output directory. Adding a category specific to Radarr avoids conflicts with unrelated non-Radarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.downloadstation.DownloadstationUsenetDownloadClient.directory","text":"Optional shared folder to put downloads into. Leave blank, set to null or undefined to use the default download client location.","title":"directory"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_completed_downloads","text":"When set to true , remove completed downloads from the download client history.","title":"remove_completed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_failed_downloads","text":"When set to true , remove failed downloads from the download client history.","title":"remove_failed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.priority","text":"Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority.","title":"priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.tags","text":"Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client.","title":"tags"},{"location":"plugins/radarr/configuration/settings/download-clients/#flood","text":"Download client for torrent releases using the Flood torrent client. Flood download client.","title":"Flood"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.flood.FloodDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.enable","text":"When True , this download client is active and Radarr is able to send requests to it. Flood download client.","title":"enable"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.flood.FloodDownloadClient.hostname","text":"Flood host name.","title":"hostname"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.flood.FloodDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.flood.FloodDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.flood.FloodDownloadClient.url_base","text":"Optionally adds a prefix to Flood API, such as [protocol]://[host]:[port]/[url_base]api .","title":"url_base"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.flood.FloodDownloadClient.username","text":"User name to use when authenticating with the download client.","title":"username"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.flood.FloodDownloadClient.password","text":"Password to use to authenticate the download client user.","title":"password"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.flood.FloodDownloadClient.destination","text":"Manually specified download destination.","title":"destination"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.flood.FloodDownloadClient.flood_tags","text":"Initial tags of a download within Flood. To be recognized, a download must have all initial tags. This avoids conflicts with unrelated downloads.","title":"flood_tags"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.flood.FloodDownloadClient.additional_tags","text":"Adds properties of media as tags within Flood. Multiple can be specified at a time. Values: collection quality languages release-group year indexer studio","title":"additional_tags"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.flood.FloodDownloadClient.add_paused","text":"Add media to the download client in the Paused state.","title":"add_paused"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_completed_downloads","text":"When set to true , remove completed downloads from the download client history.","title":"remove_completed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_failed_downloads","text":"When set to true , remove failed downloads from the download client history.","title":"remove_failed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.priority","text":"Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority.","title":"priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.tags","text":"Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client.","title":"tags"},{"location":"plugins/radarr/configuration/settings/download-clients/#freebox","text":"Download client for torrent releases using a Freebox instance.","title":"Freebox"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.freebox.FreeboxDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.enable","text":"When True , this download client is active and Radarr is able to send requests to it.","title":"enable"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.freebox.FreeboxDownloadClient.port","text":"Freebox access port. Set to the HTTPS default port as Freebox uses HTTPS by default.","title":"port"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.freebox.FreeboxDownloadClient.use_ssl","text":"Use a secure connection when connecting to the Freebox API.","title":"use_ssl"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.freebox.FreeboxDownloadClient.api_url","text":"Define Freebox API base URL with API version, e.g. http[s]://<host>:<port>/<api_url>/ .","title":"api_url"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.freebox.FreeboxDownloadClient.app_id","text":"App ID used to authenticate with the Freebox.","title":"app_id"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.freebox.FreeboxDownloadClient.app_token","text":"Unique token used to authenticate with the Freebox.","title":"app_token"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.freebox.FreeboxDownloadClient.destination_directory","text":"Optional location to put downloads in, on the Freebox node. Leave blank, undefined or set to null to use the default Freebox download location.","title":"destination_directory"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.freebox.FreeboxDownloadClient.category","text":"Default category to classify downloads under if no category mappings apply to it. This will create a [category] subdirectory in the output directory. Adding a category specific to Radarr avoids conflicts with unrelated non-Radarr downloads.","title":"category"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.freebox.FreeboxDownloadClient.recent_priority","text":"Priority to use when grabbing media that released within the last 14 days.","title":"recent_priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.freebox.FreeboxDownloadClient.older_priority","text":"Priority to use when grabbing media that released over 14 days ago.","title":"older_priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.freebox.FreeboxDownloadClient.add_paused","text":"Add media to the download client in the Paused state.","title":"add_paused"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_completed_downloads","text":"When set to true , remove completed downloads from the download client history.","title":"remove_completed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_failed_downloads","text":"When set to true , remove failed downloads from the download client history.","title":"remove_failed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.priority","text":"Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority.","title":"priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.tags","text":"Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client.","title":"tags"},{"location":"plugins/radarr/configuration/settings/download-clients/#hadouken","text":"Download client for torrent releases using the Hadouken torrent client.","title":"Hadouken"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.hadouken.HadoukenDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.enable","text":"When True , this download client is active and Radarr is able to send requests to it.","title":"enable"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.hadouken.HadoukenDownloadClient.hostname","text":"Hadouken host name.","title":"hostname"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.hadouken.HadoukenDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.hadouken.HadoukenDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.hadouken.HadoukenDownloadClient.url_base","text":"Adds a prefix to the Hadouken url, e.g. http://[host]:[port]/[url_base]/api .","title":"url_base"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.hadouken.HadoukenDownloadClient.username","text":"User name to use when authenticating with the download client.","title":"username"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.hadouken.HadoukenDownloadClient.password","text":"Password to use to authenticate the download client user.","title":"password"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.hadouken.HadoukenDownloadClient.category","text":"Associate media from Radarr with a category. Adding a category specific to Radarr avoids conflicts with unrelated non-Radarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_completed_downloads","text":"When set to true , remove completed downloads from the download client history.","title":"remove_completed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_failed_downloads","text":"When set to true , remove failed downloads from the download client history.","title":"remove_failed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.priority","text":"Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority.","title":"priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.tags","text":"Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client.","title":"tags"},{"location":"plugins/radarr/configuration/settings/download-clients/#nzbget","text":"Download client for Usenet releases using the NZBGet Usenet client.","title":"NZBGet"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.nzbget.NzbgetDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.enable","text":"When True , this download client is active and Radarr is able to send requests to it.","title":"enable"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.nzbget.NzbgetDownloadClient.hostname","text":"NZBGet host name.","title":"hostname"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.nzbget.NzbgetDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.nzbget.NzbgetDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.nzbget.NzbgetDownloadClient.url_base","text":"Adds a prefix to the NZBGet url, e.g. http://[host]:[port]/[url_base]/jsonrpc .","title":"url_base"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.nzbget.NzbgetDownloadClient.username","text":"User name to use when authenticating with the download client.","title":"username"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.nzbget.NzbgetDownloadClient.password","text":"Password to use to authenticate the download client user.","title":"password"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.nzbget.NzbgetDownloadClient.category","text":"Associate media from Radarr with a category. Adding a category specific to Radarr avoids conflicts with unrelated non-Radarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.nzbget.NzbgetDownloadClient.recent_priority","text":"Priority to use when grabbing media that released within the last 21 days. Values: verylow low normal high veryhigh force","title":"recent_priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.nzbget.NzbgetDownloadClient.older_priority","text":"Priority to use when grabbing media that released over 21 days ago. Values: verylow low normal high veryhigh force","title":"older_priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.nzbget.NzbgetDownloadClient.add_paused","text":"Add media to the download client in the paused state. This option requires NZBGet version 16.0 or later.","title":"add_paused"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_completed_downloads","text":"When set to true , remove completed downloads from the download client history.","title":"remove_completed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_failed_downloads","text":"When set to true , remove failed downloads from the download client history.","title":"remove_failed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.priority","text":"Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority.","title":"priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.tags","text":"Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client.","title":"tags"},{"location":"plugins/radarr/configuration/settings/download-clients/#nzbvortex","text":"Download client for Usenet releases using the NZBVortex Usenet client.","title":"NZBVortex"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.nzbvortex.NzbvortexDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.enable","text":"When True , this download client is active and Radarr is able to send requests to it.","title":"enable"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.nzbvortex.NzbvortexDownloadClient.hostname","text":"NZBVortex host name.","title":"hostname"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.nzbvortex.NzbvortexDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.nzbvortex.NzbvortexDownloadClient.url_base","text":"Adds a prefix to the NZBVortex url, e.g. http://[host]:[port]/[url_base]/api .","title":"url_base"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.nzbvortex.NzbvortexDownloadClient.api_key","text":"API key to use to authenticate with the download client.","title":"api_key"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.nzbvortex.NzbvortexDownloadClient.category","text":"Associate media from Radarr with a category. Adding a category specific to Radarr avoids conflicts with unrelated non-Radarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.nzbvortex.NzbvortexDownloadClient.recent_priority","text":"Priority to use when grabbing media that released within the last 21 days. Values: low normal high","title":"recent_priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.nzbvortex.NzbvortexDownloadClient.older_priority","text":"Priority to use when grabbing media that released over 21 days ago. Values: low normal high","title":"older_priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_completed_downloads","text":"When set to true , remove completed downloads from the download client history.","title":"remove_completed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_failed_downloads","text":"When set to true , remove failed downloads from the download client history.","title":"remove_failed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.priority","text":"Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority.","title":"priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.tags","text":"Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client.","title":"tags"},{"location":"plugins/radarr/configuration/settings/download-clients/#pneumatic","text":"Download client for Usenet releases using the Pneumatic add-on for Kodi (XBMC).","title":"Pneumatic"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.pneumatic.PneumaticDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.enable","text":"When True , this download client is active and Radarr is able to send requests to it.","title":"enable"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.pneumatic.PneumaticDownloadClient.nzb_folder","text":"Folder in which Radarr will store .nzb files. This folder will need to be reachable from Kodi/XMBC.","title":"nzb_folder"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.pneumatic.PneumaticDownloadClient.strm_folder","text":"Folder from which .strm files will be imported by Drone.","title":"strm_folder"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_completed_downloads","text":"When set to true , remove completed downloads from the download client history.","title":"remove_completed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_failed_downloads","text":"When set to true , remove failed downloads from the download client history.","title":"remove_failed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.priority","text":"Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority.","title":"priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.tags","text":"Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client.","title":"tags"},{"location":"plugins/radarr/configuration/settings/download-clients/#qbittorrent","text":"Download client for torrent releases using the qBittorrent torrent client.","title":"qBittorrent"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.qbittorrent.QbittorrentDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.enable","text":"When True , this download client is active and Radarr is able to send requests to it.","title":"enable"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.qbittorrent.QbittorrentDownloadClient.hostname","text":"qBittorrent host name.","title":"hostname"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.qbittorrent.QbittorrentDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.qbittorrent.QbittorrentDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.qbittorrent.QbittorrentDownloadClient.url_base","text":"Adds a prefix to the qBittorrent URL, e.g. http://[host]:[port]/[url_base]/api .","title":"url_base"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.qbittorrent.QbittorrentDownloadClient.username","text":"User name to use when authenticating with the download client.","title":"username"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.qbittorrent.QbittorrentDownloadClient.password","text":"Password to use to authenticate the download client user.","title":"password"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.qbittorrent.QbittorrentDownloadClient.category","text":"Associate media from Radarr with a category. Adding a category specific to Radarr avoids conflicts with unrelated non-Radarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.qbittorrent.QbittorrentDownloadClient.postimport_category","text":"Category for Radarr to set after it has imported the download. Radarr will not remove the torrent if seeding has finished. Leave blank to keep the same category as set in category .","title":"postimport_category"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.qbittorrent.QbittorrentDownloadClient.recent_priority","text":"Priority to use when grabbing media that released within the last 14 days. Values: last first","title":"recent_priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.qbittorrent.QbittorrentDownloadClient.older_priority","text":"Priority to use when grabbing media that released over 14 days ago. Values: last first","title":"older_priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.qbittorrent.QbittorrentDownloadClient.initial_state","text":"Initial state for torrents added to qBittorrent. Note that forced torrents do not abide by seed restrictions.","title":"initial_state"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.qbittorrent.QbittorrentDownloadClient.sequential_order","text":"When set to true , download pieces in sequential order. Requires qBittorrent v4.1.0 or later.","title":"sequential_order"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.qbittorrent.QbittorrentDownloadClient.first_and_last_first","text":"When set to true , download the first and last pieces first. Requires qBittorrent v4.1.0 or later.","title":"first_and_last_first"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_completed_downloads","text":"When set to true , remove completed downloads from the download client history.","title":"remove_completed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_failed_downloads","text":"When set to true , remove failed downloads from the download client history.","title":"remove_failed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.priority","text":"Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority.","title":"priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.tags","text":"Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client.","title":"tags"},{"location":"plugins/radarr/configuration/settings/download-clients/#rtorrent-rutorrent","text":"Download client for torrent releases using the RTorrent (ruTorrent) torrent client.","title":"RTorrent (ruTorrent)"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.rtorrent.RtorrentDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.enable","text":"When True , this download client is active and Radarr is able to send requests to it.","title":"enable"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.rtorrent.RtorrentDownloadClient.hostname","text":"RTorrent host name.","title":"hostname"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.rtorrent.RtorrentDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.rtorrent.RtorrentDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.rtorrent.RtorrentDownloadClient.url_base","text":"Path to the XMLRPC endpoint, e.g. http(s)://[host]:[port]/[url_base] . When using RTorrent this usually is RPC2 or plugins/rpc/rpc.php .","title":"url_base"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.rtorrent.RtorrentDownloadClient.username","text":"User name to use when authenticating with the download client.","title":"username"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.rtorrent.RtorrentDownloadClient.password","text":"Password to use to authenticate the download client user.","title":"password"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.rtorrent.RtorrentDownloadClient.category","text":"Associate media from Radarr with a category. Adding a category specific to Radarr avoids conflicts with unrelated non-Radarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.rtorrent.RtorrentDownloadClient.postimport_category","text":"Category for Radarr to set after it has imported the download. Radarr will not remove the torrent if seeding has finished. Leave blank to keep the same category as set in category .","title":"postimport_category"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.rtorrent.RtorrentDownloadClient.directory","text":"Optional shared folder to put downloads into. Leave blank, set to null or undefined to use the default download client location.","title":"directory"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.rtorrent.RtorrentDownloadClient.recent_priority","text":"Priority to use when grabbing media that released within the last 14 days. Values: do-not-download low normal high","title":"recent_priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.rtorrent.RtorrentDownloadClient.older_priority","text":"Priority to use when grabbing media that released over 14 days ago. Values: do-not-download low normal high","title":"older_priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.rtorrent.RtorrentDownloadClient.add_stopped","text":"Enabling will add torrents and magnets to RTorrent in a stopped state. This may break magnet files.","title":"add_stopped"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_completed_downloads","text":"When set to true , remove completed downloads from the download client history.","title":"remove_completed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_failed_downloads","text":"When set to true , remove failed downloads from the download client history.","title":"remove_failed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.priority","text":"Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority.","title":"priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.tags","text":"Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client.","title":"tags"},{"location":"plugins/radarr/configuration/settings/download-clients/#sabnzbd","text":"Download client for Usenet releases using the SABnzbd Usenet client.","title":"SABnzbd"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.sabnzbd.SabnzbdDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.enable","text":"When True , this download client is active and Radarr is able to send requests to it.","title":"enable"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.sabnzbd.SabnzbdDownloadClient.hostname","text":"SABnzbd host name.","title":"hostname"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.sabnzbd.SabnzbdDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.sabnzbd.SabnzbdDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.sabnzbd.SabnzbdDownloadClient.url_base","text":"Adds a prefix to the SABnzbd URL, e.g. http://[host]:[port]/[url_base]/api/ .","title":"url_base"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.sabnzbd.SabnzbdDownloadClient.api_key","text":"API key to use to authenticate with SABnzbd, if required.","title":"api_key"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.sabnzbd.SabnzbdDownloadClient.category","text":"Associate media from Radarr with a category. Adding a category specific to Radarr avoids conflicts with unrelated non-Radarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.sabnzbd.SabnzbdDownloadClient.recent_priority","text":"Priority to use when grabbing media that releases within the last 21 days. Values: default paused low normal high force","title":"recent_priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.sabnzbd.SabnzbdDownloadClient.older_priority","text":"Priority to use when grabbing media that releases over 21 days ago. Values: default paused low normal high force","title":"older_priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_completed_downloads","text":"When set to true , remove completed downloads from the download client history.","title":"remove_completed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_failed_downloads","text":"When set to true , remove failed downloads from the download client history.","title":"remove_failed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.priority","text":"Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority.","title":"priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.tags","text":"Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client.","title":"tags"},{"location":"plugins/radarr/configuration/settings/download-clients/#torrent-blackhole","text":"Use .torrent files and watch folders to manage requests to an externally managed download client.","title":"Torrent Blackhole"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.blackhole.TorrentBlackholeDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.enable","text":"When True , this download client is active and Radarr is able to send requests to it.","title":"enable"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.blackhole.TorrentBlackholeDownloadClient.torrent_folder","text":"Folder in which Radarr will store .torrent files.","title":"torrent_folder"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.blackhole.TorrentBlackholeDownloadClient.watch_folder","text":"Folder from which Radarr should import completed downloads.","title":"watch_folder"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.blackhole.TorrentBlackholeDownloadClient.save_magnet_files","text":"Save the magnet link if no .torrent file is available. Only useful if the download client supports magnets saved to a file.","title":"save_magnet_files"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.blackhole.TorrentBlackholeDownloadClient.magnet_file_extension","text":"Extension to use for magnet links.","title":"magnet_file_extension"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.blackhole.TorrentBlackholeDownloadClient.read_only","text":"When set to true , this instructs Radarr to copy or hard link completed downloads to their final directory, instead of moving them. To allow torrents to continue seeding after download, this should be enabled.","title":"read_only"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_completed_downloads","text":"When set to true , remove completed downloads from the download client history.","title":"remove_completed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_failed_downloads","text":"When set to true , remove failed downloads from the download client history.","title":"remove_failed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.priority","text":"Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority.","title":"priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.tags","text":"Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client.","title":"tags"},{"location":"plugins/radarr/configuration/settings/download-clients/#transmission","text":"Download client for torrent releases using the Transmission torrent client.","title":"Transmission"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.transmission.TransmissionDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.enable","text":"When True , this download client is active and Radarr is able to send requests to it.","title":"enable"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.transmission.TransmissionDownloadClientBase.hostname","text":"Download client host name.","title":"hostname"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.transmission.TransmissionDownloadClientBase.port","text":"Download client access port.","title":"port"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.transmission.TransmissionDownloadClientBase.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.transmission.TransmissionDownloadClientBase.url_base","text":"Adds a prefix to the API RPC url, e.g. http://[host]:[port][url_base]rpc . This is set by default in most clients to /transmission/ .","title":"url_base"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.transmission.TransmissionDownloadClientBase.username","text":"User name to use when authenticating with the download client, if required.","title":"username"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.transmission.TransmissionDownloadClientBase.password","text":"Password to use to authenticate the download client user, if required.","title":"password"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.transmission.TransmissionDownloadClientBase.category","text":"Associate media from Radarr with a category. Creates a [category] subdirectory in the output directory. Adding a category specific to Radarr avoids conflicts with unrelated non-Radarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.transmission.TransmissionDownloadClientBase.directory","text":"Optional shared folder to put downloads into. Leave blank, set to null or undefined to use the default download client location.","title":"directory"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.transmission.TransmissionDownloadClientBase.recent_priority","text":"Priority to use when grabbing media that released within the last 21 days. Values: last first","title":"recent_priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.transmission.TransmissionDownloadClientBase.older_priority","text":"Priority to use when grabbing media that released over 21 days ago. Values: last first","title":"older_priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.transmission.TransmissionDownloadClientBase.add_paused","text":"Add media to the download client in the Paused state.","title":"add_paused"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_completed_downloads","text":"When set to true , remove completed downloads from the download client history.","title":"remove_completed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_failed_downloads","text":"When set to true , remove failed downloads from the download client history.","title":"remove_failed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.priority","text":"Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority.","title":"priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.tags","text":"Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client.","title":"tags"},{"location":"plugins/radarr/configuration/settings/download-clients/#usenet-blackhole","text":"Use .nzb files and watch folders to manage requests to an externally managed download client.","title":"Usenet Blackhole"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.blackhole.UsenetBlackholeDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.enable","text":"When True , this download client is active and Radarr is able to send requests to it.","title":"enable"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.blackhole.UsenetBlackholeDownloadClient.nzb_folder","text":"Folder in which Radarr will store .nzb files.","title":"nzb_folder"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.usenet.blackhole.UsenetBlackholeDownloadClient.watch_folder","text":"Folder from which Radarr should import completed downloads.","title":"watch_folder"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_completed_downloads","text":"When set to true , remove completed downloads from the download client history.","title":"remove_completed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_failed_downloads","text":"When set to true , remove failed downloads from the download client history.","title":"remove_failed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.priority","text":"Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority.","title":"priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.tags","text":"Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client.","title":"tags"},{"location":"plugins/radarr/configuration/settings/download-clients/#utorrent","text":"","title":"uTorrent"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.utorrent.UtorrentDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.enable","text":"When True , this download client is active and Radarr is able to send requests to it.","title":"enable"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.utorrent.UtorrentDownloadClient.hostname","text":"uTorrent host name.","title":"hostname"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.utorrent.UtorrentDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.utorrent.UtorrentDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.utorrent.UtorrentDownloadClient.url_base","text":"Adds a prefix to the uTorrent URL, e.g. http://[host]:[port]/[url_base]/api .","title":"url_base"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.utorrent.UtorrentDownloadClient.username","text":"User name to use when authenticating with the download client.","title":"username"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.utorrent.UtorrentDownloadClient.password","text":"Password to use to authenticate the download client user.","title":"password"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.utorrent.UtorrentDownloadClient.category","text":"Associate media from Radarr with a category. Adding a category specific to Radarr avoids conflicts with unrelated non-Radarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.utorrent.UtorrentDownloadClient.postimport_category","text":"Category for Radarr to set after it has imported the download. Radarr will not remove the torrent if seeding has finished. Leave blank to keep the same category as set in category .","title":"postimport_category"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.utorrent.UtorrentDownloadClient.recent_priority","text":"Priority to use when grabbing media that released within the last 21 days. Values: last first","title":"recent_priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.utorrent.UtorrentDownloadClient.older_priority","text":"Priority to use when grabbing media that released over 21 days ago. Values: last first","title":"older_priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.utorrent.UtorrentDownloadClient.initial_state","text":"Initial state for torrents added to uTorrent.","title":"initial_state"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_completed_downloads","text":"When set to true , remove completed downloads from the download client history.","title":"remove_completed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_failed_downloads","text":"When set to true , remove failed downloads from the download client history.","title":"remove_failed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.priority","text":"Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority.","title":"priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.tags","text":"Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client.","title":"tags"},{"location":"plugins/radarr/configuration/settings/download-clients/#vuze","text":"Download client for torrent releases using the Vuze torrent client.","title":"Vuze"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.vuze.VuzeDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.enable","text":"When True , this download client is active and Radarr is able to send requests to it.","title":"enable"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.transmission.TransmissionDownloadClientBase.hostname","text":"Download client host name.","title":"hostname"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.transmission.TransmissionDownloadClientBase.port","text":"Download client access port.","title":"port"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.transmission.TransmissionDownloadClientBase.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.transmission.TransmissionDownloadClientBase.url_base","text":"Adds a prefix to the API RPC url, e.g. http://[host]:[port][url_base]rpc . This is set by default in most clients to /transmission/ .","title":"url_base"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.transmission.TransmissionDownloadClientBase.username","text":"User name to use when authenticating with the download client, if required.","title":"username"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.transmission.TransmissionDownloadClientBase.password","text":"Password to use to authenticate the download client user, if required.","title":"password"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.transmission.TransmissionDownloadClientBase.category","text":"Associate media from Radarr with a category. Creates a [category] subdirectory in the output directory. Adding a category specific to Radarr avoids conflicts with unrelated non-Radarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.transmission.TransmissionDownloadClientBase.directory","text":"Optional shared folder to put downloads into. Leave blank, set to null or undefined to use the default download client location.","title":"directory"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.transmission.TransmissionDownloadClientBase.recent_priority","text":"Priority to use when grabbing media that released within the last 21 days. Values: last first","title":"recent_priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.transmission.TransmissionDownloadClientBase.older_priority","text":"Priority to use when grabbing media that released over 21 days ago. Values: last first","title":"older_priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.torrent.transmission.TransmissionDownloadClientBase.add_paused","text":"Add media to the download client in the Paused state.","title":"add_paused"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_completed_downloads","text":"When set to true , remove completed downloads from the download client history.","title":"remove_completed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.remove_failed_downloads","text":"When set to true , remove failed downloads from the download client history.","title":"remove_failed_downloads"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.priority","text":"Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority.","title":"priority"},{"location":"plugins/radarr/configuration/settings/download-clients/#buildarr_radarr.config.settings.download_clients.base.DownloadClient.tags","text":"Radarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client.","title":"tags"},{"location":"plugins/radarr/configuration/settings/general/","text":"General # General configuration for Radarr are separated by category. radarr : settings : general : host : bind_address : \"*\" port : 7878 url_base : null use_ssl : false instance_name : Radarr (Buildarr Example) security : authentication : none proxy : enable : false logging : log_level : \"INFO\" analytics : send_anonymous_usage_data : true updates : branch : master automatic : false mechanism : docker backup : folder : Backups interval : 7 retention : 28 Some of the settings may affect Buildarr's ability to connect with the Prowlarr instance. Take care when changing these settings. Host # Radarr instance connection and name configuration. Many of these settings configure Radarr's external connection interface. If they are changed, the settings Buildarr uses to connect with this Radarr instance may need to be updated, so take care when modifying them. Changing any of these settings require a restart of Radarr to take effect. bind_address : Union [ Literal [ '*' ], IPv4Address ] = '*' class-attribute instance-attribute # Bind address for Radarr. Set to an IPv4 address bound to a local interface or * to bind on all interfaces. Unless you run Radarr directly on a host machine (i.e. not via Docker) and want Radarr to only be available on a specific network or interface, this generally should be left untouched. port : Port = 7878 class-attribute instance-attribute # Unencrypted (HTTP) listening port for Radarr. If Radarr is being run via Docker in the default bridge mode, this setting shouldn't be changed. Instead, change the external port it is bound to using --publish <port number>:7878 . ssl_port : Port = 9898 class-attribute instance-attribute # Encrypted (HTTPS) listening port for Radarr. If Radarr is being run via Docker in the default bridge mode, this setting shouldn't be changed. Instead, change the external port it is bound to using --publish <port number>:6969 . use_ssl : bool = False class-attribute instance-attribute # Enable the encrypted (HTTPS) listening port in Radarr. Instead of enabling HTTPS directly on Radarr, it is recommended to put Radarr behind a HTTPS-terminating reverse proxy such as Nginx, Caddy or Traefik. ssl_cert_path : Optional [ str ] = None class-attribute instance-attribute # Path to the TLS certificate file, in PFX format. Required if encryption (HTTPS) is enabled. ssl_cert_password : Optional [ SecretStr ] = None class-attribute instance-attribute # Password to unlock the TLS certificate file, if required. url_base : Optional [ str ] = None class-attribute instance-attribute # Add a prefix to all Radarr URLs, e.g. http://localhost:7878/<url_base>/settings/general . Generally used to accommodate reverse proxies where Radarr is assigned to a subfolder, e.g. https://example.com/radarr . instance_name : NonEmptyStr = 'Radarr' class-attribute instance-attribute # Instance name in the browser tab and in syslog. Security # Radarr instance security (authentication) settings. authentication : AuthenticationMethod = AuthenticationMethod . none class-attribute instance-attribute # Authentication method for logging into Radarr. By default, do not require authentication. Values: none - No authentication basic - Authentication using HTTP basic auth (browser popup) form - Authentication using a login page Requires a restart of Radarr to take effect. username : Optional [ str ] = None class-attribute instance-attribute # Username for the administrator user. Required if authentication is enabled. Requires a restart of Radarr to take effect. password : Optional [ Password ] = None class-attribute instance-attribute # Password for the administrator user. Required if authentication is enabled. Requires a restart of Radarr to take effect. certificate_validation : CertificateValidation = CertificateValidation . enabled class-attribute instance-attribute # Change how strict HTTPS certification validation is. Do not change unless you understand the risks. Values: enabled - Validate HTTPS certificates for all hosts local-disabled - Disable HTTPS certificate validation for hosts on the local network disabled - Disable HTTPS certificate validation completely Proxy # Proxy configuration for Radarr. enable : bool = False class-attribute instance-attribute # Use a proxy server to access the Internet. proxy_type : ProxyType = ProxyType . http class-attribute instance-attribute # Type of proxy to connect to. Values: http - HTTP(S) proxy socks4 - SOCKSv4 proxy socks5 - SOCKSv5 proxy (Tor is supported) hostname : Optional [ str ] = None class-attribute instance-attribute # Proxy server hostname. Required if using a proxy is enabled. port : Port = 8080 class-attribute instance-attribute # Proxy server access port. username : Optional [ str ] = None class-attribute instance-attribute # Username to authenticate with. Only enter if authentication is required by the proxy. password : Optional [ Password ] = None class-attribute instance-attribute # Password for the proxy user. Only enter if authentication is required by the proxy. ignored_addresses : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # List of domains/addresses which bypass the proxy. Wildcards ( * ) are supported. bypass_proxy_for_local_addresses : bool = True class-attribute instance-attribute # Do not use the proxy to access local network addresses. Logging # Logging configuration for the Radarr application. log_level : RadarrLogLevel = RadarrLogLevel . INFO class-attribute instance-attribute # Verbosity of logging output. Values: INFO - Standard log output DEBUG - Debugging log output TRACE - Trace diagnostics log output Analytics # Configuration of analytics and telemetry from within Radarr. send_anonymous_usage_data : bool = True class-attribute instance-attribute # Send anonymous usage and error information to Radarr's servers. This includes information on your browser, which Radarr Web UI pages you use, error reporting and OS/runtime versions. This information is reportedly used to prioritise features and bug fixes. Requires a restart of Radarr to take effect. Updates # Settings for updating Radarr. branch : NonEmptyStr = 'master' class-attribute instance-attribute # Branch used by the external update mechanism. Changing this value has no effect on Docker installations. If unsure, leave this undefined in Buildarr and use the value already set in Radarr. automatic : bool = False class-attribute instance-attribute # Automatically download and install updates. Manual updates can still be performed from System -> Updates. This option must be left set to false on Docker installations. mechanism : UpdateMechanism = UpdateMechanism . docker class-attribute instance-attribute # Set the mechanism for updating Radarr. Must be set to docker on Docker installations. Values: builtin - Radarr built-in updater mechanism script - Use the configured update script external - External update mechanism apt - Debian APT package docker - Docker image script_path : Optional [ str ] = None class-attribute instance-attribute # Path to a custom script that takes an extracted update package and handles the remainder of the update process. Required if mechanism is set to script . Backup # Settings for Radarr automatic backups. folder : NonEmptyStr = 'Backups' class-attribute instance-attribute # Folder to backup Radarr data to. Relative paths will be under Radarr's AppData directory. interval : int = Field ( 7 , ge = 1 , le = 7 ) class-attribute instance-attribute # Interval between automatic backups, in days. Must be set somewhere between 1 and 7 days. retention : int = Field ( 28 , ge = 1 , le = 90 ) class-attribute instance-attribute # Retention period for backups, in days. Backups older than the retention period will be cleaned up automatically. Must be set somewhere between 1 and 90 days.","title":"General"},{"location":"plugins/radarr/configuration/settings/general/#general","text":"General configuration for Radarr are separated by category. radarr : settings : general : host : bind_address : \"*\" port : 7878 url_base : null use_ssl : false instance_name : Radarr (Buildarr Example) security : authentication : none proxy : enable : false logging : log_level : \"INFO\" analytics : send_anonymous_usage_data : true updates : branch : master automatic : false mechanism : docker backup : folder : Backups interval : 7 retention : 28 Some of the settings may affect Buildarr's ability to connect with the Prowlarr instance. Take care when changing these settings.","title":"General"},{"location":"plugins/radarr/configuration/settings/general/#host","text":"Radarr instance connection and name configuration. Many of these settings configure Radarr's external connection interface. If they are changed, the settings Buildarr uses to connect with this Radarr instance may need to be updated, so take care when modifying them. Changing any of these settings require a restart of Radarr to take effect.","title":"Host"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.HostGeneralSettings.bind_address","text":"Bind address for Radarr. Set to an IPv4 address bound to a local interface or * to bind on all interfaces. Unless you run Radarr directly on a host machine (i.e. not via Docker) and want Radarr to only be available on a specific network or interface, this generally should be left untouched.","title":"bind_address"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.HostGeneralSettings.port","text":"Unencrypted (HTTP) listening port for Radarr. If Radarr is being run via Docker in the default bridge mode, this setting shouldn't be changed. Instead, change the external port it is bound to using --publish <port number>:7878 .","title":"port"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.HostGeneralSettings.ssl_port","text":"Encrypted (HTTPS) listening port for Radarr. If Radarr is being run via Docker in the default bridge mode, this setting shouldn't be changed. Instead, change the external port it is bound to using --publish <port number>:6969 .","title":"ssl_port"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.HostGeneralSettings.use_ssl","text":"Enable the encrypted (HTTPS) listening port in Radarr. Instead of enabling HTTPS directly on Radarr, it is recommended to put Radarr behind a HTTPS-terminating reverse proxy such as Nginx, Caddy or Traefik.","title":"use_ssl"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.HostGeneralSettings.ssl_cert_path","text":"Path to the TLS certificate file, in PFX format. Required if encryption (HTTPS) is enabled.","title":"ssl_cert_path"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.HostGeneralSettings.ssl_cert_password","text":"Password to unlock the TLS certificate file, if required.","title":"ssl_cert_password"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.HostGeneralSettings.url_base","text":"Add a prefix to all Radarr URLs, e.g. http://localhost:7878/<url_base>/settings/general . Generally used to accommodate reverse proxies where Radarr is assigned to a subfolder, e.g. https://example.com/radarr .","title":"url_base"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.HostGeneralSettings.instance_name","text":"Instance name in the browser tab and in syslog.","title":"instance_name"},{"location":"plugins/radarr/configuration/settings/general/#security","text":"Radarr instance security (authentication) settings.","title":"Security"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.SecurityGeneralSettings.authentication","text":"Authentication method for logging into Radarr. By default, do not require authentication. Values: none - No authentication basic - Authentication using HTTP basic auth (browser popup) form - Authentication using a login page Requires a restart of Radarr to take effect.","title":"authentication"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.SecurityGeneralSettings.username","text":"Username for the administrator user. Required if authentication is enabled. Requires a restart of Radarr to take effect.","title":"username"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.SecurityGeneralSettings.password","text":"Password for the administrator user. Required if authentication is enabled. Requires a restart of Radarr to take effect.","title":"password"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.SecurityGeneralSettings.certificate_validation","text":"Change how strict HTTPS certification validation is. Do not change unless you understand the risks. Values: enabled - Validate HTTPS certificates for all hosts local-disabled - Disable HTTPS certificate validation for hosts on the local network disabled - Disable HTTPS certificate validation completely","title":"certificate_validation"},{"location":"plugins/radarr/configuration/settings/general/#proxy","text":"Proxy configuration for Radarr.","title":"Proxy"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.ProxyGeneralSettings.enable","text":"Use a proxy server to access the Internet.","title":"enable"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.ProxyGeneralSettings.proxy_type","text":"Type of proxy to connect to. Values: http - HTTP(S) proxy socks4 - SOCKSv4 proxy socks5 - SOCKSv5 proxy (Tor is supported)","title":"proxy_type"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.ProxyGeneralSettings.hostname","text":"Proxy server hostname. Required if using a proxy is enabled.","title":"hostname"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.ProxyGeneralSettings.port","text":"Proxy server access port.","title":"port"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.ProxyGeneralSettings.username","text":"Username to authenticate with. Only enter if authentication is required by the proxy.","title":"username"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.ProxyGeneralSettings.password","text":"Password for the proxy user. Only enter if authentication is required by the proxy.","title":"password"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.ProxyGeneralSettings.ignored_addresses","text":"List of domains/addresses which bypass the proxy. Wildcards ( * ) are supported.","title":"ignored_addresses"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.ProxyGeneralSettings.bypass_proxy_for_local_addresses","text":"Do not use the proxy to access local network addresses.","title":"bypass_proxy_for_local_addresses"},{"location":"plugins/radarr/configuration/settings/general/#logging","text":"Logging configuration for the Radarr application.","title":"Logging"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.LoggingGeneralSettings.log_level","text":"Verbosity of logging output. Values: INFO - Standard log output DEBUG - Debugging log output TRACE - Trace diagnostics log output","title":"log_level"},{"location":"plugins/radarr/configuration/settings/general/#analytics","text":"Configuration of analytics and telemetry from within Radarr.","title":"Analytics"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.AnalyticsGeneralSettings.send_anonymous_usage_data","text":"Send anonymous usage and error information to Radarr's servers. This includes information on your browser, which Radarr Web UI pages you use, error reporting and OS/runtime versions. This information is reportedly used to prioritise features and bug fixes. Requires a restart of Radarr to take effect.","title":"send_anonymous_usage_data"},{"location":"plugins/radarr/configuration/settings/general/#updates","text":"Settings for updating Radarr.","title":"Updates"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.UpdatesGeneralSettings.branch","text":"Branch used by the external update mechanism. Changing this value has no effect on Docker installations. If unsure, leave this undefined in Buildarr and use the value already set in Radarr.","title":"branch"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.UpdatesGeneralSettings.automatic","text":"Automatically download and install updates. Manual updates can still be performed from System -> Updates. This option must be left set to false on Docker installations.","title":"automatic"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.UpdatesGeneralSettings.mechanism","text":"Set the mechanism for updating Radarr. Must be set to docker on Docker installations. Values: builtin - Radarr built-in updater mechanism script - Use the configured update script external - External update mechanism apt - Debian APT package docker - Docker image","title":"mechanism"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.UpdatesGeneralSettings.script_path","text":"Path to a custom script that takes an extracted update package and handles the remainder of the update process. Required if mechanism is set to script .","title":"script_path"},{"location":"plugins/radarr/configuration/settings/general/#backup","text":"Settings for Radarr automatic backups.","title":"Backup"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.BackupGeneralSettings.folder","text":"Folder to backup Radarr data to. Relative paths will be under Radarr's AppData directory.","title":"folder"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.BackupGeneralSettings.interval","text":"Interval between automatic backups, in days. Must be set somewhere between 1 and 7 days.","title":"interval"},{"location":"plugins/radarr/configuration/settings/general/#buildarr_radarr.config.settings.general.BackupGeneralSettings.retention","text":"Retention period for backups, in days. Backups older than the retention period will be cleaned up automatically. Must be set somewhere between 1 and 90 days.","title":"retention"},{"location":"plugins/radarr/configuration/settings/indexers/","text":"Indexers # Note Instead of manually configuring indexers for each of your Radarr instances, it is highly recommended to setup a Prowlarr indexer manager, and manage it using the Prowlarr plugin for Buildarr . This is particularly convenient when managing more than one Radarr instance. When managing indexers using Prowlarr, do not add any indexer definitions to this Radarr instance in Buildarr, and ensure delete_unmanaged is set to false . Indexers are used to monitor for new releases of media on external trackers. When a suitable release has been found, Radarr registers it for download on one of the configured download clients. radarr : settings : indexers : minimum_age : 0 # minutes retention : 0 # days maximum_size : 0 # MB rss_sync_interval : 15 # minutes delete_unmanaged : false # Better to leave off for the most part. definitions : Nyaa : # Indexer name type : nyaa # Type of indexer enable_rss : true enable_automatic_search : true enable_interactive_search : true indexer_priority : 25 download_client : null website_url : https://example.com tags : - anime-movies The following parameters are available for configuring indexers and how they are handled by Radarr. For more information on how Radarr finds movies, refer to the FAQ on WikiArr . minimum_age : int = Field ( 0 , ge = 0 ) class-attribute instance-attribute # Minimum age (in minutes) of NZBs before they are grabbed. Applies to Usenet only. Use this to give new releases time to propagate to your Usenet provider. retention : int = Field ( 0 , ge = 0 ) class-attribute instance-attribute # Retention of releases (in days). Applies to Usenet only. Set to 0 for unlimited retention. maximum_size : int = Field ( 0 , ge = 0 ) class-attribute instance-attribute # Maximum size for a release to be grabbed, in megabytes (MB). Set to 0 to set for unlimited size. rss_sync_interval : int = Field ( 15 , ge = 0 ) class-attribute instance-attribute # Interval (in minutes) to sync RSS feeds with indexers. Set to 0 to disable syncing. WARNING: This also disables automatic release grabbing. delete_unmanaged : bool = False class-attribute instance-attribute # Automatically delete indexers not configured by Buildarr. Take care when enabling this option, as it will also delete indexers created by external applications such as Prowlarr. If unsure, leave set at the default of false . definitions : Dict [ str , Annotated [ IndexerType , Field ( discriminator = 'type' )]] = {} class-attribute instance-attribute # Indexers to manage via Buildarr are defined here. FileList # Monitor for new releases on the FileList.io private torrent tracker. type : Literal [ 'filelist' ] = 'filelist' class-attribute instance-attribute # Type value associated with this kind of indexer. enable_rss : bool = True class-attribute instance-attribute # If enabled, use this indexer to watch for files that are wanted and missing or have not yet reached their cutoff. enable_automatic_search : bool = True class-attribute instance-attribute # If enabled, use this indexer for automatic searches, including Search on Add. enable_interactive_search : bool = True class-attribute instance-attribute # If enabled, use this indexer for manual interactive searches. priority : int = Field ( 25 , ge = 1 , le = 50 ) class-attribute instance-attribute # Priority of this indexer to prefer one indexer over another in release tiebreaker scenarios. 1 is highest priority and 50 is lowest priority. download_client : Optional [ NonEmptyStr ] = None class-attribute instance-attribute # The name of the download client to use for grabs from this indexer. If unset, use any compatible download client. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Only monitor releases that match at least one of the defined tags. If unset, monitor all releases using this indexer. minimum_seeders : PositiveInt = 1 class-attribute instance-attribute # The minimum number of seeders required before downloading a release. required_flags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Require one or more indexer flags to be set on candidate releases. If the required flags are not set, the release will be rejected. All values supported by your Radarr instance version can be defined. As of Radarr v4.7.5, the following flags are available: g-freeleech g-halfleech g-doubleupload ptp-golden ptp-approved hdb-internal ahd-internal g-scene g-freeleech75 g-freeleech25 ahd-userrelease seed_ratio : Optional [ float ] = None class-attribute instance-attribute # The seed ratio a torrent should reach before stopping. If unset or set to null , use the download client's defaults. seed_time : Optional [ int ] = None class-attribute instance-attribute # The amount of time (in minutes) a torrent should be seeded before stopping. If unset or set to null , use the download client's defaults. base_url : AnyHttpUrl = 'https://filelist.io' class-attribute instance-attribute # FileList API URL. Do not change this unless you know what you're doing, as your API key will be sent to this host. username : NonEmptyStr instance-attribute # FileList username. passkey : Password instance-attribute # FileList account API key. categories : Set [ FilelistCategory ] = { FilelistCategory . MOVIES_HD , FilelistCategory . MOVIES_SD , FilelistCategory . MOVIES_4K } class-attribute instance-attribute # Categories to monitor for standard/daily show new releases. Set to an empty list to not monitor for standard/daily shows. Values: Movies SD Movies DVD Movies DVD-RO Movies HD Movies HD-RO Movies 4K Movies Blu-Ray Movies 4K Blu-Ray Movies 3D XXX tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Only monitor releases that match at least one of the defined tags. If unset, monitor all releases using this indexer. HDBits # Monitor for new releases on the HDBits private torrent tracker. type : Literal [ 'hdbits' ] = 'hdbits' class-attribute instance-attribute # Type value associated with this kind of indexer. enable_rss : bool = True class-attribute instance-attribute # If enabled, use this indexer to watch for files that are wanted and missing or have not yet reached their cutoff. enable_automatic_search : bool = True class-attribute instance-attribute # If enabled, use this indexer for automatic searches, including Search on Add. enable_interactive_search : bool = True class-attribute instance-attribute # If enabled, use this indexer for manual interactive searches. priority : int = Field ( 25 , ge = 1 , le = 50 ) class-attribute instance-attribute # Priority of this indexer to prefer one indexer over another in release tiebreaker scenarios. 1 is highest priority and 50 is lowest priority. download_client : Optional [ NonEmptyStr ] = None class-attribute instance-attribute # The name of the download client to use for grabs from this indexer. If unset, use any compatible download client. minimum_seeders : PositiveInt = 1 class-attribute instance-attribute # The minimum number of seeders required before downloading a release. required_flags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Require one or more indexer flags to be set on candidate releases. If the required flags are not set, the release will be rejected. All values supported by your Radarr instance version can be defined. As of Radarr v4.7.5, the following flags are available: g-freeleech g-halfleech g-doubleupload ptp-golden ptp-approved hdb-internal ahd-internal g-scene g-freeleech75 g-freeleech25 ahd-userrelease seed_ratio : Optional [ float ] = None class-attribute instance-attribute # The seed ratio a torrent should reach before stopping. If unset or set to null , use the download client's defaults. seed_time : Optional [ int ] = None class-attribute instance-attribute # The amount of time (in minutes) a torrent should be seeded before stopping. If unset or set to null , use the download client's defaults. base_url : AnyHttpUrl = 'https://hdbits.org' class-attribute instance-attribute # HDBits API URL. Do not change this unless you know what you're doing, as your API key will be sent to this host. username : NonEmptyStr instance-attribute # HDBits account username. api_key : Password instance-attribute # HDBits API key assigned to the account. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Only monitor releases that match at least one of the defined tags. If unset, monitor all releases using this indexer. IPTorrents # Monitor for releases using the legacy API for the IPTorrents private torrent tracker. Warning IPTorrents' legacy API does not support automatic searching. It is recommended to instead configure IPTorrents as a Torznab indexer . type : Literal [ 'iptorrents' ] = 'iptorrents' class-attribute instance-attribute # Type value associated with this kind of indexer. enable_rss : bool = True class-attribute instance-attribute # If enabled, use this indexer to watch for files that are wanted and missing or have not yet reached their cutoff. enable_automatic_search : bool = True class-attribute instance-attribute # If enabled, use this indexer for automatic searches, including Search on Add. enable_interactive_search : bool = True class-attribute instance-attribute # If enabled, use this indexer for manual interactive searches. priority : int = Field ( 25 , ge = 1 , le = 50 ) class-attribute instance-attribute # Priority of this indexer to prefer one indexer over another in release tiebreaker scenarios. 1 is highest priority and 50 is lowest priority. download_client : Optional [ NonEmptyStr ] = None class-attribute instance-attribute # The name of the download client to use for grabs from this indexer. If unset, use any compatible download client. minimum_seeders : PositiveInt = 1 class-attribute instance-attribute # The minimum number of seeders required before downloading a release. required_flags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Require one or more indexer flags to be set on candidate releases. If the required flags are not set, the release will be rejected. All values supported by your Radarr instance version can be defined. As of Radarr v4.7.5, the following flags are available: g-freeleech g-halfleech g-doubleupload ptp-golden ptp-approved hdb-internal ahd-internal g-scene g-freeleech75 g-freeleech25 ahd-userrelease seed_ratio : Optional [ float ] = None class-attribute instance-attribute # The seed ratio a torrent should reach before stopping. If unset or set to null , use the download client's defaults. seed_time : Optional [ int ] = None class-attribute instance-attribute # The amount of time (in minutes) a torrent should be seeded before stopping. If unset or set to null , use the download client's defaults. feed_url : RssUrl instance-attribute # The full RSS feed url generated by IPTorrents, using only the categories you selected (HD, SD, x264, etc ...). tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Only monitor releases that match at least one of the defined tags. If unset, monitor all releases using this indexer. Newznab # Monitor for new releases using a Newznab-compatible Usenet indexer. type : Literal [ 'newznab' ] = 'newznab' class-attribute instance-attribute # Type value associated with this kind of indexer. enable_rss : bool = True class-attribute instance-attribute # If enabled, use this indexer to watch for files that are wanted and missing or have not yet reached their cutoff. enable_automatic_search : bool = True class-attribute instance-attribute # If enabled, use this indexer for automatic searches, including Search on Add. enable_interactive_search : bool = True class-attribute instance-attribute # If enabled, use this indexer for manual interactive searches. priority : int = Field ( 25 , ge = 1 , le = 50 ) class-attribute instance-attribute # Priority of this indexer to prefer one indexer over another in release tiebreaker scenarios. 1 is highest priority and 50 is lowest priority. download_client : Optional [ NonEmptyStr ] = None class-attribute instance-attribute # The name of the download client to use for grabs from this indexer. If unset, use any compatible download client. base_url : AnyHttpUrl instance-attribute # URL of the Newznab-compatible indexing site. api_path : NonEmptyStr = '/api' class-attribute instance-attribute # Newznab API endpoint. Usually /api . api_key : Password instance-attribute # API key for use with the Newznab API. categories : Set [ NabCategory ] = { NabCategory . MOVIES_FOREIGN , NabCategory . MOVIES_OTHER , NabCategory . MOVIES_SD , NabCategory . MOVIES_HD , NabCategory . MOVIES_UHD , NabCategory . MOVIES_BLURAY , NabCategory . MOVIES_3D } class-attribute instance-attribute # Categories to monitor for release. Define as empty to disable. Values: Movies-Foreign Movies-Other Movies-SD Movies-HD Movies-UHD Movies-Bluray Movies-3D remove_year : bool = False class-attribute instance-attribute # When set to true , excludes the release year of the media when searching the indexer. additional_parameters : Optional [ str ] = None class-attribute instance-attribute # Additional Newznab API parameters. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Only monitor releases that match at least one of the defined tags. If unset, monitor all releases using this indexer. Nyaa # Monitor for new releases on the configured Nyaa torrent tracker domain. type : Literal [ 'nyaa' ] = 'nyaa' class-attribute instance-attribute # Type value associated with this kind of indexer. enable_rss : bool = True class-attribute instance-attribute # If enabled, use this indexer to watch for files that are wanted and missing or have not yet reached their cutoff. enable_automatic_search : bool = True class-attribute instance-attribute # If enabled, use this indexer for automatic searches, including Search on Add. enable_interactive_search : bool = True class-attribute instance-attribute # If enabled, use this indexer for manual interactive searches. priority : int = Field ( 25 , ge = 1 , le = 50 ) class-attribute instance-attribute # Priority of this indexer to prefer one indexer over another in release tiebreaker scenarios. 1 is highest priority and 50 is lowest priority. download_client : Optional [ NonEmptyStr ] = None class-attribute instance-attribute # The name of the download client to use for grabs from this indexer. If unset, use any compatible download client. minimum_seeders : PositiveInt = 1 class-attribute instance-attribute # The minimum number of seeders required before downloading a release. required_flags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Require one or more indexer flags to be set on candidate releases. If the required flags are not set, the release will be rejected. All values supported by your Radarr instance version can be defined. As of Radarr v4.7.5, the following flags are available: g-freeleech g-halfleech g-doubleupload ptp-golden ptp-approved hdb-internal ahd-internal g-scene g-freeleech75 g-freeleech25 ahd-userrelease seed_ratio : Optional [ float ] = None class-attribute instance-attribute # The seed ratio a torrent should reach before stopping. If unset or set to null , use the download client's defaults. seed_time : Optional [ int ] = None class-attribute instance-attribute # The amount of time (in minutes) a torrent should be seeded before stopping. If unset or set to null , use the download client's defaults. additional_parameters : Optional [ str ] = '&cats=1_0&filter=1' class-attribute instance-attribute # Parameters to send in the Nyaa search request. Note that if you change the category, you will have to add required/restricted rules about the subgroups to avoid foreign language releases. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Only monitor releases that match at least one of the defined tags. If unset, monitor all releases using this indexer. PassThePopcorn # Monitor for new releases using the PassThePopcorn private torrent tracker. type : Literal [ 'passthepopcorn' ] = 'passthepopcorn' class-attribute instance-attribute # Type value associated with this kind of indexer. enable_rss : bool = True class-attribute instance-attribute # If enabled, use this indexer to watch for files that are wanted and missing or have not yet reached their cutoff. enable_automatic_search : bool = True class-attribute instance-attribute # If enabled, use this indexer for automatic searches, including Search on Add. enable_interactive_search : bool = True class-attribute instance-attribute # If enabled, use this indexer for manual interactive searches. priority : int = Field ( 25 , ge = 1 , le = 50 ) class-attribute instance-attribute # Priority of this indexer to prefer one indexer over another in release tiebreaker scenarios. 1 is highest priority and 50 is lowest priority. download_client : Optional [ NonEmptyStr ] = None class-attribute instance-attribute # The name of the download client to use for grabs from this indexer. If unset, use any compatible download client. minimum_seeders : PositiveInt = 1 class-attribute instance-attribute # The minimum number of seeders required before downloading a release. required_flags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Require one or more indexer flags to be set on candidate releases. If the required flags are not set, the release will be rejected. All values supported by your Radarr instance version can be defined. As of Radarr v4.7.5, the following flags are available: g-freeleech g-halfleech g-doubleupload ptp-golden ptp-approved hdb-internal ahd-internal g-scene g-freeleech75 g-freeleech25 ahd-userrelease seed_ratio : Optional [ float ] = None class-attribute instance-attribute # The seed ratio a torrent should reach before stopping. If unset or set to null , use the download client's defaults. seed_time : Optional [ int ] = None class-attribute instance-attribute # The amount of time (in minutes) a torrent should be seeded before stopping. If unset or set to null , use the download client's defaults. base_url : AnyHttpUrl = 'https://passthepopcorn.me' class-attribute instance-attribute # PassThePopcorn API URL. Do not change this unless you know what you're doing, as your API key will be sent to this host. api_user : NonEmptyStr instance-attribute # The API user of the PassThePopcorn account, as shown in Edit Profile > Security. api_key : Password instance-attribute # PassThePopcorn API key associated with the account. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Only monitor releases that match at least one of the defined tags. If unset, monitor all releases using this indexer. TorrentPotato # Monitor for new releases using a legacy CouchPotato-compatible torrent tracker. type : Literal [ 'torrentpotato' ] = 'torrentpotato' class-attribute instance-attribute # Type value associated with this kind of indexer. enable_rss : bool = True class-attribute instance-attribute # If enabled, use this indexer to watch for files that are wanted and missing or have not yet reached their cutoff. enable_automatic_search : bool = True class-attribute instance-attribute # If enabled, use this indexer for automatic searches, including Search on Add. enable_interactive_search : bool = True class-attribute instance-attribute # If enabled, use this indexer for manual interactive searches. priority : int = Field ( 25 , ge = 1 , le = 50 ) class-attribute instance-attribute # Priority of this indexer to prefer one indexer over another in release tiebreaker scenarios. 1 is highest priority and 50 is lowest priority. download_client : Optional [ NonEmptyStr ] = None class-attribute instance-attribute # The name of the download client to use for grabs from this indexer. If unset, use any compatible download client. minimum_seeders : PositiveInt = 1 class-attribute instance-attribute # The minimum number of seeders required before downloading a release. required_flags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Require one or more indexer flags to be set on candidate releases. If the required flags are not set, the release will be rejected. All values supported by your Radarr instance version can be defined. As of Radarr v4.7.5, the following flags are available: g-freeleech g-halfleech g-doubleupload ptp-golden ptp-approved hdb-internal ahd-internal g-scene g-freeleech75 g-freeleech25 ahd-userrelease seed_ratio : Optional [ float ] = None class-attribute instance-attribute # The seed ratio a torrent should reach before stopping. If unset or set to null , use the download client's defaults. seed_time : Optional [ int ] = None class-attribute instance-attribute # The amount of time (in minutes) a torrent should be seeded before stopping. If unset or set to null , use the download client's defaults. base_url : AnyHttpUrl = 'https://passthepopcorn.me' class-attribute instance-attribute # TorrentPotato indexer API URL. username : NonEmptyStr instance-attribute # TorrentPotato indexer username. passkey : Password instance-attribute # Password for the TorrentPotato indexer user. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Only monitor releases that match at least one of the defined tags. If unset, monitor all releases using this indexer. Torrent RSS Feed # Monitor for new releases from a torrent tracker RSS feed. Warning This indexer does not support automatic searching. It is recommended to use an indexer that natively communicates with a tracker using an API. type : Literal [ 'torrent-rss' , 'torrent-rss-feed' , 'torrent_rss' , 'torrent_rss_feed' , 'torrentrss' , 'torrentrssfeed' ] = 'torrent-rss' class-attribute instance-attribute # Type values associated with this kind of indexer. enable_rss : bool = True class-attribute instance-attribute # If enabled, use this indexer to watch for files that are wanted and missing or have not yet reached their cutoff. enable_automatic_search : bool = True class-attribute instance-attribute # If enabled, use this indexer for automatic searches, including Search on Add. enable_interactive_search : bool = True class-attribute instance-attribute # If enabled, use this indexer for manual interactive searches. priority : int = Field ( 25 , ge = 1 , le = 50 ) class-attribute instance-attribute # Priority of this indexer to prefer one indexer over another in release tiebreaker scenarios. 1 is highest priority and 50 is lowest priority. download_client : Optional [ NonEmptyStr ] = None class-attribute instance-attribute # The name of the download client to use for grabs from this indexer. If unset, use any compatible download client. minimum_seeders : PositiveInt = 1 class-attribute instance-attribute # The minimum number of seeders required before downloading a release. required_flags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Require one or more indexer flags to be set on candidate releases. If the required flags are not set, the release will be rejected. All values supported by your Radarr instance version can be defined. As of Radarr v4.7.5, the following flags are available: g-freeleech g-halfleech g-doubleupload ptp-golden ptp-approved hdb-internal ahd-internal g-scene g-freeleech75 g-freeleech25 ahd-userrelease seed_ratio : Optional [ float ] = None class-attribute instance-attribute # The seed ratio a torrent should reach before stopping. If unset or set to null , use the download client's defaults. seed_time : Optional [ int ] = None class-attribute instance-attribute # The amount of time (in minutes) a torrent should be seeded before stopping. If unset or set to null , use the download client's defaults. cookie : Optional [ str ] = None class-attribute instance-attribute # Session cookie for accessing the RSS feed. If the RSS feed requires one, this should be retrieved manually via a web browser. allow_zero_size : bool = False class-attribute instance-attribute # Allow access to releases that don't specify release size. As size checks will not be performed, be careful when enabling this option. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Only monitor releases that match at least one of the defined tags. If unset, monitor all releases using this indexer. Torznab # Monitor for new releases using a Torznab-compatible torrent tracker or indexer application. type : Literal [ 'torznab' ] = 'torznab' class-attribute instance-attribute # Type value associated with this kind of indexer. enable_rss : bool = True class-attribute instance-attribute # If enabled, use this indexer to watch for files that are wanted and missing or have not yet reached their cutoff. enable_automatic_search : bool = True class-attribute instance-attribute # If enabled, use this indexer for automatic searches, including Search on Add. enable_interactive_search : bool = True class-attribute instance-attribute # If enabled, use this indexer for manual interactive searches. priority : int = Field ( 25 , ge = 1 , le = 50 ) class-attribute instance-attribute # Priority of this indexer to prefer one indexer over another in release tiebreaker scenarios. 1 is highest priority and 50 is lowest priority. download_client : Optional [ NonEmptyStr ] = None class-attribute instance-attribute # The name of the download client to use for grabs from this indexer. If unset, use any compatible download client. minimum_seeders : PositiveInt = 1 class-attribute instance-attribute # The minimum number of seeders required before downloading a release. required_flags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Require one or more indexer flags to be set on candidate releases. If the required flags are not set, the release will be rejected. All values supported by your Radarr instance version can be defined. As of Radarr v4.7.5, the following flags are available: g-freeleech g-halfleech g-doubleupload ptp-golden ptp-approved hdb-internal ahd-internal g-scene g-freeleech75 g-freeleech25 ahd-userrelease seed_ratio : Optional [ float ] = None class-attribute instance-attribute # The seed ratio a torrent should reach before stopping. If unset or set to null , use the download client's defaults. seed_time : Optional [ int ] = None class-attribute instance-attribute # The amount of time (in minutes) a torrent should be seeded before stopping. If unset or set to null , use the download client's defaults. base_url : AnyHttpUrl instance-attribute # URL of the Torznab-compatible indexing site. api_path : NonEmptyStr = '/api' class-attribute instance-attribute # Torznab API endpoint. Usually /api . api_key : Password instance-attribute # API key for use with the Torznab API. categories : Set [ NabCategory ] = { NabCategory . MOVIES_FOREIGN , NabCategory . MOVIES_OTHER , NabCategory . MOVIES_SD , NabCategory . MOVIES_HD , NabCategory . MOVIES_UHD , NabCategory . MOVIES_BLURAY , NabCategory . MOVIES_3D } class-attribute instance-attribute # Categories to monitor for standard/daily shows. Define as empty to disable. Values: TV-WEBDL TV-Foreign TV-SD TV-HD TV-UHD TV-Other TV-Sports TV-Anime TV-Documentary remove_year : bool = False class-attribute instance-attribute # When set to true , excludes the release year of the media when searching the indexer. additional_parameters : Optional [ str ] = None class-attribute instance-attribute # Additional Torznab API parameters. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Only monitor releases that match at least one of the defined tags. If unset, monitor all releases using this indexer.","title":"Indexers"},{"location":"plugins/radarr/configuration/settings/indexers/#indexers","text":"Note Instead of manually configuring indexers for each of your Radarr instances, it is highly recommended to setup a Prowlarr indexer manager, and manage it using the Prowlarr plugin for Buildarr . This is particularly convenient when managing more than one Radarr instance. When managing indexers using Prowlarr, do not add any indexer definitions to this Radarr instance in Buildarr, and ensure delete_unmanaged is set to false . Indexers are used to monitor for new releases of media on external trackers. When a suitable release has been found, Radarr registers it for download on one of the configured download clients. radarr : settings : indexers : minimum_age : 0 # minutes retention : 0 # days maximum_size : 0 # MB rss_sync_interval : 15 # minutes delete_unmanaged : false # Better to leave off for the most part. definitions : Nyaa : # Indexer name type : nyaa # Type of indexer enable_rss : true enable_automatic_search : true enable_interactive_search : true indexer_priority : 25 download_client : null website_url : https://example.com tags : - anime-movies The following parameters are available for configuring indexers and how they are handled by Radarr. For more information on how Radarr finds movies, refer to the FAQ on WikiArr .","title":"Indexers"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.RadarrIndexersSettings.minimum_age","text":"Minimum age (in minutes) of NZBs before they are grabbed. Applies to Usenet only. Use this to give new releases time to propagate to your Usenet provider.","title":"minimum_age"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.RadarrIndexersSettings.retention","text":"Retention of releases (in days). Applies to Usenet only. Set to 0 for unlimited retention.","title":"retention"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.RadarrIndexersSettings.maximum_size","text":"Maximum size for a release to be grabbed, in megabytes (MB). Set to 0 to set for unlimited size.","title":"maximum_size"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.RadarrIndexersSettings.rss_sync_interval","text":"Interval (in minutes) to sync RSS feeds with indexers. Set to 0 to disable syncing. WARNING: This also disables automatic release grabbing.","title":"rss_sync_interval"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.RadarrIndexersSettings.delete_unmanaged","text":"Automatically delete indexers not configured by Buildarr. Take care when enabling this option, as it will also delete indexers created by external applications such as Prowlarr. If unsure, leave set at the default of false .","title":"delete_unmanaged"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.RadarrIndexersSettings.definitions","text":"Indexers to manage via Buildarr are defined here.","title":"definitions"},{"location":"plugins/radarr/configuration/settings/indexers/#filelist","text":"Monitor for new releases on the FileList.io private torrent tracker.","title":"FileList"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.filelist.FilelistIndexer.type","text":"Type value associated with this kind of indexer.","title":"type"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.enable_rss","text":"If enabled, use this indexer to watch for files that are wanted and missing or have not yet reached their cutoff.","title":"enable_rss"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.enable_automatic_search","text":"If enabled, use this indexer for automatic searches, including Search on Add.","title":"enable_automatic_search"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.enable_interactive_search","text":"If enabled, use this indexer for manual interactive searches.","title":"enable_interactive_search"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.priority","text":"Priority of this indexer to prefer one indexer over another in release tiebreaker scenarios. 1 is highest priority and 50 is lowest priority.","title":"priority"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.download_client","text":"The name of the download client to use for grabs from this indexer. If unset, use any compatible download client.","title":"download_client"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.tags","text":"Only monitor releases that match at least one of the defined tags. If unset, monitor all releases using this indexer.","title":"tags"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.minimum_seeders","text":"The minimum number of seeders required before downloading a release.","title":"minimum_seeders"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.required_flags","text":"Require one or more indexer flags to be set on candidate releases. If the required flags are not set, the release will be rejected. All values supported by your Radarr instance version can be defined. As of Radarr v4.7.5, the following flags are available: g-freeleech g-halfleech g-doubleupload ptp-golden ptp-approved hdb-internal ahd-internal g-scene g-freeleech75 g-freeleech25 ahd-userrelease","title":"required_flags"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.seed_ratio","text":"The seed ratio a torrent should reach before stopping. If unset or set to null , use the download client's defaults.","title":"seed_ratio"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.seed_time","text":"The amount of time (in minutes) a torrent should be seeded before stopping. If unset or set to null , use the download client's defaults.","title":"seed_time"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.filelist.FilelistIndexer.base_url","text":"FileList API URL. Do not change this unless you know what you're doing, as your API key will be sent to this host.","title":"base_url"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.filelist.FilelistIndexer.username","text":"FileList username.","title":"username"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.filelist.FilelistIndexer.passkey","text":"FileList account API key.","title":"passkey"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.filelist.FilelistIndexer.categories","text":"Categories to monitor for standard/daily show new releases. Set to an empty list to not monitor for standard/daily shows. Values: Movies SD Movies DVD Movies DVD-RO Movies HD Movies HD-RO Movies 4K Movies Blu-Ray Movies 4K Blu-Ray Movies 3D XXX","title":"categories"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.tags","text":"Only monitor releases that match at least one of the defined tags. If unset, monitor all releases using this indexer.","title":"tags"},{"location":"plugins/radarr/configuration/settings/indexers/#hdbits","text":"Monitor for new releases on the HDBits private torrent tracker.","title":"HDBits"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.hdbits.HdbitsIndexer.type","text":"Type value associated with this kind of indexer.","title":"type"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.enable_rss","text":"If enabled, use this indexer to watch for files that are wanted and missing or have not yet reached their cutoff.","title":"enable_rss"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.enable_automatic_search","text":"If enabled, use this indexer for automatic searches, including Search on Add.","title":"enable_automatic_search"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.enable_interactive_search","text":"If enabled, use this indexer for manual interactive searches.","title":"enable_interactive_search"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.priority","text":"Priority of this indexer to prefer one indexer over another in release tiebreaker scenarios. 1 is highest priority and 50 is lowest priority.","title":"priority"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.download_client","text":"The name of the download client to use for grabs from this indexer. If unset, use any compatible download client.","title":"download_client"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.minimum_seeders","text":"The minimum number of seeders required before downloading a release.","title":"minimum_seeders"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.required_flags","text":"Require one or more indexer flags to be set on candidate releases. If the required flags are not set, the release will be rejected. All values supported by your Radarr instance version can be defined. As of Radarr v4.7.5, the following flags are available: g-freeleech g-halfleech g-doubleupload ptp-golden ptp-approved hdb-internal ahd-internal g-scene g-freeleech75 g-freeleech25 ahd-userrelease","title":"required_flags"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.seed_ratio","text":"The seed ratio a torrent should reach before stopping. If unset or set to null , use the download client's defaults.","title":"seed_ratio"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.seed_time","text":"The amount of time (in minutes) a torrent should be seeded before stopping. If unset or set to null , use the download client's defaults.","title":"seed_time"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.hdbits.HdbitsIndexer.base_url","text":"HDBits API URL. Do not change this unless you know what you're doing, as your API key will be sent to this host.","title":"base_url"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.hdbits.HdbitsIndexer.username","text":"HDBits account username.","title":"username"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.hdbits.HdbitsIndexer.api_key","text":"HDBits API key assigned to the account.","title":"api_key"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.tags","text":"Only monitor releases that match at least one of the defined tags. If unset, monitor all releases using this indexer.","title":"tags"},{"location":"plugins/radarr/configuration/settings/indexers/#iptorrents","text":"Monitor for releases using the legacy API for the IPTorrents private torrent tracker. Warning IPTorrents' legacy API does not support automatic searching. It is recommended to instead configure IPTorrents as a Torznab indexer .","title":"IPTorrents"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.iptorrents.IptorrentsIndexer.type","text":"Type value associated with this kind of indexer.","title":"type"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.enable_rss","text":"If enabled, use this indexer to watch for files that are wanted and missing or have not yet reached their cutoff.","title":"enable_rss"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.enable_automatic_search","text":"If enabled, use this indexer for automatic searches, including Search on Add.","title":"enable_automatic_search"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.enable_interactive_search","text":"If enabled, use this indexer for manual interactive searches.","title":"enable_interactive_search"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.priority","text":"Priority of this indexer to prefer one indexer over another in release tiebreaker scenarios. 1 is highest priority and 50 is lowest priority.","title":"priority"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.download_client","text":"The name of the download client to use for grabs from this indexer. If unset, use any compatible download client.","title":"download_client"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.minimum_seeders","text":"The minimum number of seeders required before downloading a release.","title":"minimum_seeders"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.required_flags","text":"Require one or more indexer flags to be set on candidate releases. If the required flags are not set, the release will be rejected. All values supported by your Radarr instance version can be defined. As of Radarr v4.7.5, the following flags are available: g-freeleech g-halfleech g-doubleupload ptp-golden ptp-approved hdb-internal ahd-internal g-scene g-freeleech75 g-freeleech25 ahd-userrelease","title":"required_flags"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.seed_ratio","text":"The seed ratio a torrent should reach before stopping. If unset or set to null , use the download client's defaults.","title":"seed_ratio"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.seed_time","text":"The amount of time (in minutes) a torrent should be seeded before stopping. If unset or set to null , use the download client's defaults.","title":"seed_time"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.iptorrents.IptorrentsIndexer.feed_url","text":"The full RSS feed url generated by IPTorrents, using only the categories you selected (HD, SD, x264, etc ...).","title":"feed_url"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.tags","text":"Only monitor releases that match at least one of the defined tags. If unset, monitor all releases using this indexer.","title":"tags"},{"location":"plugins/radarr/configuration/settings/indexers/#newznab","text":"Monitor for new releases using a Newznab-compatible Usenet indexer.","title":"Newznab"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.usenet.newznab.NewznabIndexer.type","text":"Type value associated with this kind of indexer.","title":"type"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.enable_rss","text":"If enabled, use this indexer to watch for files that are wanted and missing or have not yet reached their cutoff.","title":"enable_rss"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.enable_automatic_search","text":"If enabled, use this indexer for automatic searches, including Search on Add.","title":"enable_automatic_search"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.enable_interactive_search","text":"If enabled, use this indexer for manual interactive searches.","title":"enable_interactive_search"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.priority","text":"Priority of this indexer to prefer one indexer over another in release tiebreaker scenarios. 1 is highest priority and 50 is lowest priority.","title":"priority"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.download_client","text":"The name of the download client to use for grabs from this indexer. If unset, use any compatible download client.","title":"download_client"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.usenet.newznab.NewznabIndexer.base_url","text":"URL of the Newznab-compatible indexing site.","title":"base_url"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.usenet.newznab.NewznabIndexer.api_path","text":"Newznab API endpoint. Usually /api .","title":"api_path"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.usenet.newznab.NewznabIndexer.api_key","text":"API key for use with the Newznab API.","title":"api_key"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.usenet.newznab.NewznabIndexer.categories","text":"Categories to monitor for release. Define as empty to disable. Values: Movies-Foreign Movies-Other Movies-SD Movies-HD Movies-UHD Movies-Bluray Movies-3D","title":"categories"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.usenet.newznab.NewznabIndexer.remove_year","text":"When set to true , excludes the release year of the media when searching the indexer.","title":"remove_year"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.usenet.newznab.NewznabIndexer.additional_parameters","text":"Additional Newznab API parameters.","title":"additional_parameters"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.tags","text":"Only monitor releases that match at least one of the defined tags. If unset, monitor all releases using this indexer.","title":"tags"},{"location":"plugins/radarr/configuration/settings/indexers/#nyaa","text":"Monitor for new releases on the configured Nyaa torrent tracker domain.","title":"Nyaa"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.nyaa.NyaaIndexer.type","text":"Type value associated with this kind of indexer.","title":"type"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.enable_rss","text":"If enabled, use this indexer to watch for files that are wanted and missing or have not yet reached their cutoff.","title":"enable_rss"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.enable_automatic_search","text":"If enabled, use this indexer for automatic searches, including Search on Add.","title":"enable_automatic_search"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.enable_interactive_search","text":"If enabled, use this indexer for manual interactive searches.","title":"enable_interactive_search"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.priority","text":"Priority of this indexer to prefer one indexer over another in release tiebreaker scenarios. 1 is highest priority and 50 is lowest priority.","title":"priority"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.download_client","text":"The name of the download client to use for grabs from this indexer. If unset, use any compatible download client.","title":"download_client"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.minimum_seeders","text":"The minimum number of seeders required before downloading a release.","title":"minimum_seeders"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.required_flags","text":"Require one or more indexer flags to be set on candidate releases. If the required flags are not set, the release will be rejected. All values supported by your Radarr instance version can be defined. As of Radarr v4.7.5, the following flags are available: g-freeleech g-halfleech g-doubleupload ptp-golden ptp-approved hdb-internal ahd-internal g-scene g-freeleech75 g-freeleech25 ahd-userrelease","title":"required_flags"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.seed_ratio","text":"The seed ratio a torrent should reach before stopping. If unset or set to null , use the download client's defaults.","title":"seed_ratio"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.seed_time","text":"The amount of time (in minutes) a torrent should be seeded before stopping. If unset or set to null , use the download client's defaults.","title":"seed_time"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.nyaa.NyaaIndexer.additional_parameters","text":"Parameters to send in the Nyaa search request. Note that if you change the category, you will have to add required/restricted rules about the subgroups to avoid foreign language releases.","title":"additional_parameters"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.tags","text":"Only monitor releases that match at least one of the defined tags. If unset, monitor all releases using this indexer.","title":"tags"},{"location":"plugins/radarr/configuration/settings/indexers/#passthepopcorn","text":"Monitor for new releases using the PassThePopcorn private torrent tracker.","title":"PassThePopcorn"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.passthepopcorn.PassthepopcornIndexer.type","text":"Type value associated with this kind of indexer.","title":"type"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.enable_rss","text":"If enabled, use this indexer to watch for files that are wanted and missing or have not yet reached their cutoff.","title":"enable_rss"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.enable_automatic_search","text":"If enabled, use this indexer for automatic searches, including Search on Add.","title":"enable_automatic_search"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.enable_interactive_search","text":"If enabled, use this indexer for manual interactive searches.","title":"enable_interactive_search"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.priority","text":"Priority of this indexer to prefer one indexer over another in release tiebreaker scenarios. 1 is highest priority and 50 is lowest priority.","title":"priority"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.download_client","text":"The name of the download client to use for grabs from this indexer. If unset, use any compatible download client.","title":"download_client"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.minimum_seeders","text":"The minimum number of seeders required before downloading a release.","title":"minimum_seeders"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.required_flags","text":"Require one or more indexer flags to be set on candidate releases. If the required flags are not set, the release will be rejected. All values supported by your Radarr instance version can be defined. As of Radarr v4.7.5, the following flags are available: g-freeleech g-halfleech g-doubleupload ptp-golden ptp-approved hdb-internal ahd-internal g-scene g-freeleech75 g-freeleech25 ahd-userrelease","title":"required_flags"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.seed_ratio","text":"The seed ratio a torrent should reach before stopping. If unset or set to null , use the download client's defaults.","title":"seed_ratio"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.seed_time","text":"The amount of time (in minutes) a torrent should be seeded before stopping. If unset or set to null , use the download client's defaults.","title":"seed_time"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.passthepopcorn.PassthepopcornIndexer.base_url","text":"PassThePopcorn API URL. Do not change this unless you know what you're doing, as your API key will be sent to this host.","title":"base_url"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.passthepopcorn.PassthepopcornIndexer.api_user","text":"The API user of the PassThePopcorn account, as shown in Edit Profile > Security.","title":"api_user"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.passthepopcorn.PassthepopcornIndexer.api_key","text":"PassThePopcorn API key associated with the account.","title":"api_key"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.tags","text":"Only monitor releases that match at least one of the defined tags. If unset, monitor all releases using this indexer.","title":"tags"},{"location":"plugins/radarr/configuration/settings/indexers/#torrentpotato","text":"Monitor for new releases using a legacy CouchPotato-compatible torrent tracker.","title":"TorrentPotato"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.torrentpotato.TorrentpotatoIndexer.type","text":"Type value associated with this kind of indexer.","title":"type"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.enable_rss","text":"If enabled, use this indexer to watch for files that are wanted and missing or have not yet reached their cutoff.","title":"enable_rss"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.enable_automatic_search","text":"If enabled, use this indexer for automatic searches, including Search on Add.","title":"enable_automatic_search"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.enable_interactive_search","text":"If enabled, use this indexer for manual interactive searches.","title":"enable_interactive_search"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.priority","text":"Priority of this indexer to prefer one indexer over another in release tiebreaker scenarios. 1 is highest priority and 50 is lowest priority.","title":"priority"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.download_client","text":"The name of the download client to use for grabs from this indexer. If unset, use any compatible download client.","title":"download_client"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.minimum_seeders","text":"The minimum number of seeders required before downloading a release.","title":"minimum_seeders"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.required_flags","text":"Require one or more indexer flags to be set on candidate releases. If the required flags are not set, the release will be rejected. All values supported by your Radarr instance version can be defined. As of Radarr v4.7.5, the following flags are available: g-freeleech g-halfleech g-doubleupload ptp-golden ptp-approved hdb-internal ahd-internal g-scene g-freeleech75 g-freeleech25 ahd-userrelease","title":"required_flags"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.seed_ratio","text":"The seed ratio a torrent should reach before stopping. If unset or set to null , use the download client's defaults.","title":"seed_ratio"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.seed_time","text":"The amount of time (in minutes) a torrent should be seeded before stopping. If unset or set to null , use the download client's defaults.","title":"seed_time"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.torrentpotato.TorrentpotatoIndexer.base_url","text":"TorrentPotato indexer API URL.","title":"base_url"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.torrentpotato.TorrentpotatoIndexer.username","text":"TorrentPotato indexer username.","title":"username"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.torrentpotato.TorrentpotatoIndexer.passkey","text":"Password for the TorrentPotato indexer user.","title":"passkey"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.tags","text":"Only monitor releases that match at least one of the defined tags. If unset, monitor all releases using this indexer.","title":"tags"},{"location":"plugins/radarr/configuration/settings/indexers/#torrent-rss-feed","text":"Monitor for new releases from a torrent tracker RSS feed. Warning This indexer does not support automatic searching. It is recommended to use an indexer that natively communicates with a tracker using an API.","title":"Torrent RSS Feed"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.rss.TorrentRssIndexer.type","text":"Type values associated with this kind of indexer.","title":"type"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.enable_rss","text":"If enabled, use this indexer to watch for files that are wanted and missing or have not yet reached their cutoff.","title":"enable_rss"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.enable_automatic_search","text":"If enabled, use this indexer for automatic searches, including Search on Add.","title":"enable_automatic_search"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.enable_interactive_search","text":"If enabled, use this indexer for manual interactive searches.","title":"enable_interactive_search"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.priority","text":"Priority of this indexer to prefer one indexer over another in release tiebreaker scenarios. 1 is highest priority and 50 is lowest priority.","title":"priority"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.download_client","text":"The name of the download client to use for grabs from this indexer. If unset, use any compatible download client.","title":"download_client"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.minimum_seeders","text":"The minimum number of seeders required before downloading a release.","title":"minimum_seeders"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.required_flags","text":"Require one or more indexer flags to be set on candidate releases. If the required flags are not set, the release will be rejected. All values supported by your Radarr instance version can be defined. As of Radarr v4.7.5, the following flags are available: g-freeleech g-halfleech g-doubleupload ptp-golden ptp-approved hdb-internal ahd-internal g-scene g-freeleech75 g-freeleech25 ahd-userrelease","title":"required_flags"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.seed_ratio","text":"The seed ratio a torrent should reach before stopping. If unset or set to null , use the download client's defaults.","title":"seed_ratio"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.seed_time","text":"The amount of time (in minutes) a torrent should be seeded before stopping. If unset or set to null , use the download client's defaults.","title":"seed_time"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.rss.TorrentRssIndexer.cookie","text":"Session cookie for accessing the RSS feed. If the RSS feed requires one, this should be retrieved manually via a web browser.","title":"cookie"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.rss.TorrentRssIndexer.allow_zero_size","text":"Allow access to releases that don't specify release size. As size checks will not be performed, be careful when enabling this option.","title":"allow_zero_size"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.tags","text":"Only monitor releases that match at least one of the defined tags. If unset, monitor all releases using this indexer.","title":"tags"},{"location":"plugins/radarr/configuration/settings/indexers/#torznab","text":"Monitor for new releases using a Torznab-compatible torrent tracker or indexer application.","title":"Torznab"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.torznab.TorznabIndexer.type","text":"Type value associated with this kind of indexer.","title":"type"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.enable_rss","text":"If enabled, use this indexer to watch for files that are wanted and missing or have not yet reached their cutoff.","title":"enable_rss"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.enable_automatic_search","text":"If enabled, use this indexer for automatic searches, including Search on Add.","title":"enable_automatic_search"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.enable_interactive_search","text":"If enabled, use this indexer for manual interactive searches.","title":"enable_interactive_search"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.priority","text":"Priority of this indexer to prefer one indexer over another in release tiebreaker scenarios. 1 is highest priority and 50 is lowest priority.","title":"priority"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.download_client","text":"The name of the download client to use for grabs from this indexer. If unset, use any compatible download client.","title":"download_client"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.minimum_seeders","text":"The minimum number of seeders required before downloading a release.","title":"minimum_seeders"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.required_flags","text":"Require one or more indexer flags to be set on candidate releases. If the required flags are not set, the release will be rejected. All values supported by your Radarr instance version can be defined. As of Radarr v4.7.5, the following flags are available: g-freeleech g-halfleech g-doubleupload ptp-golden ptp-approved hdb-internal ahd-internal g-scene g-freeleech75 g-freeleech25 ahd-userrelease","title":"required_flags"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.seed_ratio","text":"The seed ratio a torrent should reach before stopping. If unset or set to null , use the download client's defaults.","title":"seed_ratio"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.base.TorrentIndexer.seed_time","text":"The amount of time (in minutes) a torrent should be seeded before stopping. If unset or set to null , use the download client's defaults.","title":"seed_time"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.torznab.TorznabIndexer.base_url","text":"URL of the Torznab-compatible indexing site.","title":"base_url"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.torznab.TorznabIndexer.api_path","text":"Torznab API endpoint. Usually /api .","title":"api_path"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.torznab.TorznabIndexer.api_key","text":"API key for use with the Torznab API.","title":"api_key"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.torznab.TorznabIndexer.categories","text":"Categories to monitor for standard/daily shows. Define as empty to disable. Values: TV-WEBDL TV-Foreign TV-SD TV-HD TV-UHD TV-Other TV-Sports TV-Anime TV-Documentary","title":"categories"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.torznab.TorznabIndexer.remove_year","text":"When set to true , excludes the release year of the media when searching the indexer.","title":"remove_year"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.torrent.torznab.TorznabIndexer.additional_parameters","text":"Additional Torznab API parameters.","title":"additional_parameters"},{"location":"plugins/radarr/configuration/settings/indexers/#buildarr_radarr.config.settings.indexers.base.Indexer.tags","text":"Only monitor releases that match at least one of the defined tags. If unset, monitor all releases using this indexer.","title":"tags"},{"location":"plugins/radarr/configuration/settings/media-management/","text":"Media Management # Naming, file management and root folder configuration. radarr : settings : media_management : rename_movies : true replace_illegal_characters : true colon_replacement : space-dash-space standard_movie_format : \"\\ {Movie CleanTitle} - \\ {Edition Tags }\\ {[Custom Formats] }\\ {[Quality Full] }\\ {[MediaInfo 3D] }\\ {[MediaInfo VideoDynamicRangeType] }\\ [{Mediainfo AudioCodec}{ Mediainfo AudioChannels}]\\ { [Mediainfo VideoCodec]}\\ { [Release Group]} - \\ Default\" movie_folder_format : '{Movie CleanTitle} ({Release Year}) [imdbid-{ImdbId}]' create_missing_movie_folders : false delete_empty_folders : false skip_free_space_check : false minimum_free_space : 100 # MB use_hardlinks : true import_using_script : false import_script_path : null import_extra_files : false unmonitor_deleted_movies : false propers_and_repacks : do-not-prefer analyze_video_files : true rescan_folder_after_refresh : always change_file_date : none recycling_bin : null recycling_bin_cleanup : 28 # days set_permissions : false chmod_folder : drwxr-xr-x chown_group : null root_folders : delete_unmanaged : true definitions : - /path/to/movies For more information on how to configure these options correctly, refer to these guides from WikiArr and TRaSH-Guides . Settings # rename_movies : bool = False class-attribute instance-attribute # Rename imported files to the defined standard format. Radarr will use the existing file name if renaming is disabled. replace_illegal_characters : bool = True class-attribute instance-attribute # Replace illegal characters within the file name. If set to false , Radarr will remove them instead. colon_replacement : ColonReplacement = ColonReplacement . delete class-attribute instance-attribute # Replace or delete full colons ( : ) in release titles with alternative characters when saving files. Values: delete - Delete without replacement (e.g. One:Two \u2192 OneTwo ) (default) dash - Replace with a dash (e.g. One:Two \u2192 One-Two ) dash-space - Replace with a dash and a space (e.g. One:Two \u2192 One- Two ) space-dash-space - Replace with a space-separated dash (e.g. One:Two \u2192 One - Two ) standard_movie_format : NonEmptyStr = '{Movie Title} ({Release Year}) {Quality Full}' class-attribute instance-attribute # File renaming format for a standard movie file. movie_folder_format : NonEmptyStr = '{Movie Title} ({Release Year})' class-attribute instance-attribute # Renaming format for a movie folder. create_missing_movie_folders : bool = False class-attribute instance-attribute # Create missing movie folders during disk scan. delete_empty_folders : bool = False class-attribute instance-attribute # Delete empty media folders during disk scan and when episode files are deleted. skip_free_space_check : bool = False class-attribute instance-attribute # Skip the free space check for the movie root folder. Only enable when Radarr is unable to detect free space from your series root folder. minimum_free_space : int = Field ( 100 , ge = 100 ) class-attribute instance-attribute # Prevent import if it would leave less than the specified amount of disk space available (in megabytes). Minimum value is 100 MB. use_hardlinks : bool = True class-attribute instance-attribute # Use hard links when trying to copy downloaded media files from torrents that are still being seeded. Using hard links saves a large amount of disk space due to having only one physical copy of the data accessible from multiple locations. However, using hard links requires that the following conditions are met in your setup: Torrent folders and root folders are on the same physical filesystem. When using containers, both containers use the same directory tree structure for all folders (e.g. /path/to/torrents and /path/to/movies must be located at the same paths according to both containers). Note Occasionally, file locks may prevent renaming files that are being seeded. You may temporarily disable seeding and use Radarr's rename function as a work around. import_using_script : bool = False class-attribute instance-attribute # Copy files for importing using a script (e.g. for transcoding). import_script_path : Optional [ str ] = None class-attribute instance-attribute # The path to the script for use for importing. Required when import_using_script is set to true . import_extra_files : bool = False class-attribute instance-attribute # Import matching extra files (subtitles, .nfo file, etc) after importing an episode file. unmonitor_deleted_movies : bool = False class-attribute instance-attribute # When set to true , movies deleted from disk are automatically unmonitored in Radarr. propers_and_repacks : PropersAndRepacks = PropersAndRepacks . prefer_and_upgrade class-attribute instance-attribute # Whether or not to automatically upgrade to Propers/Repacks. Values: prefer-and-upgrade - Automatically upgrade to propers/repacks do-not-upgrade-automatically - Prefer propers/repacks, but do not upgrade to them automatically do-not-prefer - Sort by custom format score over propers/repacks analyze_video_files : bool = True class-attribute instance-attribute # Extract video information such as resolution, runtime and codec information from files. This requires Radarr to read parts of the file, which may cause high disk or network activity during scans. rescan_folder_after_refresh : RescanFolderAfterRefresh = RescanFolderAfterRefresh . always class-attribute instance-attribute # Rescan the movie folder after refreshing the series. Values: always after-manual-refresh never Warning Radarr will not automatically detect changes to files unless this attribute is set to always . change_file_date : ChangeFileDate = ChangeFileDate . none class-attribute instance-attribute # Change file date on import/rescan. Values: none in-cinemas-date physical-release-date recycling_bin : Optional [ NonEmptyStr ] = None class-attribute instance-attribute # Episode files will go here when deleted instead of being permanently deleted. recycling_bin_cleanup : int = Field ( 7 , ge = 0 ) class-attribute instance-attribute # Files in the recycle bin older than the selected number of days will be cleaned up automatically. Set to 0 to disable automatic cleanup. set_permissions : bool = False class-attribute instance-attribute # Set whether or not chmod should run when files are imported/renamed. If you're unsure what this and the chmod / chown series of attributes do, do not alter them. chmod_folder : ChmodFolder = ChmodFolder . drwxr_xr_x class-attribute instance-attribute # Permissions to set on media folders and files during import/rename. File permissions are set without execute bits. This only works if the user running Radarr is the owner of the file. Ideally, the download client should already set these permissions appropriately. Values: drwxr-xr-x / 755 drwxrwxr-x / 775 drwxrwx--- / 770 drwxr-x--- / 750 drwxrwxrwx / 777 chown_group : Optional [ str ] = None class-attribute instance-attribute # Group name or GID. Use GID for remote file systems. This only works if the user running Radarr is the owner of the file. Ideally, the download client should be using the same group as Radarr. Root Folders # Root folders are paths used by Radarr as either a target folder for newly downloaded releases, or a source folder for Radarr to scan existing media. Root folders are assigned to releases when they are submitted for monitoring in Radarr. radarr : settings : media_management : root_folders : delete_unmanaged : false definitions : - /path/to/movies delete_unmanaged : bool = False class-attribute instance-attribute # Delete root folders from the remote Radarr instance if they are not explicitly defined in Buildarr. Before enabling this option, ensure all the root folders you want Radarr to scan are defined in Buildarr, as Radarr might remove imported media from its database when root folder definitions are deleted. If unsure, leave set to the default of false . definitions : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Define root folder paths to add to Radarr here.","title":"Media Management"},{"location":"plugins/radarr/configuration/settings/media-management/#media-management","text":"Naming, file management and root folder configuration. radarr : settings : media_management : rename_movies : true replace_illegal_characters : true colon_replacement : space-dash-space standard_movie_format : \"\\ {Movie CleanTitle} - \\ {Edition Tags }\\ {[Custom Formats] }\\ {[Quality Full] }\\ {[MediaInfo 3D] }\\ {[MediaInfo VideoDynamicRangeType] }\\ [{Mediainfo AudioCodec}{ Mediainfo AudioChannels}]\\ { [Mediainfo VideoCodec]}\\ { [Release Group]} - \\ Default\" movie_folder_format : '{Movie CleanTitle} ({Release Year}) [imdbid-{ImdbId}]' create_missing_movie_folders : false delete_empty_folders : false skip_free_space_check : false minimum_free_space : 100 # MB use_hardlinks : true import_using_script : false import_script_path : null import_extra_files : false unmonitor_deleted_movies : false propers_and_repacks : do-not-prefer analyze_video_files : true rescan_folder_after_refresh : always change_file_date : none recycling_bin : null recycling_bin_cleanup : 28 # days set_permissions : false chmod_folder : drwxr-xr-x chown_group : null root_folders : delete_unmanaged : true definitions : - /path/to/movies For more information on how to configure these options correctly, refer to these guides from WikiArr and TRaSH-Guides .","title":"Media Management"},{"location":"plugins/radarr/configuration/settings/media-management/#settings","text":"","title":"Settings"},{"location":"plugins/radarr/configuration/settings/media-management/#buildarr_radarr.config.settings.media_management.RadarrMediaManagementSettings.rename_movies","text":"Rename imported files to the defined standard format. Radarr will use the existing file name if renaming is disabled.","title":"rename_movies"},{"location":"plugins/radarr/configuration/settings/media-management/#buildarr_radarr.config.settings.media_management.RadarrMediaManagementSettings.replace_illegal_characters","text":"Replace illegal characters within the file name. If set to false , Radarr will remove them instead.","title":"replace_illegal_characters"},{"location":"plugins/radarr/configuration/settings/media-management/#buildarr_radarr.config.settings.media_management.RadarrMediaManagementSettings.colon_replacement","text":"Replace or delete full colons ( : ) in release titles with alternative characters when saving files. Values: delete - Delete without replacement (e.g. One:Two \u2192 OneTwo ) (default) dash - Replace with a dash (e.g. One:Two \u2192 One-Two ) dash-space - Replace with a dash and a space (e.g. One:Two \u2192 One- Two ) space-dash-space - Replace with a space-separated dash (e.g. One:Two \u2192 One - Two )","title":"colon_replacement"},{"location":"plugins/radarr/configuration/settings/media-management/#buildarr_radarr.config.settings.media_management.RadarrMediaManagementSettings.standard_movie_format","text":"File renaming format for a standard movie file.","title":"standard_movie_format"},{"location":"plugins/radarr/configuration/settings/media-management/#buildarr_radarr.config.settings.media_management.RadarrMediaManagementSettings.movie_folder_format","text":"Renaming format for a movie folder.","title":"movie_folder_format"},{"location":"plugins/radarr/configuration/settings/media-management/#buildarr_radarr.config.settings.media_management.RadarrMediaManagementSettings.create_missing_movie_folders","text":"Create missing movie folders during disk scan.","title":"create_missing_movie_folders"},{"location":"plugins/radarr/configuration/settings/media-management/#buildarr_radarr.config.settings.media_management.RadarrMediaManagementSettings.delete_empty_folders","text":"Delete empty media folders during disk scan and when episode files are deleted.","title":"delete_empty_folders"},{"location":"plugins/radarr/configuration/settings/media-management/#buildarr_radarr.config.settings.media_management.RadarrMediaManagementSettings.skip_free_space_check","text":"Skip the free space check for the movie root folder. Only enable when Radarr is unable to detect free space from your series root folder.","title":"skip_free_space_check"},{"location":"plugins/radarr/configuration/settings/media-management/#buildarr_radarr.config.settings.media_management.RadarrMediaManagementSettings.minimum_free_space","text":"Prevent import if it would leave less than the specified amount of disk space available (in megabytes). Minimum value is 100 MB.","title":"minimum_free_space"},{"location":"plugins/radarr/configuration/settings/media-management/#buildarr_radarr.config.settings.media_management.RadarrMediaManagementSettings.use_hardlinks","text":"Use hard links when trying to copy downloaded media files from torrents that are still being seeded. Using hard links saves a large amount of disk space due to having only one physical copy of the data accessible from multiple locations. However, using hard links requires that the following conditions are met in your setup: Torrent folders and root folders are on the same physical filesystem. When using containers, both containers use the same directory tree structure for all folders (e.g. /path/to/torrents and /path/to/movies must be located at the same paths according to both containers). Note Occasionally, file locks may prevent renaming files that are being seeded. You may temporarily disable seeding and use Radarr's rename function as a work around.","title":"use_hardlinks"},{"location":"plugins/radarr/configuration/settings/media-management/#buildarr_radarr.config.settings.media_management.RadarrMediaManagementSettings.import_using_script","text":"Copy files for importing using a script (e.g. for transcoding).","title":"import_using_script"},{"location":"plugins/radarr/configuration/settings/media-management/#buildarr_radarr.config.settings.media_management.RadarrMediaManagementSettings.import_script_path","text":"The path to the script for use for importing. Required when import_using_script is set to true .","title":"import_script_path"},{"location":"plugins/radarr/configuration/settings/media-management/#buildarr_radarr.config.settings.media_management.RadarrMediaManagementSettings.import_extra_files","text":"Import matching extra files (subtitles, .nfo file, etc) after importing an episode file.","title":"import_extra_files"},{"location":"plugins/radarr/configuration/settings/media-management/#buildarr_radarr.config.settings.media_management.RadarrMediaManagementSettings.unmonitor_deleted_movies","text":"When set to true , movies deleted from disk are automatically unmonitored in Radarr.","title":"unmonitor_deleted_movies"},{"location":"plugins/radarr/configuration/settings/media-management/#buildarr_radarr.config.settings.media_management.RadarrMediaManagementSettings.propers_and_repacks","text":"Whether or not to automatically upgrade to Propers/Repacks. Values: prefer-and-upgrade - Automatically upgrade to propers/repacks do-not-upgrade-automatically - Prefer propers/repacks, but do not upgrade to them automatically do-not-prefer - Sort by custom format score over propers/repacks","title":"propers_and_repacks"},{"location":"plugins/radarr/configuration/settings/media-management/#buildarr_radarr.config.settings.media_management.RadarrMediaManagementSettings.analyze_video_files","text":"Extract video information such as resolution, runtime and codec information from files. This requires Radarr to read parts of the file, which may cause high disk or network activity during scans.","title":"analyze_video_files"},{"location":"plugins/radarr/configuration/settings/media-management/#buildarr_radarr.config.settings.media_management.RadarrMediaManagementSettings.rescan_folder_after_refresh","text":"Rescan the movie folder after refreshing the series. Values: always after-manual-refresh never Warning Radarr will not automatically detect changes to files unless this attribute is set to always .","title":"rescan_folder_after_refresh"},{"location":"plugins/radarr/configuration/settings/media-management/#buildarr_radarr.config.settings.media_management.RadarrMediaManagementSettings.change_file_date","text":"Change file date on import/rescan. Values: none in-cinemas-date physical-release-date","title":"change_file_date"},{"location":"plugins/radarr/configuration/settings/media-management/#buildarr_radarr.config.settings.media_management.RadarrMediaManagementSettings.recycling_bin","text":"Episode files will go here when deleted instead of being permanently deleted.","title":"recycling_bin"},{"location":"plugins/radarr/configuration/settings/media-management/#buildarr_radarr.config.settings.media_management.RadarrMediaManagementSettings.recycling_bin_cleanup","text":"Files in the recycle bin older than the selected number of days will be cleaned up automatically. Set to 0 to disable automatic cleanup.","title":"recycling_bin_cleanup"},{"location":"plugins/radarr/configuration/settings/media-management/#buildarr_radarr.config.settings.media_management.RadarrMediaManagementSettings.set_permissions","text":"Set whether or not chmod should run when files are imported/renamed. If you're unsure what this and the chmod / chown series of attributes do, do not alter them.","title":"set_permissions"},{"location":"plugins/radarr/configuration/settings/media-management/#buildarr_radarr.config.settings.media_management.RadarrMediaManagementSettings.chmod_folder","text":"Permissions to set on media folders and files during import/rename. File permissions are set without execute bits. This only works if the user running Radarr is the owner of the file. Ideally, the download client should already set these permissions appropriately. Values: drwxr-xr-x / 755 drwxrwxr-x / 775 drwxrwx--- / 770 drwxr-x--- / 750 drwxrwxrwx / 777","title":"chmod_folder"},{"location":"plugins/radarr/configuration/settings/media-management/#buildarr_radarr.config.settings.media_management.RadarrMediaManagementSettings.chown_group","text":"Group name or GID. Use GID for remote file systems. This only works if the user running Radarr is the owner of the file. Ideally, the download client should be using the same group as Radarr.","title":"chown_group"},{"location":"plugins/radarr/configuration/settings/media-management/#root-folders","text":"Root folders are paths used by Radarr as either a target folder for newly downloaded releases, or a source folder for Radarr to scan existing media. Root folders are assigned to releases when they are submitted for monitoring in Radarr. radarr : settings : media_management : root_folders : delete_unmanaged : false definitions : - /path/to/movies","title":"Root Folders"},{"location":"plugins/radarr/configuration/settings/media-management/#buildarr_radarr.config.settings.media_management.RootFoldersSettings.delete_unmanaged","text":"Delete root folders from the remote Radarr instance if they are not explicitly defined in Buildarr. Before enabling this option, ensure all the root folders you want Radarr to scan are defined in Buildarr, as Radarr might remove imported media from its database when root folder definitions are deleted. If unsure, leave set to the default of false .","title":"delete_unmanaged"},{"location":"plugins/radarr/configuration/settings/media-management/#buildarr_radarr.config.settings.media_management.RootFoldersSettings.definitions","text":"Define root folder paths to add to Radarr here.","title":"definitions"},{"location":"plugins/radarr/configuration/settings/metadata/","text":"Metadata # Metadata-related configuration for Radarr is defined here. Optionally, Radarr can be configured to create metadata files alongside your media files in a variety of formats, to suit the media player you intend to use. radarr : settings : metadata : certification_country : us emby_legacy : ... kodi_emby : ... roksbox : ... wdtv : ... Multiple of these can be configured at a time. certification_country : LowerCaseNonEmptyStr = 'us' class-attribute instance-attribute # The country to use for movie certifications in Radarr. Use the two-letter ICAO country code, e.g. us for the United States. Emby (Legacy) # Output metadata files in the legacy Emby metadata format. radarr : settings : metadata : emby_legacy : enable : true movie_metadata : true enable : bool = False class-attribute instance-attribute # When set to true , enables creating metadata files in this format. movie_metadata : bool = True class-attribute instance-attribute # Create metadata file. Kodi (XBMC) / Emby # Output metadata files in a format suitable for Kodi (XBMC) or Emby. radarr : settings : metadata : kodi_emby : enable : true movie_metadata : true movie_metadata_url : true movie_metadata_language : english movie_images : true use_movie_nfo : true add_collection_name : true enable : bool = False class-attribute instance-attribute # When set to true , enables creating metadata files in this format. movie_metadata : bool = True class-attribute instance-attribute # Create metadata file. movie_metadata_url : bool = False class-attribute instance-attribute # Add the TMDB/IMDB URL to the written metadata file. No effect if movie_metadata is false . movie_metadata_language : NonEmptyStr = 'english' class-attribute instance-attribute # Write the metadata in the selected language (if available). When using a dialect of a language (e.g. Brazilian Portuguese), add the dialect type to the end, separated with a hypen, e.g. portuguese-brazil . original can be selected to use the original language of the media. movie_images : bool = False class-attribute instance-attribute # Save movie images. use_movie_nfo : bool = False class-attribute instance-attribute # Write movie metadata to movie.nfo , instead of the default <movie-filename>.nfo . add_collection_name : bool = False class-attribute instance-attribute # Write the collection name to the movie metadata. Roksbox # Output metadata files in a format suitable for Roksbox. radarr : settings : metadata : roksbox : enable : true movie_metadata : true movie_images : true enable : bool = False class-attribute instance-attribute # When set to true , enables creating metadata files in this format. movie_metadata : bool = True class-attribute instance-attribute # Create metadata file. movie_images : bool = True class-attribute instance-attribute # Save movie images. WDTV # Output metadata files in a format suitable for WDTV. radarr : settings : metadata : wdtv : enable : true movie_metadata : true movie_images : true enable : bool = False class-attribute instance-attribute # When set to true , enables creating metadata files in this format. movie_metadata : bool = True class-attribute instance-attribute # Create metadata file. movie_images : bool = True class-attribute instance-attribute # Save movie images.","title":"Metadata"},{"location":"plugins/radarr/configuration/settings/metadata/#metadata","text":"Metadata-related configuration for Radarr is defined here. Optionally, Radarr can be configured to create metadata files alongside your media files in a variety of formats, to suit the media player you intend to use. radarr : settings : metadata : certification_country : us emby_legacy : ... kodi_emby : ... roksbox : ... wdtv : ... Multiple of these can be configured at a time.","title":"Metadata"},{"location":"plugins/radarr/configuration/settings/metadata/#buildarr_radarr.config.settings.metadata.RadarrMetadataSettings.certification_country","text":"The country to use for movie certifications in Radarr. Use the two-letter ICAO country code, e.g. us for the United States.","title":"certification_country"},{"location":"plugins/radarr/configuration/settings/metadata/#emby-legacy","text":"Output metadata files in the legacy Emby metadata format. radarr : settings : metadata : emby_legacy : enable : true movie_metadata : true","title":"Emby (Legacy)"},{"location":"plugins/radarr/configuration/settings/metadata/#buildarr_radarr.config.settings.metadata.base.Metadata.enable","text":"When set to true , enables creating metadata files in this format.","title":"enable"},{"location":"plugins/radarr/configuration/settings/metadata/#buildarr_radarr.config.settings.metadata.emby_legacy.EmbyLegacyMetadata.movie_metadata","text":"Create metadata file.","title":"movie_metadata"},{"location":"plugins/radarr/configuration/settings/metadata/#kodi-xbmc-emby","text":"Output metadata files in a format suitable for Kodi (XBMC) or Emby. radarr : settings : metadata : kodi_emby : enable : true movie_metadata : true movie_metadata_url : true movie_metadata_language : english movie_images : true use_movie_nfo : true add_collection_name : true","title":"Kodi (XBMC) / Emby"},{"location":"plugins/radarr/configuration/settings/metadata/#buildarr_radarr.config.settings.metadata.base.Metadata.enable","text":"When set to true , enables creating metadata files in this format.","title":"enable"},{"location":"plugins/radarr/configuration/settings/metadata/#buildarr_radarr.config.settings.metadata.kodi_emby.KodiEmbyMetadata.movie_metadata","text":"Create metadata file.","title":"movie_metadata"},{"location":"plugins/radarr/configuration/settings/metadata/#buildarr_radarr.config.settings.metadata.kodi_emby.KodiEmbyMetadata.movie_metadata_url","text":"Add the TMDB/IMDB URL to the written metadata file. No effect if movie_metadata is false .","title":"movie_metadata_url"},{"location":"plugins/radarr/configuration/settings/metadata/#buildarr_radarr.config.settings.metadata.kodi_emby.KodiEmbyMetadata.movie_metadata_language","text":"Write the metadata in the selected language (if available). When using a dialect of a language (e.g. Brazilian Portuguese), add the dialect type to the end, separated with a hypen, e.g. portuguese-brazil . original can be selected to use the original language of the media.","title":"movie_metadata_language"},{"location":"plugins/radarr/configuration/settings/metadata/#buildarr_radarr.config.settings.metadata.kodi_emby.KodiEmbyMetadata.movie_images","text":"Save movie images.","title":"movie_images"},{"location":"plugins/radarr/configuration/settings/metadata/#buildarr_radarr.config.settings.metadata.kodi_emby.KodiEmbyMetadata.use_movie_nfo","text":"Write movie metadata to movie.nfo , instead of the default <movie-filename>.nfo .","title":"use_movie_nfo"},{"location":"plugins/radarr/configuration/settings/metadata/#buildarr_radarr.config.settings.metadata.kodi_emby.KodiEmbyMetadata.add_collection_name","text":"Write the collection name to the movie metadata.","title":"add_collection_name"},{"location":"plugins/radarr/configuration/settings/metadata/#roksbox","text":"Output metadata files in a format suitable for Roksbox. radarr : settings : metadata : roksbox : enable : true movie_metadata : true movie_images : true","title":"Roksbox"},{"location":"plugins/radarr/configuration/settings/metadata/#buildarr_radarr.config.settings.metadata.base.Metadata.enable","text":"When set to true , enables creating metadata files in this format.","title":"enable"},{"location":"plugins/radarr/configuration/settings/metadata/#buildarr_radarr.config.settings.metadata.roksbox.RoksboxMetadata.movie_metadata","text":"Create metadata file.","title":"movie_metadata"},{"location":"plugins/radarr/configuration/settings/metadata/#buildarr_radarr.config.settings.metadata.roksbox.RoksboxMetadata.movie_images","text":"Save movie images.","title":"movie_images"},{"location":"plugins/radarr/configuration/settings/metadata/#wdtv","text":"Output metadata files in a format suitable for WDTV. radarr : settings : metadata : wdtv : enable : true movie_metadata : true movie_images : true","title":"WDTV"},{"location":"plugins/radarr/configuration/settings/metadata/#buildarr_radarr.config.settings.metadata.base.Metadata.enable","text":"When set to true , enables creating metadata files in this format.","title":"enable"},{"location":"plugins/radarr/configuration/settings/metadata/#buildarr_radarr.config.settings.metadata.wdtv.WdtvMetadata.movie_metadata","text":"Create metadata file.","title":"movie_metadata"},{"location":"plugins/radarr/configuration/settings/metadata/#buildarr_radarr.config.settings.metadata.wdtv.WdtvMetadata.movie_images","text":"Save movie images.","title":"movie_images"},{"location":"plugins/radarr/configuration/settings/notifications/","text":"Notifications (Connect) # Radarr supports pushing notifications to external applications and services. The main uses cases for this are: Notifying users when media requests have been processed. Alerting administrators to issues with the operation of Radarr (e.g. indexers not working). Notification connections are defined using a dictionary structure, where the name of the definition becomes the name of the notification connection in Radarr. radarr : settings : notifications : delete_unmanaged : false definitions : Email : # Name of notification connection in Radarr. type : email # Required notification_triggers : # When to send notifications. on_grab : true on_import : true on_upgrade : true on_rename : false on_movie_added : true on_movie_delete : true on_movie_file_delete : true on_movie_file_delete_for_upgrade : true on_health_issue : true include_health_warnings : true on_health_restored : true on_manual_interaction_required : true on_application_update : true # Connection-specific parameters. server : smtp.example.com port : 465 use_encryption : true username : radarr password : fake-password from_address : radarr@example.com recipient_addresses : - admin@example.com # Tags can also be assigned to connections. tags : - anime-movies # Add additional connections here. Radarr supports pushing notifications to applications for a variety of different conditions. The conditions to notify can be configured using notification triggers . Note that some connection types only support a subset of these notification triggers. Check each notification connection type for a list of supported triggers. The following settings determine how Buildarr manages notification connection definitions in Radarr. delete_unmanaged : bool = False class-attribute instance-attribute # Automatically delete connections not configured in Buildarr. Warning Some notification connection types are not supported by Buildarr, and must be configured manually. Do not enable this option when using such connections. definitions : Dict [ str , Annotated [ NotificationType , Field ( discriminator = 'type' )]] = {} class-attribute instance-attribute # Define notification connections as a dictionary under this attribute. Apprise # Receive media update and health alert push notifications via an Apprise server. type : Literal [ 'apprise' ] = 'apprise' class-attribute instance-attribute # Type value associated with this kind of connection. base_url : AnyHttpUrl instance-attribute # Apprise server base URL, including http[s]:// and port if needed. configuration_key : Optional [ SecretStr ] = None class-attribute instance-attribute # Configuration key for the Persistent Storage Solution. Leave empty if Stateless URLs are used. stateless_urls : Set [ AnyHttpUrl ] = set () class-attribute instance-attribute # One or more URLs where notifications should be sent to. Leave undefined or empty if Persistent Storage is used. notification_type : AppriseNotificationType = AppriseNotificationType . INFO class-attribute instance-attribute # The Apprise notification type to classify notifications under. Values: Info (default) Success Warning Failure apprise_tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Optionally notify only targets with the defined tags. username : Optional [ str ] = None class-attribute instance-attribute # Basic HTTP auth username for authenticating with Apprise, if required. password : Optional [ SecretStr ] = None class-attribute instance-attribute # Basic HTTP auth password for authenticating with Apprise, if required. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to associate this notification connection with. Supported Notification Triggers # on_grab : bool = False class-attribute instance-attribute # Notify when movies are available for download and have been sent to a download client. on_import : bool = False class-attribute instance-attribute # Notify when movies are successfully imported (downloaded). on_upgrade : bool = False class-attribute instance-attribute # Notify when movies are upgraded to a better quality. on_movie_added : bool = False class-attribute instance-attribute # Notify when movies are added to Radarr's library to monitor. on_movie_delete : bool = False class-attribute instance-attribute # Notify when movies are deleted. on_movie_file_delete : bool = False class-attribute instance-attribute # Notify when movie files are deleted. on_movie_file_delete_for_upgrade : bool = False class-attribute instance-attribute # Notify when movie files are deleted for upgrades. on_health_issue : bool = False class-attribute instance-attribute # Notify on health check failures. include_health_warnings : bool = False class-attribute instance-attribute # When on_health_issue is enabled, notify for health check warnings in addition to errors. on_health_restored : bool = False class-attribute instance-attribute # Notify when health check failures have been resolved. on_manual_interaction_required : bool = False class-attribute instance-attribute # Notify when manual interaction is required to resolve an issue. on_application_update : bool = False class-attribute instance-attribute # Notify when Radarr gets updated to a new version. Boxcar # Receive media update and health alert push notifications via Boxcar. type : Literal [ 'boxcar' ] = 'boxcar' class-attribute instance-attribute # Type value associated with this kind of connection. access_token : Password instance-attribute # Access token for authenticating with Boxcar. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to associate this notification connection with. Supported Notification Triggers # on_grab : bool = False class-attribute instance-attribute # Notify when movies are available for download and have been sent to a download client. on_import : bool = False class-attribute instance-attribute # Notify when movies are successfully imported (downloaded). on_upgrade : bool = False class-attribute instance-attribute # Notify when movies are upgraded to a better quality. on_movie_added : bool = False class-attribute instance-attribute # Notify when movies are added to Radarr's library to monitor. on_movie_delete : bool = False class-attribute instance-attribute # Notify when movies are deleted. on_movie_file_delete : bool = False class-attribute instance-attribute # Notify when movie files are deleted. on_movie_file_delete_for_upgrade : bool = False class-attribute instance-attribute # Notify when movie files are deleted for upgrades. on_health_issue : bool = False class-attribute instance-attribute # Notify on health check failures. include_health_warnings : bool = False class-attribute instance-attribute # When on_health_issue is enabled, notify for health check warnings in addition to errors. on_health_restored : bool = False class-attribute instance-attribute # Notify when health check failures have been resolved. on_manual_interaction_required : bool = False class-attribute instance-attribute # Notify when manual interaction is required to resolve an issue. on_application_update : bool = False class-attribute instance-attribute # Notify when Radarr gets updated to a new version. Custom Script # Execute a local script on the Radarr host (container) when events occur. type : Literal [ 'custom-script' , 'custom_script' , 'customscript' ] = 'custom-script' class-attribute instance-attribute # Type value associated with this kind of connection. path : NonEmptyStr instance-attribute # Path of the script to execute. arguments : Optional [ str ] = None class-attribute instance-attribute # Arguments to pass to the script, if required. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to associate this notification connection with. Supported Notification Triggers # on_grab : bool = False class-attribute instance-attribute # Notify when movies are available for download and have been sent to a download client. on_import : bool = False class-attribute instance-attribute # Notify when movies are successfully imported (downloaded). on_upgrade : bool = False class-attribute instance-attribute # Notify when movies are upgraded to a better quality. on_rename : bool = False class-attribute instance-attribute # Notify when movies are renamed. on_movie_added : bool = False class-attribute instance-attribute # Notify when movies are added to Radarr's library to monitor. on_movie_delete : bool = False class-attribute instance-attribute # Notify when movies are deleted. on_movie_file_delete : bool = False class-attribute instance-attribute # Notify when movie files are deleted. on_movie_file_delete_for_upgrade : bool = False class-attribute instance-attribute # Notify when movie files are deleted for upgrades. on_health_issue : bool = False class-attribute instance-attribute # Notify on health check failures. include_health_warnings : bool = False class-attribute instance-attribute # When on_health_issue is enabled, notify for health check warnings in addition to errors. on_health_restored : bool = False class-attribute instance-attribute # Notify when health check failures have been resolved. on_manual_interaction_required : bool = False class-attribute instance-attribute # Notify when manual interaction is required to resolve an issue. on_application_update : bool = False class-attribute instance-attribute # Notify when Radarr gets updated to a new version. Discord # Send media update and health alert messages to a Discord server. type : Literal [ 'discord' ] = 'discord' class-attribute instance-attribute # Type value associated with this kind of connection. webhook_url : AnyHttpUrl instance-attribute # Discord server webhook URL. username : Optional [ str ] = None class-attribute instance-attribute # The username to post as. If unset, blank or set to None , use the default username set to the webhook URL. avatar : Optional [ str ] = None class-attribute instance-attribute # Change the avatar that is used for messages from this connection. If unset, blank or set to None , use the default avatar for the user. host : Optional [ str ] = None class-attribute instance-attribute # Override the host name that shows for this notification. If unset, blank or set to None , use the machine name. on_grab_fields : Set [ OnGrabField ] = { OnGrabField . overview , OnGrabField . rating , OnGrabField . genres , OnGrabField . quality , OnGrabField . group , OnGrabField . size , OnGrabField . links , OnGrabField . release , OnGrabField . poster , OnGrabField . fanart , OnGrabField . indexer , OnGrabField . custom_formats , OnGrabField . custom_format_score } class-attribute instance-attribute # Set the fields that are passed in for this 'on grab' notification. By default, all fields are passed in. Values: overview rating genres quality group size links release poster fanart indexer custom-formats custom-format-score Example: ... notifications : definitions : Discord : type : discord webhook_url : \"https://...\" on_grab_fields : - overview - quality - release on_import_fields : Set [ OnImportField ] = { OnImportField . overview , OnImportField . rating , OnImportField . genres , OnImportField . quality , OnImportField . codecs , OnImportField . group , OnImportField . size , OnImportField . languages , OnImportField . subtitles , OnImportField . links , OnImportField . release , OnImportField . poster , OnImportField . fanart } class-attribute instance-attribute # Set the fields that are passed in for this 'on import' notification. By default, all fields are passed in. Values: overview rating genres quality codecs group size languages subtitles links release poster fanart Example: ... notifications : definitions : Discord : type : discord webhook_url : https://... on_import_fields : - overview - quality - release on_manual_interaction_fields : Set [ OnManualInteractionField ] = { OnManualInteractionField . overview , OnManualInteractionField . rating , OnManualInteractionField . genres , OnManualInteractionField . quality , OnManualInteractionField . group , OnManualInteractionField . size , OnManualInteractionField . links , OnManualInteractionField . download_title , OnManualInteractionField . poster , OnManualInteractionField . fanart } class-attribute instance-attribute # tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to associate this notification connection with. Supported Notification Triggers # on_grab : bool = False class-attribute instance-attribute # Notify when movies are available for download and have been sent to a download client. on_import : bool = False class-attribute instance-attribute # Notify when movies are successfully imported (downloaded). on_upgrade : bool = False class-attribute instance-attribute # Notify when movies are upgraded to a better quality. on_rename : bool = False class-attribute instance-attribute # Notify when movies are renamed. on_movie_added : bool = False class-attribute instance-attribute # Notify when movies are added to Radarr's library to monitor. on_movie_delete : bool = False class-attribute instance-attribute # Notify when movies are deleted. on_movie_file_delete : bool = False class-attribute instance-attribute # Notify when movie files are deleted. on_movie_file_delete_for_upgrade : bool = False class-attribute instance-attribute # Notify when movie files are deleted for upgrades. on_health_issue : bool = False class-attribute instance-attribute # Notify on health check failures. include_health_warnings : bool = False class-attribute instance-attribute # When on_health_issue is enabled, notify for health check warnings in addition to errors. on_health_restored : bool = False class-attribute instance-attribute # Notify when health check failures have been resolved. on_manual_interaction_required : bool = False class-attribute instance-attribute # Notify when manual interaction is required to resolve an issue. on_application_update : bool = False class-attribute instance-attribute # Notify when Radarr gets updated to a new version. Email # Send media update and health alert messages to an email address. type : Literal [ 'email' ] = 'email' class-attribute instance-attribute # Type value associated with this kind of connection. server : NonEmptyStr instance-attribute # Hostname or IP address of the SMTP server to send outbound mail to. port : Port = 587 class-attribute instance-attribute # The port number on the SMTP server to use to submit mail. The default is to use STARTTLS on the standard SMTP submission port. use_encryption : bool = False class-attribute instance-attribute # Whether or not to use encryption when sending mail to the SMTP server. If the port number is set to 465, SMTPS (implicit TLS) will be used. Any other port number will result in STARTTLS being used. The default is to not require encryption. username : NonEmptyStr instance-attribute # SMTP username of the account to send the mail from. password : Password instance-attribute # SMTP password of the account to send the mail from. from_address : NameEmail instance-attribute # Email address to send the mail as. RFC-5322 formatted mailbox addresses are also supported, e.g. Radarr <radarr@example.com> . recipient_addresses : Annotated [ List [ NameEmail ], Field ( min_items = 1 , unique_items = True )] instance-attribute # List of email addresses to directly address the mail to. At least one address must be provided. cc_addresses : Annotated [ List [ NameEmail ], Field ( unique_items = True )] = [] class-attribute instance-attribute # Optional list of email addresses to copy (CC) the mail to. bcc_addresses : Annotated [ List [ NameEmail ], Field ( unique_items = True )] = [] class-attribute instance-attribute # Optional list of email addresses to blind copy (BCC) the mail to. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to associate this notification connection with. Supported Notification Triggers # on_grab : bool = False class-attribute instance-attribute # Notify when movies are available for download and have been sent to a download client. on_import : bool = False class-attribute instance-attribute # Notify when movies are successfully imported (downloaded). on_upgrade : bool = False class-attribute instance-attribute # Notify when movies are upgraded to a better quality. on_movie_added : bool = False class-attribute instance-attribute # Notify when movies are added to Radarr's library to monitor. on_movie_delete : bool = False class-attribute instance-attribute # Notify when movies are deleted. on_movie_file_delete : bool = False class-attribute instance-attribute # Notify when movie files are deleted. on_movie_file_delete_for_upgrade : bool = False class-attribute instance-attribute # Notify when movie files are deleted for upgrades. on_health_issue : bool = False class-attribute instance-attribute # Notify on health check failures. include_health_warnings : bool = False class-attribute instance-attribute # When on_health_issue is enabled, notify for health check warnings in addition to errors. on_health_restored : bool = False class-attribute instance-attribute # Notify when health check failures have been resolved. on_manual_interaction_required : bool = False class-attribute instance-attribute # Notify when manual interaction is required to resolve an issue. on_application_update : bool = False class-attribute instance-attribute # Notify when Radarr gets updated to a new version. Emby / Jellyfin # Send media update and health alert push notifications to an Emby or Jellyfin media server. type : Literal [ 'emby' , 'jellyfin' , 'emby-jellyfin' , 'emby_jellyfin' , 'embyjellyfin' ] = 'emby-jellyfin' class-attribute instance-attribute # Type values associated with this kind of connection. It is recommended to use the value representing the actual instance you are using, e.g. for Emby use emby , for Jellyfin use jellyfin . hostname : NonEmptyStr instance-attribute # Emby / Jellyfin server hostname. port : Port = 8096 class-attribute instance-attribute # Emby / Jellyfin server access port. use_ssl : bool = False class-attribute instance-attribute # Connect to the server using HTTPS. api_key : Password instance-attribute # API key for authenticating with Emby / Jellyfin. send_notifications : bool = False class-attribute instance-attribute # Have the server send notifications to configured providers. update_library : bool = False class-attribute instance-attribute # When set to true , update the Emby / Jellyfin libraries on import, rename or delete. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to associate this notification connection with. Supported Notification Triggers # on_grab : bool = False class-attribute instance-attribute # Notify when movies are available for download and have been sent to a download client. on_import : bool = False class-attribute instance-attribute # Notify when movies are successfully imported (downloaded). on_upgrade : bool = False class-attribute instance-attribute # Notify when movies are upgraded to a better quality. on_rename : bool = False class-attribute instance-attribute # Notify when movies are renamed. on_movie_delete : bool = False class-attribute instance-attribute # Notify when movies are deleted. on_movie_file_delete : bool = False class-attribute instance-attribute # Notify when movie files are deleted. on_movie_file_delete_for_upgrade : bool = False class-attribute instance-attribute # Notify when movie files are deleted for upgrades. on_health_issue : bool = False class-attribute instance-attribute # Notify on health check failures. include_health_warnings : bool = False class-attribute instance-attribute # When on_health_issue is enabled, notify for health check warnings in addition to errors. on_health_restored : bool = False class-attribute instance-attribute # Notify when health check failures have been resolved. on_application_update : bool = False class-attribute instance-attribute # Notify when Radarr gets updated to a new version. Gotify # Send media update and health alert push notifications through a Gotify server. type : Literal [ 'gotify' ] = 'gotify' class-attribute instance-attribute # Type value associated with this kind of connection. app_token : Password instance-attribute # App token to use to authenticate with Gotify. priority : GotifyPriority = GotifyPriority . normal class-attribute instance-attribute # Gotify notification priority. Values: min low normal high include_movie_poster : bool = False class-attribute instance-attribute # Include movie posters of the relevant media in messages. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to associate this notification connection with. Supported Notification Triggers # on_grab : bool = False class-attribute instance-attribute # Notify when movies are available for download and have been sent to a download client. on_import : bool = False class-attribute instance-attribute # Notify when movies are successfully imported (downloaded). on_upgrade : bool = False class-attribute instance-attribute # Notify when movies are upgraded to a better quality. on_movie_added : bool = False class-attribute instance-attribute # Notify when movies are added to Radarr's library to monitor. on_movie_delete : bool = False class-attribute instance-attribute # Notify when movies are deleted. on_movie_file_delete : bool = False class-attribute instance-attribute # Notify when movie files are deleted. on_movie_file_delete_for_upgrade : bool = False class-attribute instance-attribute # Notify when movie files are deleted for upgrades. on_health_issue : bool = False class-attribute instance-attribute # Notify on health check failures. include_health_warnings : bool = False class-attribute instance-attribute # When on_health_issue is enabled, notify for health check warnings in addition to errors. on_health_restored : bool = False class-attribute instance-attribute # Notify when health check failures have been resolved. on_manual_interaction_required : bool = False class-attribute instance-attribute # Notify when manual interaction is required to resolve an issue. on_application_update : bool = False class-attribute instance-attribute # Notify when Radarr gets updated to a new version. Join # Send media update and health alert push notifications via Join. type : Literal [ 'join' ] = 'join' class-attribute instance-attribute # Type value associated with this kind of connection. api_key : Password instance-attribute # API key to use to authenticate with Join. device_names : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # List of full or partial device names you'd like to send notifications to. If unset or empty, all devices will receive notifications. priority : JoinPriority = JoinPriority . normal class-attribute instance-attribute # Join push notification priority. Values: silent quiet normal high emergency tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to associate this notification connection with. Supported Notification Triggers # on_grab : bool = False class-attribute instance-attribute # Notify when movies are available for download and have been sent to a download client. on_import : bool = False class-attribute instance-attribute # Notify when movies are successfully imported (downloaded). on_upgrade : bool = False class-attribute instance-attribute # Notify when movies are upgraded to a better quality. on_movie_added : bool = False class-attribute instance-attribute # Notify when movies are added to Radarr's library to monitor. on_movie_delete : bool = False class-attribute instance-attribute # Notify when movies are deleted. on_movie_file_delete : bool = False class-attribute instance-attribute # Notify when movie files are deleted. on_movie_file_delete_for_upgrade : bool = False class-attribute instance-attribute # Notify when movie files are deleted for upgrades. on_health_issue : bool = False class-attribute instance-attribute # Notify on health check failures. include_health_warnings : bool = False class-attribute instance-attribute # When on_health_issue is enabled, notify for health check warnings in addition to errors. on_health_restored : bool = False class-attribute instance-attribute # Notify when health check failures have been resolved. on_manual_interaction_required : bool = False class-attribute instance-attribute # Notify when manual interaction is required to resolve an issue. on_application_update : bool = False class-attribute instance-attribute # Notify when Radarr gets updated to a new version. Kodi (XBMC) # Send media update and health alert push notifications to a Kodi (XBMC) media server. type : Literal [ 'kodi' , 'xbmc' ] = 'kodi' class-attribute instance-attribute # Type values associated with this kind of connection. hostname : NonEmptyStr instance-attribute # Kodi server hostname. port : Port = 8080 class-attribute instance-attribute # Kodi server access port. use_ssl : bool = False class-attribute instance-attribute # Connect to the server using HTTPS. username : NonEmptyStr instance-attribute # Kodi administrator username. password : Password instance-attribute # Kodi user password. display_notification : bool = False class-attribute instance-attribute # Display the notification in the Kodi GUI. display_time : int = 5 class-attribute instance-attribute # Display time of the notification (in seconds). clean_library : bool = False class-attribute instance-attribute # When set to true , clean the library update. always_update : bool = False class-attribute instance-attribute # Always update the library, even when a video is playing. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to associate this notification connection with. Supported Notification Triggers # on_grab : bool = False class-attribute instance-attribute # Notify when movies are available for download and have been sent to a download client. on_import : bool = False class-attribute instance-attribute # Notify when movies are successfully imported (downloaded). on_upgrade : bool = False class-attribute instance-attribute # Notify when movies are upgraded to a better quality. on_rename : bool = False class-attribute instance-attribute # Notify when movies are renamed. on_movie_delete : bool = False class-attribute instance-attribute # Notify when movies are deleted. on_movie_file_delete : bool = False class-attribute instance-attribute # Notify when movie files are deleted. on_movie_file_delete_for_upgrade : bool = False class-attribute instance-attribute # Notify when movie files are deleted for upgrades. on_health_issue : bool = False class-attribute instance-attribute # Notify on health check failures. include_health_warnings : bool = False class-attribute instance-attribute # When on_health_issue is enabled, notify for health check warnings in addition to errors. on_health_restored : bool = False class-attribute instance-attribute # Notify when health check failures have been resolved. on_manual_interaction_required : bool = False class-attribute instance-attribute # Notify when manual interaction is required to resolve an issue. on_application_update : bool = False class-attribute instance-attribute # Notify when Radarr gets updated to a new version. Mailgun # Send media update and health alert emails via the Mailgun delivery service. type : Literal [ 'mailgun' ] = 'mailgun' class-attribute instance-attribute # Type value associated with this kind of connection. api_key : Password instance-attribute # API key to use to authenticate with Mailgun. use_eu_endpoint : bool = False class-attribute instance-attribute # Send mail via the EU endpoint instead of the US one. from_address : NameEmail instance-attribute # Email address to send the mail as. RFC-5322 formatted mailbox addresses are also supported, e.g. Radarr <radarr@example.com> . sender_domain : NonEmptyStr instance-attribute # The domain from which the mail will be sent. recipient_addresses : Annotated [ List [ NameEmail ], Field ( min_items = 1 , unique_items = True )] instance-attribute # The recipient email addresses of the notification mail. At least one recipient address is required. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to associate this notification connection with. Supported Notification Triggers # on_grab : bool = False class-attribute instance-attribute # Notify when movies are available for download and have been sent to a download client. on_import : bool = False class-attribute instance-attribute # Notify when movies are successfully imported (downloaded). on_upgrade : bool = False class-attribute instance-attribute # Notify when movies are upgraded to a better quality. on_movie_added : bool = False class-attribute instance-attribute # Notify when movies are added to Radarr's library to monitor. on_movie_delete : bool = False class-attribute instance-attribute # Notify when movies are deleted. on_movie_file_delete : bool = False class-attribute instance-attribute # Notify when movie files are deleted. on_movie_file_delete_for_upgrade : bool = False class-attribute instance-attribute # Notify when movie files are deleted for upgrades. on_health_issue : bool = False class-attribute instance-attribute # Notify on health check failures. include_health_warnings : bool = False class-attribute instance-attribute # When on_health_issue is enabled, notify for health check warnings in addition to errors. on_health_restored : bool = False class-attribute instance-attribute # Notify when health check failures have been resolved. on_manual_interaction_required : bool = False class-attribute instance-attribute # Notify when manual interaction is required to resolve an issue. on_application_update : bool = False class-attribute instance-attribute # Notify when Radarr gets updated to a new version. Notifiarr # Send media update and health alert emails via the Notifiarr notification service. type : Literal [ 'notifiarr' ] = 'notifiarr' class-attribute instance-attribute # Type value associated with this kind of connection. api_key : Password instance-attribute # API key to use to authenticate with Notifiarr. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to associate this notification connection with. Supported Notification Triggers # on_grab : bool = False class-attribute instance-attribute # Notify when movies are available for download and have been sent to a download client. on_import : bool = False class-attribute instance-attribute # Notify when movies are successfully imported (downloaded). on_upgrade : bool = False class-attribute instance-attribute # Notify when movies are upgraded to a better quality. on_rename : bool = False class-attribute instance-attribute # Notify when movies are renamed. on_movie_added : bool = False class-attribute instance-attribute # Notify when movies are added to Radarr's library to monitor. on_movie_delete : bool = False class-attribute instance-attribute # Notify when movies are deleted. on_movie_file_delete : bool = False class-attribute instance-attribute # Notify when movie files are deleted. on_movie_file_delete_for_upgrade : bool = False class-attribute instance-attribute # Notify when movie files are deleted for upgrades. on_health_issue : bool = False class-attribute instance-attribute # Notify on health check failures. include_health_warnings : bool = False class-attribute instance-attribute # When on_health_issue is enabled, notify for health check warnings in addition to errors. on_health_restored : bool = False class-attribute instance-attribute # Notify when health check failures have been resolved. on_manual_interaction_required : bool = False class-attribute instance-attribute # Notify when manual interaction is required to resolve an issue. on_application_update : bool = False class-attribute instance-attribute # Notify when Radarr gets updated to a new version. ntfy # Send media update and health alert emails via the ntfy.sh notification service, or a self-hosted server using the same software. type : Literal [ 'ntfy' ] = 'ntfy' class-attribute instance-attribute # Type value associated with this kind of connection. base_url : Optional [ AnyHttpUrl ] = None class-attribute instance-attribute # Custom ntfy server URL. Leave blank, set to null or undefined to use the public server ( https://ntfy.sh ). access_token : Optional [ SecretStr ] = None class-attribute instance-attribute # Optional token-based authorisation. When both are defined, access token takes priority over username/password. username : Optional [ str ] = None class-attribute instance-attribute # Username to use to authenticate, if required. password : Optional [ SecretStr ] = None class-attribute instance-attribute # Password to use to authenticate, if required. priority : NtfyPriority = NtfyPriority . default class-attribute instance-attribute # Values: min low default high max topics : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # List of Topics to send notifications to. ntfy_tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Optional list of tags or emojis to use. click_url : Optional [ AnyHttpUrl ] = None class-attribute instance-attribute # Optional link for when the user clicks the notification. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to associate this notification connection with. Supported Notification Triggers # on_grab : bool = False class-attribute instance-attribute # Notify when movies are available for download and have been sent to a download client. on_import : bool = False class-attribute instance-attribute # Notify when movies are successfully imported (downloaded). on_upgrade : bool = False class-attribute instance-attribute # Notify when movies are upgraded to a better quality. on_movie_added : bool = False class-attribute instance-attribute # Notify when movies are added to Radarr's library to monitor. on_movie_delete : bool = False class-attribute instance-attribute # Notify when movies are deleted. on_movie_file_delete : bool = False class-attribute instance-attribute # Notify when movie files are deleted. on_movie_file_delete_for_upgrade : bool = False class-attribute instance-attribute # Notify when movie files are deleted for upgrades. on_health_issue : bool = False class-attribute instance-attribute # Notify on health check failures. include_health_warnings : bool = False class-attribute instance-attribute # When on_health_issue is enabled, notify for health check warnings in addition to errors. on_health_restored : bool = False class-attribute instance-attribute # Notify when health check failures have been resolved. on_manual_interaction_required : bool = False class-attribute instance-attribute # Notify when manual interaction is required to resolve an issue. on_application_update : bool = False class-attribute instance-attribute # Notify when Radarr gets updated to a new version. Plex Media Server # Buildarr is unable to manage Plex Media Server notification connections at this time, due to Plex requiring external authentication using OAuth2. Please add the Plex Media Server notification connection manually in the Radarr UI. Warning Ensure delete_unmanaged is set to false in Buildarr, otherwise the Plex Media Server notification connection will be removed from Radarr whenever Buildarr performs an update run. Prowl # Send media update and health alert push notifications to a Prowl client. type : Literal [ 'prowl' ] = 'prowl' class-attribute instance-attribute # Type value associated with this kind of connection. api_key : Password instance-attribute # API key to use when authenticating with Prowl. priority : ProwlPriority = ProwlPriority . normal class-attribute instance-attribute # Prowl push notification priority. Values: verylow low normal high emergency tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to associate this notification connection with. Supported Notification Triggers # on_grab : bool = False class-attribute instance-attribute # Notify when movies are available for download and have been sent to a download client. on_import : bool = False class-attribute instance-attribute # Notify when movies are successfully imported (downloaded). on_upgrade : bool = False class-attribute instance-attribute # Notify when movies are upgraded to a better quality. on_movie_added : bool = False class-attribute instance-attribute # Notify when movies are added to Radarr's library to monitor. on_movie_delete : bool = False class-attribute instance-attribute # Notify when movies are deleted. on_movie_file_delete : bool = False class-attribute instance-attribute # Notify when movie files are deleted. on_movie_file_delete_for_upgrade : bool = False class-attribute instance-attribute # Notify when movie files are deleted for upgrades. on_health_issue : bool = False class-attribute instance-attribute # Notify on health check failures. include_health_warnings : bool = False class-attribute instance-attribute # When on_health_issue is enabled, notify for health check warnings in addition to errors. on_health_restored : bool = False class-attribute instance-attribute # Notify when health check failures have been resolved. on_manual_interaction_required : bool = False class-attribute instance-attribute # Notify when manual interaction is required to resolve an issue. on_application_update : bool = False class-attribute instance-attribute # Notify when Radarr gets updated to a new version. Pushbullet # Send media update and health alert push notifications to Pushbullet devices. type : Literal [ 'pushbullet' ] = 'pushbullet' class-attribute instance-attribute # Type value associated with this kind of connection. api_key : Password instance-attribute # API key to use when authenticating with Pushbullet. device_ids : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # List of device IDs to send notifications to. If unset or empty, send to all devices. channel_tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # List of Channel Tags to send notifications to. sender_id : Optional [ str ] = None class-attribute instance-attribute # The device ID to send notifications from ( device_iden in the device's URL on pushbullet.com ). Leave unset, blank or set to null to send from yourself. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to associate this notification connection with. Supported Notification Triggers # on_grab : bool = False class-attribute instance-attribute # Notify when movies are available for download and have been sent to a download client. on_import : bool = False class-attribute instance-attribute # Notify when movies are successfully imported (downloaded). on_upgrade : bool = False class-attribute instance-attribute # Notify when movies are upgraded to a better quality. on_movie_added : bool = False class-attribute instance-attribute # Notify when movies are added to Radarr's library to monitor. on_movie_delete : bool = False class-attribute instance-attribute # Notify when movies are deleted. on_movie_file_delete : bool = False class-attribute instance-attribute # Notify when movie files are deleted. on_movie_file_delete_for_upgrade : bool = False class-attribute instance-attribute # Notify when movie files are deleted for upgrades. on_health_issue : bool = False class-attribute instance-attribute # Notify on health check failures. include_health_warnings : bool = False class-attribute instance-attribute # When on_health_issue is enabled, notify for health check warnings in addition to errors. on_health_restored : bool = False class-attribute instance-attribute # Notify when health check failures have been resolved. on_manual_interaction_required : bool = False class-attribute instance-attribute # Notify when manual interaction is required to resolve an issue. on_application_update : bool = False class-attribute instance-attribute # Notify when Radarr gets updated to a new version. Pushover # Send media update and health alert push notifications to Pushover devices. type : Literal [ 'pushover' ] = 'pushover' class-attribute instance-attribute # Type value associated with this kind of connection. user_key : PushoverApiKey instance-attribute # User key to use to authenticate with your Pushover account. api_key : PushoverApiKey instance-attribute # API key assigned to this application in Pushover. devices : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # List of device names to send notifications to. If unset or empty, send to all devices. priority : PushoverPriority = PushoverPriority . normal class-attribute instance-attribute # Pushover push notification priority. Values: silent quiet normal high emergency retry : Union [ Literal [ 0 ], PushoverRetry ] = 0 class-attribute instance-attribute # Interval to retry emergency alerts, in seconds. Minimum 30 seconds. Set to 0 to disable retrying emergency alerts. expire : int = Field ( 0 , ge = 0 , le = 86400 ) class-attribute instance-attribute # Threshold for retrying emergency alerts, in seconds. If retry is set, this should be set to a higher value. Maximum 86400 seconds (1 day). sound : Optional [ str ] = None class-attribute instance-attribute # Notification sound to use on devices. Leave unset, blank or set to null to use the default. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to associate this notification connection with. Supported Notification Triggers # on_grab : bool = False class-attribute instance-attribute # Notify when movies are available for download and have been sent to a download client. on_import : bool = False class-attribute instance-attribute # Notify when movies are successfully imported (downloaded). on_upgrade : bool = False class-attribute instance-attribute # Notify when movies are upgraded to a better quality. on_movie_added : bool = False class-attribute instance-attribute # Notify when movies are added to Radarr's library to monitor. on_movie_delete : bool = False class-attribute instance-attribute # Notify when movies are deleted. on_movie_file_delete : bool = False class-attribute instance-attribute # Notify when movie files are deleted. on_movie_file_delete_for_upgrade : bool = False class-attribute instance-attribute # Notify when movie files are deleted for upgrades. on_health_issue : bool = False class-attribute instance-attribute # Notify on health check failures. include_health_warnings : bool = False class-attribute instance-attribute # When on_health_issue is enabled, notify for health check warnings in addition to errors. on_health_restored : bool = False class-attribute instance-attribute # Notify when health check failures have been resolved. on_manual_interaction_required : bool = False class-attribute instance-attribute # Notify when manual interaction is required to resolve an issue. on_application_update : bool = False class-attribute instance-attribute # Notify when Radarr gets updated to a new version. Pushsafer # Send media update and health alert push notifications to Pushsafer devices. type : Literal [ 'pushsafer' ] = 'pushsafer' class-attribute instance-attribute # Type value associated with this kind of connection. api_key : Password instance-attribute # API key to use when authenticating with Pushbullet. device_ids : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # List of device IDs to send notifications to. If unset or empty, send to all devices. priority : PushsaferPriority = PushsaferPriority . normal class-attribute instance-attribute # Pushsafer push notification priority. Values: silent quiet normal high emergency retry : Union [ Literal [ 0 ], PushsaferRetry ] = 0 class-attribute instance-attribute # Interval to retry emergency alerts, in seconds. Minimum 60 seconds. Set to 0 to disable retrying emergency alerts. expire : int = Field ( 0 , ge = 0 , le = 10800 ) class-attribute instance-attribute # Threshold for retrying emergency alerts, in seconds. If retry is set, this should be set to a higher value. Maximum 10800 seconds (3 hours). sound : Optional [ int ] = None class-attribute instance-attribute # Notification sound number (0-62) to use when alerting. Leave unset, blank or set to null to use the default. vibration : Optional [ int ] = None class-attribute instance-attribute # Notification pattern (1-3) to use on devices. Leave unset, blank or set to null to use the device default. icon : Optional [ int ] = None class-attribute instance-attribute # Pushsafer icon number (1-181) to use in notifications. Leave unset, blank or set to null to use the default Pushsafer icon. icon_color : Optional [ Color ] = None class-attribute instance-attribute # The colour to use for the Pushsafer icon in the notification. Specify either a colour (e.g. yellow ) or a hex code ( #00FF00 ). tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to associate this notification connection with. Supported Notification Triggers # on_grab : bool = False class-attribute instance-attribute # Notify when movies are available for download and have been sent to a download client. on_import : bool = False class-attribute instance-attribute # Notify when movies are successfully imported (downloaded). on_upgrade : bool = False class-attribute instance-attribute # Notify when movies are upgraded to a better quality. on_movie_added : bool = False class-attribute instance-attribute # Notify when movies are added to Radarr's library to monitor. on_movie_delete : bool = False class-attribute instance-attribute # Notify when movies are deleted. on_movie_file_delete : bool = False class-attribute instance-attribute # Notify when movie files are deleted. on_movie_file_delete_for_upgrade : bool = False class-attribute instance-attribute # Notify when movie files are deleted for upgrades. on_health_issue : bool = False class-attribute instance-attribute # Notify on health check failures. include_health_warnings : bool = False class-attribute instance-attribute # When on_health_issue is enabled, notify for health check warnings in addition to errors. on_health_restored : bool = False class-attribute instance-attribute # Notify when health check failures have been resolved. on_manual_interaction_required : bool = False class-attribute instance-attribute # Notify when manual interaction is required to resolve an issue. on_application_update : bool = False class-attribute instance-attribute # Notify when Radarr gets updated to a new version. SendGrid # Send media update and health alert emails via the SendGrid delivery service. type : Literal [ 'sendgrid' ] = 'sendgrid' class-attribute instance-attribute # Type value associated with this kind of connection. api_key : Password instance-attribute # API key to use to authenticate with SendGrid. from_address : NameEmail instance-attribute # Email address to send the mail as. RFC-5322 formatted mailbox addresses are also supported, e.g. Radarr <radarr@example.com> . recipient_addresses : Annotated [ List [ NameEmail ], Field ( min_items = 1 , unique_items = True )] instance-attribute # The recipient email addresses of the notification mail. At least one recipient address is required. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to associate this notification connection with. Supported Notification Triggers # on_grab : bool = False class-attribute instance-attribute # Notify when movies are available for download and have been sent to a download client. on_import : bool = False class-attribute instance-attribute # Notify when movies are successfully imported (downloaded). on_upgrade : bool = False class-attribute instance-attribute # Notify when movies are upgraded to a better quality. on_movie_added : bool = False class-attribute instance-attribute # Notify when movies are added to Radarr's library to monitor. on_movie_delete : bool = False class-attribute instance-attribute # Notify when movies are deleted. on_movie_file_delete : bool = False class-attribute instance-attribute # Notify when movie files are deleted. on_movie_file_delete_for_upgrade : bool = False class-attribute instance-attribute # Notify when movie files are deleted for upgrades. on_health_issue : bool = False class-attribute instance-attribute # Notify on health check failures. include_health_warnings : bool = False class-attribute instance-attribute # When on_health_issue is enabled, notify for health check warnings in addition to errors. on_health_restored : bool = False class-attribute instance-attribute # Notify when health check failures have been resolved. on_manual_interaction_required : bool = False class-attribute instance-attribute # Notify when manual interaction is required to resolve an issue. on_application_update : bool = False class-attribute instance-attribute # Notify when Radarr gets updated to a new version. Signal # Send media update and health alert messages to a Signal user/group. type : Literal [ 'signal' ] = 'signal' class-attribute instance-attribute # Type value associated with this kind of connection. hostname : NonEmptyStr instance-attribute # Signal API hostname. port : Port = 8080 class-attribute instance-attribute # Signal API access port. use_ssl : bool = False class-attribute instance-attribute # Use HTTPS instead of HTTP when connecting to Signal API. sender_number : NonEmptyStr instance-attribute # Phone number of the sender registered in Signal. receiver_id : NonEmptyStr instance-attribute # Group ID / phone number of the receiver. username : NonEmptyStr instance-attribute # Signal API auth username. password : Password instance-attribute # Signal API auth password. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to associate this notification connection with. Supported Notification Triggers # on_grab : bool = False class-attribute instance-attribute # Notify when movies are available for download and have been sent to a download client. on_import : bool = False class-attribute instance-attribute # Notify when movies are successfully imported (downloaded). on_upgrade : bool = False class-attribute instance-attribute # Notify when movies are upgraded to a better quality. on_movie_added : bool = False class-attribute instance-attribute # Notify when movies are added to Radarr's library to monitor. on_movie_delete : bool = False class-attribute instance-attribute # Notify when movies are deleted. on_movie_file_delete : bool = False class-attribute instance-attribute # Notify when movie files are deleted. on_movie_file_delete_for_upgrade : bool = False class-attribute instance-attribute # Notify when movie files are deleted for upgrades. on_health_issue : bool = False class-attribute instance-attribute # Notify on health check failures. include_health_warnings : bool = False class-attribute instance-attribute # When on_health_issue is enabled, notify for health check warnings in addition to errors. on_health_restored : bool = False class-attribute instance-attribute # Notify when health check failures have been resolved. on_manual_interaction_required : bool = False class-attribute instance-attribute # Notify when manual interaction is required to resolve an issue. on_application_update : bool = False class-attribute instance-attribute # Notify when Radarr gets updated to a new version. Simplepush # Send media update and health alert messages to Simplepush. type : Literal [ 'simplepush' ] = 'simplepush' class-attribute instance-attribute # Type value associated with this kind of connection. api_key : Password instance-attribute # Simplepush API key. event : Optional [ str ] = None class-attribute instance-attribute # Customise the behaviour of push notification. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to associate this notification connection with. Supported Notification Triggers # on_grab : bool = False class-attribute instance-attribute # Notify when movies are available for download and have been sent to a download client. on_import : bool = False class-attribute instance-attribute # Notify when movies are successfully imported (downloaded). on_upgrade : bool = False class-attribute instance-attribute # Notify when movies are upgraded to a better quality. on_movie_added : bool = False class-attribute instance-attribute # Notify when movies are added to Radarr's library to monitor. on_movie_delete : bool = False class-attribute instance-attribute # Notify when movies are deleted. on_movie_file_delete : bool = False class-attribute instance-attribute # Notify when movie files are deleted. on_movie_file_delete_for_upgrade : bool = False class-attribute instance-attribute # Notify when movie files are deleted for upgrades. on_health_issue : bool = False class-attribute instance-attribute # Notify on health check failures. include_health_warnings : bool = False class-attribute instance-attribute # When on_health_issue is enabled, notify for health check warnings in addition to errors. on_health_restored : bool = False class-attribute instance-attribute # Notify when health check failures have been resolved. on_manual_interaction_required : bool = False class-attribute instance-attribute # Notify when manual interaction is required to resolve an issue. on_application_update : bool = False class-attribute instance-attribute # Notify when Radarr gets updated to a new version. Slack # Send media update and health alert messages to a Slack channel. type : Literal [ 'slack' ] = 'slack' class-attribute instance-attribute # Type value associated with this kind of connection. webhook_url : AnyHttpUrl instance-attribute # Webhook URL for the Slack channel to send to. username : NonEmptyStr instance-attribute # Username to post as. icon : Optional [ str ] = None class-attribute instance-attribute # The icon that is used for messages from this integration (emoji or URL). If unset, blank or set to None , use the default for the user. channel : Optional [ str ] = None class-attribute instance-attribute # If set, overrides the default channel in the webhook. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to associate this notification connection with. Supported Notification Triggers # on_grab : bool = False class-attribute instance-attribute # Notify when movies are available for download and have been sent to a download client. on_import : bool = False class-attribute instance-attribute # Notify when movies are successfully imported (downloaded). on_upgrade : bool = False class-attribute instance-attribute # Notify when movies are upgraded to a better quality. on_rename : bool = False class-attribute instance-attribute # Notify when movies are renamed. on_movie_delete : bool = False class-attribute instance-attribute # Notify when movies are deleted. on_movie_file_delete : bool = False class-attribute instance-attribute # Notify when movie files are deleted. on_movie_file_delete_for_upgrade : bool = False class-attribute instance-attribute # Notify when movie files are deleted for upgrades. on_health_issue : bool = False class-attribute instance-attribute # Notify on health check failures. include_health_warnings : bool = False class-attribute instance-attribute # When on_health_issue is enabled, notify for health check warnings in addition to errors. on_health_restored : bool = False class-attribute instance-attribute # Notify when health check failures have been resolved. on_manual_interaction_required : bool = False class-attribute instance-attribute # Notify when manual interaction is required to resolve an issue. on_application_update : bool = False class-attribute instance-attribute # Notify when Radarr gets updated to a new version. Synology Indexer # Send media update and health alert push notifications to a Synology Indexer. type : Literal [ 'synology-indexer' , 'synology' ] = 'synology-indexer' class-attribute instance-attribute # Type values associated with this kind of connection. update_library : bool = False class-attribute instance-attribute # Call synoindex on localhost to update library files. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to associate this notification connection with. Supported Notification Triggers # on_import : bool = False class-attribute instance-attribute # Notify when movies are successfully imported (downloaded). on_upgrade : bool = False class-attribute instance-attribute # Notify when movies are upgraded to a better quality. on_rename : bool = False class-attribute instance-attribute # Notify when movies are renamed. on_movie_delete : bool = False class-attribute instance-attribute # Notify when movies are deleted. on_movie_file_delete : bool = False class-attribute instance-attribute # Notify when movie files are deleted. on_movie_file_delete_for_upgrade : bool = False class-attribute instance-attribute # Notify when movie files are deleted for upgrades. Telegram # Send media update and health alert messages to a Telegram chat room. type : Literal [ 'telegram' ] = 'telegram' class-attribute instance-attribute # Type value associated with this kind of connection. bot_token : Password instance-attribute # The bot token assigned to this application. chat_id : NonEmptyStr instance-attribute # The ID of the chat room to send messages to. You must start a conversation with the bot or add it to your group to receive messages. send_silently : bool = False class-attribute instance-attribute # Sends the message silently. Users will receive a notification with no sound. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to associate this notification connection with. Supported Notification Triggers # on_grab : bool = False class-attribute instance-attribute # Notify when movies are available for download and have been sent to a download client. on_import : bool = False class-attribute instance-attribute # Notify when movies are successfully imported (downloaded). on_upgrade : bool = False class-attribute instance-attribute # Notify when movies are upgraded to a better quality. on_movie_added : bool = False class-attribute instance-attribute # Notify when movies are added to Radarr's library to monitor. on_movie_delete : bool = False class-attribute instance-attribute # Notify when movies are deleted. on_movie_file_delete : bool = False class-attribute instance-attribute # Notify when movie files are deleted. on_movie_file_delete_for_upgrade : bool = False class-attribute instance-attribute # Notify when movie files are deleted for upgrades. on_health_issue : bool = False class-attribute instance-attribute # Notify on health check failures. include_health_warnings : bool = False class-attribute instance-attribute # When on_health_issue is enabled, notify for health check warnings in addition to errors. on_health_restored : bool = False class-attribute instance-attribute # Notify when health check failures have been resolved. on_manual_interaction_required : bool = False class-attribute instance-attribute # Notify when manual interaction is required to resolve an issue. on_application_update : bool = False class-attribute instance-attribute # Notify when Radarr gets updated to a new version. Trakt # Buildarr is unable to manage Trakt notification connections at this time, due to Plex requiring external authentication using OAuth2. Please add the Trakt notification connection manually in the Radarr UI. Warning Ensure delete_unmanaged is set to false in Buildarr, otherwise the Trakt notification connection will be removed from Radarr whenever Buildarr performs an update run. Twitter # Buildarr is unable to manage Twitter notification connections at this time, due to Plex requiring external authentication using OAuth2. Please add the Twitter notification connection manually in the Radarr UI. Warning Ensure delete_unmanaged is set to false in Buildarr, otherwise the Twitter notification connection will be removed from Radarr whenever Buildarr performs an update run. Webhook # Send media update and health alert notifications to a webhook API. type : Literal [ 'webhook' ] = 'webhook' class-attribute instance-attribute # Type value associated with this kind of connection. method : WebhookMethod = WebhookMethod . POST class-attribute instance-attribute # HTTP request method type to use. Values: POST PUT username : Optional [ str ] = None class-attribute instance-attribute # Webhook API username, if required. password : Optional [ SecretStr ] = None class-attribute instance-attribute # Webhook API password, if required. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Radarr tags to associate this notification connection with. Supported Notification Triggers # on_grab : bool = False class-attribute instance-attribute # Notify when movies are available for download and have been sent to a download client. on_import : bool = False class-attribute instance-attribute # Notify when movies are successfully imported (downloaded). on_upgrade : bool = False class-attribute instance-attribute # Notify when movies are upgraded to a better quality. on_rename : bool = False class-attribute instance-attribute # Notify when movies are renamed. on_movie_added : bool = False class-attribute instance-attribute # Notify when movies are added to Radarr's library to monitor. on_movie_delete : bool = False class-attribute instance-attribute # Notify when movies are deleted. on_movie_file_delete : bool = False class-attribute instance-attribute # Notify when movie files are deleted. on_movie_file_delete_for_upgrade : bool = False class-attribute instance-attribute # Notify when movie files are deleted for upgrades. on_health_issue : bool = False class-attribute instance-attribute # Notify on health check failures. include_health_warnings : bool = False class-attribute instance-attribute # When on_health_issue is enabled, notify for health check warnings in addition to errors. on_health_restored : bool = False class-attribute instance-attribute # Notify when health check failures have been resolved. on_manual_interaction_required : bool = False class-attribute instance-attribute # Notify when manual interaction is required to resolve an issue. on_application_update : bool = False class-attribute instance-attribute # Notify when Radarr gets updated to a new version.","title":"Notifications (Connect)"},{"location":"plugins/radarr/configuration/settings/notifications/#notifications-connect","text":"Radarr supports pushing notifications to external applications and services. The main uses cases for this are: Notifying users when media requests have been processed. Alerting administrators to issues with the operation of Radarr (e.g. indexers not working). Notification connections are defined using a dictionary structure, where the name of the definition becomes the name of the notification connection in Radarr. radarr : settings : notifications : delete_unmanaged : false definitions : Email : # Name of notification connection in Radarr. type : email # Required notification_triggers : # When to send notifications. on_grab : true on_import : true on_upgrade : true on_rename : false on_movie_added : true on_movie_delete : true on_movie_file_delete : true on_movie_file_delete_for_upgrade : true on_health_issue : true include_health_warnings : true on_health_restored : true on_manual_interaction_required : true on_application_update : true # Connection-specific parameters. server : smtp.example.com port : 465 use_encryption : true username : radarr password : fake-password from_address : radarr@example.com recipient_addresses : - admin@example.com # Tags can also be assigned to connections. tags : - anime-movies # Add additional connections here. Radarr supports pushing notifications to applications for a variety of different conditions. The conditions to notify can be configured using notification triggers . Note that some connection types only support a subset of these notification triggers. Check each notification connection type for a list of supported triggers. The following settings determine how Buildarr manages notification connection definitions in Radarr.","title":"Notifications (Connect)"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.RadarrNotificationsSettings.delete_unmanaged","text":"Automatically delete connections not configured in Buildarr. Warning Some notification connection types are not supported by Buildarr, and must be configured manually. Do not enable this option when using such connections.","title":"delete_unmanaged"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.RadarrNotificationsSettings.definitions","text":"Define notification connections as a dictionary under this attribute.","title":"definitions"},{"location":"plugins/radarr/configuration/settings/notifications/#apprise","text":"Receive media update and health alert push notifications via an Apprise server.","title":"Apprise"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.apprise.AppriseNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.apprise.AppriseNotification.base_url","text":"Apprise server base URL, including http[s]:// and port if needed.","title":"base_url"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.apprise.AppriseNotification.configuration_key","text":"Configuration key for the Persistent Storage Solution. Leave empty if Stateless URLs are used.","title":"configuration_key"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.apprise.AppriseNotification.stateless_urls","text":"One or more URLs where notifications should be sent to. Leave undefined or empty if Persistent Storage is used.","title":"stateless_urls"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.apprise.AppriseNotification.notification_type","text":"The Apprise notification type to classify notifications under. Values: Info (default) Success Warning Failure","title":"notification_type"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.apprise.AppriseNotification.apprise_tags","text":"Optionally notify only targets with the defined tags.","title":"apprise_tags"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.apprise.AppriseNotification.username","text":"Basic HTTP auth username for authenticating with Apprise, if required.","title":"username"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.apprise.AppriseNotification.password","text":"Basic HTTP auth password for authenticating with Apprise, if required.","title":"password"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.Notification.tags","text":"Radarr tags to associate this notification connection with.","title":"tags"},{"location":"plugins/radarr/configuration/settings/notifications/#supported-notification-triggers","text":"","title":"Supported Notification Triggers"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_grab","text":"Notify when movies are available for download and have been sent to a download client.","title":"on_grab"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_import","text":"Notify when movies are successfully imported (downloaded).","title":"on_import"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_upgrade","text":"Notify when movies are upgraded to a better quality.","title":"on_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_added","text":"Notify when movies are added to Radarr's library to monitor.","title":"on_movie_added"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_delete","text":"Notify when movies are deleted.","title":"on_movie_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete","text":"Notify when movie files are deleted.","title":"on_movie_file_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete_for_upgrade","text":"Notify when movie files are deleted for upgrades.","title":"on_movie_file_delete_for_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_issue","text":"Notify on health check failures.","title":"on_health_issue"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.include_health_warnings","text":"When on_health_issue is enabled, notify for health check warnings in addition to errors.","title":"include_health_warnings"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_restored","text":"Notify when health check failures have been resolved.","title":"on_health_restored"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_manual_interaction_required","text":"Notify when manual interaction is required to resolve an issue.","title":"on_manual_interaction_required"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_application_update","text":"Notify when Radarr gets updated to a new version.","title":"on_application_update"},{"location":"plugins/radarr/configuration/settings/notifications/#boxcar","text":"Receive media update and health alert push notifications via Boxcar.","title":"Boxcar"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.boxcar.BoxcarNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.boxcar.BoxcarNotification.access_token","text":"Access token for authenticating with Boxcar.","title":"access_token"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.Notification.tags","text":"Radarr tags to associate this notification connection with.","title":"tags"},{"location":"plugins/radarr/configuration/settings/notifications/#supported-notification-triggers_1","text":"","title":"Supported Notification Triggers"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_grab","text":"Notify when movies are available for download and have been sent to a download client.","title":"on_grab"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_import","text":"Notify when movies are successfully imported (downloaded).","title":"on_import"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_upgrade","text":"Notify when movies are upgraded to a better quality.","title":"on_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_added","text":"Notify when movies are added to Radarr's library to monitor.","title":"on_movie_added"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_delete","text":"Notify when movies are deleted.","title":"on_movie_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete","text":"Notify when movie files are deleted.","title":"on_movie_file_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete_for_upgrade","text":"Notify when movie files are deleted for upgrades.","title":"on_movie_file_delete_for_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_issue","text":"Notify on health check failures.","title":"on_health_issue"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.include_health_warnings","text":"When on_health_issue is enabled, notify for health check warnings in addition to errors.","title":"include_health_warnings"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_restored","text":"Notify when health check failures have been resolved.","title":"on_health_restored"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_manual_interaction_required","text":"Notify when manual interaction is required to resolve an issue.","title":"on_manual_interaction_required"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_application_update","text":"Notify when Radarr gets updated to a new version.","title":"on_application_update"},{"location":"plugins/radarr/configuration/settings/notifications/#custom-script","text":"Execute a local script on the Radarr host (container) when events occur.","title":"Custom Script"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.custom_script.CustomScriptNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.custom_script.CustomScriptNotification.path","text":"Path of the script to execute.","title":"path"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.custom_script.CustomScriptNotification.arguments","text":"Arguments to pass to the script, if required.","title":"arguments"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.Notification.tags","text":"Radarr tags to associate this notification connection with.","title":"tags"},{"location":"plugins/radarr/configuration/settings/notifications/#supported-notification-triggers_2","text":"","title":"Supported Notification Triggers"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_grab","text":"Notify when movies are available for download and have been sent to a download client.","title":"on_grab"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_import","text":"Notify when movies are successfully imported (downloaded).","title":"on_import"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_upgrade","text":"Notify when movies are upgraded to a better quality.","title":"on_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_rename","text":"Notify when movies are renamed.","title":"on_rename"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_added","text":"Notify when movies are added to Radarr's library to monitor.","title":"on_movie_added"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_delete","text":"Notify when movies are deleted.","title":"on_movie_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete","text":"Notify when movie files are deleted.","title":"on_movie_file_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete_for_upgrade","text":"Notify when movie files are deleted for upgrades.","title":"on_movie_file_delete_for_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_issue","text":"Notify on health check failures.","title":"on_health_issue"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.include_health_warnings","text":"When on_health_issue is enabled, notify for health check warnings in addition to errors.","title":"include_health_warnings"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_restored","text":"Notify when health check failures have been resolved.","title":"on_health_restored"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_manual_interaction_required","text":"Notify when manual interaction is required to resolve an issue.","title":"on_manual_interaction_required"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_application_update","text":"Notify when Radarr gets updated to a new version.","title":"on_application_update"},{"location":"plugins/radarr/configuration/settings/notifications/#discord","text":"Send media update and health alert messages to a Discord server.","title":"Discord"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.discord.DiscordNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.discord.DiscordNotification.webhook_url","text":"Discord server webhook URL.","title":"webhook_url"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.discord.DiscordNotification.username","text":"The username to post as. If unset, blank or set to None , use the default username set to the webhook URL.","title":"username"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.discord.DiscordNotification.avatar","text":"Change the avatar that is used for messages from this connection. If unset, blank or set to None , use the default avatar for the user.","title":"avatar"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.discord.DiscordNotification.host","text":"Override the host name that shows for this notification. If unset, blank or set to None , use the machine name.","title":"host"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.discord.DiscordNotification.on_grab_fields","text":"Set the fields that are passed in for this 'on grab' notification. By default, all fields are passed in. Values: overview rating genres quality group size links release poster fanart indexer custom-formats custom-format-score Example: ... notifications : definitions : Discord : type : discord webhook_url : \"https://...\" on_grab_fields : - overview - quality - release","title":"on_grab_fields"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.discord.DiscordNotification.on_import_fields","text":"Set the fields that are passed in for this 'on import' notification. By default, all fields are passed in. Values: overview rating genres quality codecs group size languages subtitles links release poster fanart Example: ... notifications : definitions : Discord : type : discord webhook_url : https://... on_import_fields : - overview - quality - release","title":"on_import_fields"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.discord.DiscordNotification.on_manual_interaction_fields","text":"","title":"on_manual_interaction_fields"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.Notification.tags","text":"Radarr tags to associate this notification connection with.","title":"tags"},{"location":"plugins/radarr/configuration/settings/notifications/#supported-notification-triggers_3","text":"","title":"Supported Notification Triggers"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_grab","text":"Notify when movies are available for download and have been sent to a download client.","title":"on_grab"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_import","text":"Notify when movies are successfully imported (downloaded).","title":"on_import"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_upgrade","text":"Notify when movies are upgraded to a better quality.","title":"on_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_rename","text":"Notify when movies are renamed.","title":"on_rename"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_added","text":"Notify when movies are added to Radarr's library to monitor.","title":"on_movie_added"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_delete","text":"Notify when movies are deleted.","title":"on_movie_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete","text":"Notify when movie files are deleted.","title":"on_movie_file_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete_for_upgrade","text":"Notify when movie files are deleted for upgrades.","title":"on_movie_file_delete_for_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_issue","text":"Notify on health check failures.","title":"on_health_issue"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.include_health_warnings","text":"When on_health_issue is enabled, notify for health check warnings in addition to errors.","title":"include_health_warnings"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_restored","text":"Notify when health check failures have been resolved.","title":"on_health_restored"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_manual_interaction_required","text":"Notify when manual interaction is required to resolve an issue.","title":"on_manual_interaction_required"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_application_update","text":"Notify when Radarr gets updated to a new version.","title":"on_application_update"},{"location":"plugins/radarr/configuration/settings/notifications/#email","text":"Send media update and health alert messages to an email address.","title":"Email"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.email.EmailNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.email.EmailNotification.server","text":"Hostname or IP address of the SMTP server to send outbound mail to.","title":"server"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.email.EmailNotification.port","text":"The port number on the SMTP server to use to submit mail. The default is to use STARTTLS on the standard SMTP submission port.","title":"port"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.email.EmailNotification.use_encryption","text":"Whether or not to use encryption when sending mail to the SMTP server. If the port number is set to 465, SMTPS (implicit TLS) will be used. Any other port number will result in STARTTLS being used. The default is to not require encryption.","title":"use_encryption"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.email.EmailNotification.username","text":"SMTP username of the account to send the mail from.","title":"username"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.email.EmailNotification.password","text":"SMTP password of the account to send the mail from.","title":"password"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.email.EmailNotification.from_address","text":"Email address to send the mail as. RFC-5322 formatted mailbox addresses are also supported, e.g. Radarr <radarr@example.com> .","title":"from_address"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.email.EmailNotification.recipient_addresses","text":"List of email addresses to directly address the mail to. At least one address must be provided.","title":"recipient_addresses"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.email.EmailNotification.cc_addresses","text":"Optional list of email addresses to copy (CC) the mail to.","title":"cc_addresses"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.email.EmailNotification.bcc_addresses","text":"Optional list of email addresses to blind copy (BCC) the mail to.","title":"bcc_addresses"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.Notification.tags","text":"Radarr tags to associate this notification connection with.","title":"tags"},{"location":"plugins/radarr/configuration/settings/notifications/#supported-notification-triggers_4","text":"","title":"Supported Notification Triggers"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_grab","text":"Notify when movies are available for download and have been sent to a download client.","title":"on_grab"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_import","text":"Notify when movies are successfully imported (downloaded).","title":"on_import"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_upgrade","text":"Notify when movies are upgraded to a better quality.","title":"on_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_added","text":"Notify when movies are added to Radarr's library to monitor.","title":"on_movie_added"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_delete","text":"Notify when movies are deleted.","title":"on_movie_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete","text":"Notify when movie files are deleted.","title":"on_movie_file_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete_for_upgrade","text":"Notify when movie files are deleted for upgrades.","title":"on_movie_file_delete_for_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_issue","text":"Notify on health check failures.","title":"on_health_issue"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.include_health_warnings","text":"When on_health_issue is enabled, notify for health check warnings in addition to errors.","title":"include_health_warnings"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_restored","text":"Notify when health check failures have been resolved.","title":"on_health_restored"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_manual_interaction_required","text":"Notify when manual interaction is required to resolve an issue.","title":"on_manual_interaction_required"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_application_update","text":"Notify when Radarr gets updated to a new version.","title":"on_application_update"},{"location":"plugins/radarr/configuration/settings/notifications/#emby-jellyfin","text":"Send media update and health alert push notifications to an Emby or Jellyfin media server.","title":"Emby / Jellyfin"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.emby_jellyfin.EmbyJellyfinNotification.type","text":"Type values associated with this kind of connection. It is recommended to use the value representing the actual instance you are using, e.g. for Emby use emby , for Jellyfin use jellyfin .","title":"type"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.emby_jellyfin.EmbyJellyfinNotification.hostname","text":"Emby / Jellyfin server hostname.","title":"hostname"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.emby_jellyfin.EmbyJellyfinNotification.port","text":"Emby / Jellyfin server access port.","title":"port"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.emby_jellyfin.EmbyJellyfinNotification.use_ssl","text":"Connect to the server using HTTPS.","title":"use_ssl"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.emby_jellyfin.EmbyJellyfinNotification.api_key","text":"API key for authenticating with Emby / Jellyfin.","title":"api_key"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.emby_jellyfin.EmbyJellyfinNotification.send_notifications","text":"Have the server send notifications to configured providers.","title":"send_notifications"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.emby_jellyfin.EmbyJellyfinNotification.update_library","text":"When set to true , update the Emby / Jellyfin libraries on import, rename or delete.","title":"update_library"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.Notification.tags","text":"Radarr tags to associate this notification connection with.","title":"tags"},{"location":"plugins/radarr/configuration/settings/notifications/#supported-notification-triggers_5","text":"","title":"Supported Notification Triggers"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_grab","text":"Notify when movies are available for download and have been sent to a download client.","title":"on_grab"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_import","text":"Notify when movies are successfully imported (downloaded).","title":"on_import"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_upgrade","text":"Notify when movies are upgraded to a better quality.","title":"on_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_rename","text":"Notify when movies are renamed.","title":"on_rename"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_delete","text":"Notify when movies are deleted.","title":"on_movie_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete","text":"Notify when movie files are deleted.","title":"on_movie_file_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete_for_upgrade","text":"Notify when movie files are deleted for upgrades.","title":"on_movie_file_delete_for_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_issue","text":"Notify on health check failures.","title":"on_health_issue"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.include_health_warnings","text":"When on_health_issue is enabled, notify for health check warnings in addition to errors.","title":"include_health_warnings"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_restored","text":"Notify when health check failures have been resolved.","title":"on_health_restored"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_application_update","text":"Notify when Radarr gets updated to a new version.","title":"on_application_update"},{"location":"plugins/radarr/configuration/settings/notifications/#gotify","text":"Send media update and health alert push notifications through a Gotify server.","title":"Gotify"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.gotify.GotifyNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.gotify.GotifyNotification.app_token","text":"App token to use to authenticate with Gotify.","title":"app_token"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.gotify.GotifyNotification.priority","text":"Gotify notification priority. Values: min low normal high","title":"priority"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.gotify.GotifyNotification.include_movie_poster","text":"Include movie posters of the relevant media in messages.","title":"include_movie_poster"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.Notification.tags","text":"Radarr tags to associate this notification connection with.","title":"tags"},{"location":"plugins/radarr/configuration/settings/notifications/#supported-notification-triggers_6","text":"","title":"Supported Notification Triggers"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_grab","text":"Notify when movies are available for download and have been sent to a download client.","title":"on_grab"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_import","text":"Notify when movies are successfully imported (downloaded).","title":"on_import"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_upgrade","text":"Notify when movies are upgraded to a better quality.","title":"on_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_added","text":"Notify when movies are added to Radarr's library to monitor.","title":"on_movie_added"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_delete","text":"Notify when movies are deleted.","title":"on_movie_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete","text":"Notify when movie files are deleted.","title":"on_movie_file_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete_for_upgrade","text":"Notify when movie files are deleted for upgrades.","title":"on_movie_file_delete_for_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_issue","text":"Notify on health check failures.","title":"on_health_issue"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.include_health_warnings","text":"When on_health_issue is enabled, notify for health check warnings in addition to errors.","title":"include_health_warnings"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_restored","text":"Notify when health check failures have been resolved.","title":"on_health_restored"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_manual_interaction_required","text":"Notify when manual interaction is required to resolve an issue.","title":"on_manual_interaction_required"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_application_update","text":"Notify when Radarr gets updated to a new version.","title":"on_application_update"},{"location":"plugins/radarr/configuration/settings/notifications/#join","text":"Send media update and health alert push notifications via Join.","title":"Join"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.join.JoinNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.join.JoinNotification.api_key","text":"API key to use to authenticate with Join.","title":"api_key"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.join.JoinNotification.device_names","text":"List of full or partial device names you'd like to send notifications to. If unset or empty, all devices will receive notifications.","title":"device_names"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.join.JoinNotification.priority","text":"Join push notification priority. Values: silent quiet normal high emergency","title":"priority"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.Notification.tags","text":"Radarr tags to associate this notification connection with.","title":"tags"},{"location":"plugins/radarr/configuration/settings/notifications/#supported-notification-triggers_7","text":"","title":"Supported Notification Triggers"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_grab","text":"Notify when movies are available for download and have been sent to a download client.","title":"on_grab"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_import","text":"Notify when movies are successfully imported (downloaded).","title":"on_import"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_upgrade","text":"Notify when movies are upgraded to a better quality.","title":"on_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_added","text":"Notify when movies are added to Radarr's library to monitor.","title":"on_movie_added"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_delete","text":"Notify when movies are deleted.","title":"on_movie_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete","text":"Notify when movie files are deleted.","title":"on_movie_file_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete_for_upgrade","text":"Notify when movie files are deleted for upgrades.","title":"on_movie_file_delete_for_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_issue","text":"Notify on health check failures.","title":"on_health_issue"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.include_health_warnings","text":"When on_health_issue is enabled, notify for health check warnings in addition to errors.","title":"include_health_warnings"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_restored","text":"Notify when health check failures have been resolved.","title":"on_health_restored"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_manual_interaction_required","text":"Notify when manual interaction is required to resolve an issue.","title":"on_manual_interaction_required"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_application_update","text":"Notify when Radarr gets updated to a new version.","title":"on_application_update"},{"location":"plugins/radarr/configuration/settings/notifications/#kodi-xbmc","text":"Send media update and health alert push notifications to a Kodi (XBMC) media server.","title":"Kodi (XBMC)"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.kodi.KodiNotification.type","text":"Type values associated with this kind of connection.","title":"type"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.kodi.KodiNotification.hostname","text":"Kodi server hostname.","title":"hostname"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.kodi.KodiNotification.port","text":"Kodi server access port.","title":"port"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.kodi.KodiNotification.use_ssl","text":"Connect to the server using HTTPS.","title":"use_ssl"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.kodi.KodiNotification.username","text":"Kodi administrator username.","title":"username"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.kodi.KodiNotification.password","text":"Kodi user password.","title":"password"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.kodi.KodiNotification.display_notification","text":"Display the notification in the Kodi GUI.","title":"display_notification"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.kodi.KodiNotification.display_time","text":"Display time of the notification (in seconds).","title":"display_time"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.kodi.KodiNotification.clean_library","text":"When set to true , clean the library update.","title":"clean_library"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.kodi.KodiNotification.always_update","text":"Always update the library, even when a video is playing.","title":"always_update"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.Notification.tags","text":"Radarr tags to associate this notification connection with.","title":"tags"},{"location":"plugins/radarr/configuration/settings/notifications/#supported-notification-triggers_8","text":"","title":"Supported Notification Triggers"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_grab","text":"Notify when movies are available for download and have been sent to a download client.","title":"on_grab"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_import","text":"Notify when movies are successfully imported (downloaded).","title":"on_import"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_upgrade","text":"Notify when movies are upgraded to a better quality.","title":"on_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_rename","text":"Notify when movies are renamed.","title":"on_rename"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_delete","text":"Notify when movies are deleted.","title":"on_movie_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete","text":"Notify when movie files are deleted.","title":"on_movie_file_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete_for_upgrade","text":"Notify when movie files are deleted for upgrades.","title":"on_movie_file_delete_for_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_issue","text":"Notify on health check failures.","title":"on_health_issue"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.include_health_warnings","text":"When on_health_issue is enabled, notify for health check warnings in addition to errors.","title":"include_health_warnings"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_restored","text":"Notify when health check failures have been resolved.","title":"on_health_restored"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_manual_interaction_required","text":"Notify when manual interaction is required to resolve an issue.","title":"on_manual_interaction_required"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_application_update","text":"Notify when Radarr gets updated to a new version.","title":"on_application_update"},{"location":"plugins/radarr/configuration/settings/notifications/#mailgun","text":"Send media update and health alert emails via the Mailgun delivery service.","title":"Mailgun"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.mailgun.MailgunNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.mailgun.MailgunNotification.api_key","text":"API key to use to authenticate with Mailgun.","title":"api_key"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.mailgun.MailgunNotification.use_eu_endpoint","text":"Send mail via the EU endpoint instead of the US one.","title":"use_eu_endpoint"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.mailgun.MailgunNotification.from_address","text":"Email address to send the mail as. RFC-5322 formatted mailbox addresses are also supported, e.g. Radarr <radarr@example.com> .","title":"from_address"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.mailgun.MailgunNotification.sender_domain","text":"The domain from which the mail will be sent.","title":"sender_domain"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.mailgun.MailgunNotification.recipient_addresses","text":"The recipient email addresses of the notification mail. At least one recipient address is required.","title":"recipient_addresses"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.Notification.tags","text":"Radarr tags to associate this notification connection with.","title":"tags"},{"location":"plugins/radarr/configuration/settings/notifications/#supported-notification-triggers_9","text":"","title":"Supported Notification Triggers"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_grab","text":"Notify when movies are available for download and have been sent to a download client.","title":"on_grab"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_import","text":"Notify when movies are successfully imported (downloaded).","title":"on_import"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_upgrade","text":"Notify when movies are upgraded to a better quality.","title":"on_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_added","text":"Notify when movies are added to Radarr's library to monitor.","title":"on_movie_added"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_delete","text":"Notify when movies are deleted.","title":"on_movie_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete","text":"Notify when movie files are deleted.","title":"on_movie_file_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete_for_upgrade","text":"Notify when movie files are deleted for upgrades.","title":"on_movie_file_delete_for_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_issue","text":"Notify on health check failures.","title":"on_health_issue"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.include_health_warnings","text":"When on_health_issue is enabled, notify for health check warnings in addition to errors.","title":"include_health_warnings"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_restored","text":"Notify when health check failures have been resolved.","title":"on_health_restored"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_manual_interaction_required","text":"Notify when manual interaction is required to resolve an issue.","title":"on_manual_interaction_required"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_application_update","text":"Notify when Radarr gets updated to a new version.","title":"on_application_update"},{"location":"plugins/radarr/configuration/settings/notifications/#notifiarr","text":"Send media update and health alert emails via the Notifiarr notification service.","title":"Notifiarr"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.notifiarr.NotifiarrNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.notifiarr.NotifiarrNotification.api_key","text":"API key to use to authenticate with Notifiarr.","title":"api_key"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.Notification.tags","text":"Radarr tags to associate this notification connection with.","title":"tags"},{"location":"plugins/radarr/configuration/settings/notifications/#supported-notification-triggers_10","text":"","title":"Supported Notification Triggers"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_grab","text":"Notify when movies are available for download and have been sent to a download client.","title":"on_grab"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_import","text":"Notify when movies are successfully imported (downloaded).","title":"on_import"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_upgrade","text":"Notify when movies are upgraded to a better quality.","title":"on_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_rename","text":"Notify when movies are renamed.","title":"on_rename"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_added","text":"Notify when movies are added to Radarr's library to monitor.","title":"on_movie_added"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_delete","text":"Notify when movies are deleted.","title":"on_movie_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete","text":"Notify when movie files are deleted.","title":"on_movie_file_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete_for_upgrade","text":"Notify when movie files are deleted for upgrades.","title":"on_movie_file_delete_for_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_issue","text":"Notify on health check failures.","title":"on_health_issue"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.include_health_warnings","text":"When on_health_issue is enabled, notify for health check warnings in addition to errors.","title":"include_health_warnings"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_restored","text":"Notify when health check failures have been resolved.","title":"on_health_restored"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_manual_interaction_required","text":"Notify when manual interaction is required to resolve an issue.","title":"on_manual_interaction_required"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_application_update","text":"Notify when Radarr gets updated to a new version.","title":"on_application_update"},{"location":"plugins/radarr/configuration/settings/notifications/#ntfy","text":"Send media update and health alert emails via the ntfy.sh notification service, or a self-hosted server using the same software.","title":"ntfy"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.ntfy.NtfyNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.ntfy.NtfyNotification.base_url","text":"Custom ntfy server URL. Leave blank, set to null or undefined to use the public server ( https://ntfy.sh ).","title":"base_url"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.ntfy.NtfyNotification.access_token","text":"Optional token-based authorisation. When both are defined, access token takes priority over username/password.","title":"access_token"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.ntfy.NtfyNotification.username","text":"Username to use to authenticate, if required.","title":"username"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.ntfy.NtfyNotification.password","text":"Password to use to authenticate, if required.","title":"password"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.ntfy.NtfyNotification.priority","text":"Values: min low default high max","title":"priority"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.ntfy.NtfyNotification.topics","text":"List of Topics to send notifications to.","title":"topics"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.ntfy.NtfyNotification.ntfy_tags","text":"Optional list of tags or emojis to use.","title":"ntfy_tags"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.ntfy.NtfyNotification.click_url","text":"Optional link for when the user clicks the notification.","title":"click_url"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.Notification.tags","text":"Radarr tags to associate this notification connection with.","title":"tags"},{"location":"plugins/radarr/configuration/settings/notifications/#supported-notification-triggers_11","text":"","title":"Supported Notification Triggers"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_grab","text":"Notify when movies are available for download and have been sent to a download client.","title":"on_grab"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_import","text":"Notify when movies are successfully imported (downloaded).","title":"on_import"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_upgrade","text":"Notify when movies are upgraded to a better quality.","title":"on_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_added","text":"Notify when movies are added to Radarr's library to monitor.","title":"on_movie_added"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_delete","text":"Notify when movies are deleted.","title":"on_movie_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete","text":"Notify when movie files are deleted.","title":"on_movie_file_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete_for_upgrade","text":"Notify when movie files are deleted for upgrades.","title":"on_movie_file_delete_for_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_issue","text":"Notify on health check failures.","title":"on_health_issue"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.include_health_warnings","text":"When on_health_issue is enabled, notify for health check warnings in addition to errors.","title":"include_health_warnings"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_restored","text":"Notify when health check failures have been resolved.","title":"on_health_restored"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_manual_interaction_required","text":"Notify when manual interaction is required to resolve an issue.","title":"on_manual_interaction_required"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_application_update","text":"Notify when Radarr gets updated to a new version.","title":"on_application_update"},{"location":"plugins/radarr/configuration/settings/notifications/#plex-media-server","text":"Buildarr is unable to manage Plex Media Server notification connections at this time, due to Plex requiring external authentication using OAuth2. Please add the Plex Media Server notification connection manually in the Radarr UI. Warning Ensure delete_unmanaged is set to false in Buildarr, otherwise the Plex Media Server notification connection will be removed from Radarr whenever Buildarr performs an update run.","title":"Plex Media Server"},{"location":"plugins/radarr/configuration/settings/notifications/#prowl","text":"Send media update and health alert push notifications to a Prowl client.","title":"Prowl"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.prowl.ProwlNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.prowl.ProwlNotification.api_key","text":"API key to use when authenticating with Prowl.","title":"api_key"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.prowl.ProwlNotification.priority","text":"Prowl push notification priority. Values: verylow low normal high emergency","title":"priority"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.Notification.tags","text":"Radarr tags to associate this notification connection with.","title":"tags"},{"location":"plugins/radarr/configuration/settings/notifications/#supported-notification-triggers_12","text":"","title":"Supported Notification Triggers"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_grab","text":"Notify when movies are available for download and have been sent to a download client.","title":"on_grab"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_import","text":"Notify when movies are successfully imported (downloaded).","title":"on_import"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_upgrade","text":"Notify when movies are upgraded to a better quality.","title":"on_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_added","text":"Notify when movies are added to Radarr's library to monitor.","title":"on_movie_added"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_delete","text":"Notify when movies are deleted.","title":"on_movie_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete","text":"Notify when movie files are deleted.","title":"on_movie_file_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete_for_upgrade","text":"Notify when movie files are deleted for upgrades.","title":"on_movie_file_delete_for_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_issue","text":"Notify on health check failures.","title":"on_health_issue"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.include_health_warnings","text":"When on_health_issue is enabled, notify for health check warnings in addition to errors.","title":"include_health_warnings"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_restored","text":"Notify when health check failures have been resolved.","title":"on_health_restored"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_manual_interaction_required","text":"Notify when manual interaction is required to resolve an issue.","title":"on_manual_interaction_required"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_application_update","text":"Notify when Radarr gets updated to a new version.","title":"on_application_update"},{"location":"plugins/radarr/configuration/settings/notifications/#pushbullet","text":"Send media update and health alert push notifications to Pushbullet devices.","title":"Pushbullet"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.pushbullet.PushbulletNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.pushbullet.PushbulletNotification.api_key","text":"API key to use when authenticating with Pushbullet.","title":"api_key"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.pushbullet.PushbulletNotification.device_ids","text":"List of device IDs to send notifications to. If unset or empty, send to all devices.","title":"device_ids"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.pushbullet.PushbulletNotification.channel_tags","text":"List of Channel Tags to send notifications to.","title":"channel_tags"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.pushbullet.PushbulletNotification.sender_id","text":"The device ID to send notifications from ( device_iden in the device's URL on pushbullet.com ). Leave unset, blank or set to null to send from yourself.","title":"sender_id"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.Notification.tags","text":"Radarr tags to associate this notification connection with.","title":"tags"},{"location":"plugins/radarr/configuration/settings/notifications/#supported-notification-triggers_13","text":"","title":"Supported Notification Triggers"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_grab","text":"Notify when movies are available for download and have been sent to a download client.","title":"on_grab"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_import","text":"Notify when movies are successfully imported (downloaded).","title":"on_import"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_upgrade","text":"Notify when movies are upgraded to a better quality.","title":"on_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_added","text":"Notify when movies are added to Radarr's library to monitor.","title":"on_movie_added"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_delete","text":"Notify when movies are deleted.","title":"on_movie_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete","text":"Notify when movie files are deleted.","title":"on_movie_file_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete_for_upgrade","text":"Notify when movie files are deleted for upgrades.","title":"on_movie_file_delete_for_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_issue","text":"Notify on health check failures.","title":"on_health_issue"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.include_health_warnings","text":"When on_health_issue is enabled, notify for health check warnings in addition to errors.","title":"include_health_warnings"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_restored","text":"Notify when health check failures have been resolved.","title":"on_health_restored"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_manual_interaction_required","text":"Notify when manual interaction is required to resolve an issue.","title":"on_manual_interaction_required"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_application_update","text":"Notify when Radarr gets updated to a new version.","title":"on_application_update"},{"location":"plugins/radarr/configuration/settings/notifications/#pushover","text":"Send media update and health alert push notifications to Pushover devices.","title":"Pushover"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.pushover.PushoverNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.pushover.PushoverNotification.user_key","text":"User key to use to authenticate with your Pushover account.","title":"user_key"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.pushover.PushoverNotification.api_key","text":"API key assigned to this application in Pushover.","title":"api_key"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.pushover.PushoverNotification.devices","text":"List of device names to send notifications to. If unset or empty, send to all devices.","title":"devices"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.pushover.PushoverNotification.priority","text":"Pushover push notification priority. Values: silent quiet normal high emergency","title":"priority"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.pushover.PushoverNotification.retry","text":"Interval to retry emergency alerts, in seconds. Minimum 30 seconds. Set to 0 to disable retrying emergency alerts.","title":"retry"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.pushover.PushoverNotification.expire","text":"Threshold for retrying emergency alerts, in seconds. If retry is set, this should be set to a higher value. Maximum 86400 seconds (1 day).","title":"expire"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.pushover.PushoverNotification.sound","text":"Notification sound to use on devices. Leave unset, blank or set to null to use the default.","title":"sound"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.Notification.tags","text":"Radarr tags to associate this notification connection with.","title":"tags"},{"location":"plugins/radarr/configuration/settings/notifications/#supported-notification-triggers_14","text":"","title":"Supported Notification Triggers"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_grab","text":"Notify when movies are available for download and have been sent to a download client.","title":"on_grab"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_import","text":"Notify when movies are successfully imported (downloaded).","title":"on_import"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_upgrade","text":"Notify when movies are upgraded to a better quality.","title":"on_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_added","text":"Notify when movies are added to Radarr's library to monitor.","title":"on_movie_added"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_delete","text":"Notify when movies are deleted.","title":"on_movie_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete","text":"Notify when movie files are deleted.","title":"on_movie_file_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete_for_upgrade","text":"Notify when movie files are deleted for upgrades.","title":"on_movie_file_delete_for_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_issue","text":"Notify on health check failures.","title":"on_health_issue"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.include_health_warnings","text":"When on_health_issue is enabled, notify for health check warnings in addition to errors.","title":"include_health_warnings"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_restored","text":"Notify when health check failures have been resolved.","title":"on_health_restored"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_manual_interaction_required","text":"Notify when manual interaction is required to resolve an issue.","title":"on_manual_interaction_required"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_application_update","text":"Notify when Radarr gets updated to a new version.","title":"on_application_update"},{"location":"plugins/radarr/configuration/settings/notifications/#pushsafer","text":"Send media update and health alert push notifications to Pushsafer devices.","title":"Pushsafer"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.pushsafer.PushsaferNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.pushsafer.PushsaferNotification.api_key","text":"API key to use when authenticating with Pushbullet.","title":"api_key"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.pushsafer.PushsaferNotification.device_ids","text":"List of device IDs to send notifications to. If unset or empty, send to all devices.","title":"device_ids"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.pushsafer.PushsaferNotification.priority","text":"Pushsafer push notification priority. Values: silent quiet normal high emergency","title":"priority"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.pushsafer.PushsaferNotification.retry","text":"Interval to retry emergency alerts, in seconds. Minimum 60 seconds. Set to 0 to disable retrying emergency alerts.","title":"retry"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.pushsafer.PushsaferNotification.expire","text":"Threshold for retrying emergency alerts, in seconds. If retry is set, this should be set to a higher value. Maximum 10800 seconds (3 hours).","title":"expire"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.pushsafer.PushsaferNotification.sound","text":"Notification sound number (0-62) to use when alerting. Leave unset, blank or set to null to use the default.","title":"sound"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.pushsafer.PushsaferNotification.vibration","text":"Notification pattern (1-3) to use on devices. Leave unset, blank or set to null to use the device default.","title":"vibration"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.pushsafer.PushsaferNotification.icon","text":"Pushsafer icon number (1-181) to use in notifications. Leave unset, blank or set to null to use the default Pushsafer icon.","title":"icon"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.pushsafer.PushsaferNotification.icon_color","text":"The colour to use for the Pushsafer icon in the notification. Specify either a colour (e.g. yellow ) or a hex code ( #00FF00 ).","title":"icon_color"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.Notification.tags","text":"Radarr tags to associate this notification connection with.","title":"tags"},{"location":"plugins/radarr/configuration/settings/notifications/#supported-notification-triggers_15","text":"","title":"Supported Notification Triggers"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_grab","text":"Notify when movies are available for download and have been sent to a download client.","title":"on_grab"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_import","text":"Notify when movies are successfully imported (downloaded).","title":"on_import"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_upgrade","text":"Notify when movies are upgraded to a better quality.","title":"on_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_added","text":"Notify when movies are added to Radarr's library to monitor.","title":"on_movie_added"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_delete","text":"Notify when movies are deleted.","title":"on_movie_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete","text":"Notify when movie files are deleted.","title":"on_movie_file_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete_for_upgrade","text":"Notify when movie files are deleted for upgrades.","title":"on_movie_file_delete_for_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_issue","text":"Notify on health check failures.","title":"on_health_issue"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.include_health_warnings","text":"When on_health_issue is enabled, notify for health check warnings in addition to errors.","title":"include_health_warnings"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_restored","text":"Notify when health check failures have been resolved.","title":"on_health_restored"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_manual_interaction_required","text":"Notify when manual interaction is required to resolve an issue.","title":"on_manual_interaction_required"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_application_update","text":"Notify when Radarr gets updated to a new version.","title":"on_application_update"},{"location":"plugins/radarr/configuration/settings/notifications/#sendgrid","text":"Send media update and health alert emails via the SendGrid delivery service.","title":"SendGrid"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.sendgrid.SendgridNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.sendgrid.SendgridNotification.api_key","text":"API key to use to authenticate with SendGrid.","title":"api_key"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.sendgrid.SendgridNotification.from_address","text":"Email address to send the mail as. RFC-5322 formatted mailbox addresses are also supported, e.g. Radarr <radarr@example.com> .","title":"from_address"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.sendgrid.SendgridNotification.recipient_addresses","text":"The recipient email addresses of the notification mail. At least one recipient address is required.","title":"recipient_addresses"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.Notification.tags","text":"Radarr tags to associate this notification connection with.","title":"tags"},{"location":"plugins/radarr/configuration/settings/notifications/#supported-notification-triggers_16","text":"","title":"Supported Notification Triggers"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_grab","text":"Notify when movies are available for download and have been sent to a download client.","title":"on_grab"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_import","text":"Notify when movies are successfully imported (downloaded).","title":"on_import"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_upgrade","text":"Notify when movies are upgraded to a better quality.","title":"on_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_added","text":"Notify when movies are added to Radarr's library to monitor.","title":"on_movie_added"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_delete","text":"Notify when movies are deleted.","title":"on_movie_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete","text":"Notify when movie files are deleted.","title":"on_movie_file_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete_for_upgrade","text":"Notify when movie files are deleted for upgrades.","title":"on_movie_file_delete_for_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_issue","text":"Notify on health check failures.","title":"on_health_issue"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.include_health_warnings","text":"When on_health_issue is enabled, notify for health check warnings in addition to errors.","title":"include_health_warnings"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_restored","text":"Notify when health check failures have been resolved.","title":"on_health_restored"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_manual_interaction_required","text":"Notify when manual interaction is required to resolve an issue.","title":"on_manual_interaction_required"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_application_update","text":"Notify when Radarr gets updated to a new version.","title":"on_application_update"},{"location":"plugins/radarr/configuration/settings/notifications/#signal","text":"Send media update and health alert messages to a Signal user/group.","title":"Signal"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.signal.SignalNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.signal.SignalNotification.hostname","text":"Signal API hostname.","title":"hostname"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.signal.SignalNotification.port","text":"Signal API access port.","title":"port"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.signal.SignalNotification.use_ssl","text":"Use HTTPS instead of HTTP when connecting to Signal API.","title":"use_ssl"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.signal.SignalNotification.sender_number","text":"Phone number of the sender registered in Signal.","title":"sender_number"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.signal.SignalNotification.receiver_id","text":"Group ID / phone number of the receiver.","title":"receiver_id"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.signal.SignalNotification.username","text":"Signal API auth username.","title":"username"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.signal.SignalNotification.password","text":"Signal API auth password.","title":"password"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.Notification.tags","text":"Radarr tags to associate this notification connection with.","title":"tags"},{"location":"plugins/radarr/configuration/settings/notifications/#supported-notification-triggers_17","text":"","title":"Supported Notification Triggers"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_grab","text":"Notify when movies are available for download and have been sent to a download client.","title":"on_grab"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_import","text":"Notify when movies are successfully imported (downloaded).","title":"on_import"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_upgrade","text":"Notify when movies are upgraded to a better quality.","title":"on_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_added","text":"Notify when movies are added to Radarr's library to monitor.","title":"on_movie_added"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_delete","text":"Notify when movies are deleted.","title":"on_movie_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete","text":"Notify when movie files are deleted.","title":"on_movie_file_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete_for_upgrade","text":"Notify when movie files are deleted for upgrades.","title":"on_movie_file_delete_for_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_issue","text":"Notify on health check failures.","title":"on_health_issue"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.include_health_warnings","text":"When on_health_issue is enabled, notify for health check warnings in addition to errors.","title":"include_health_warnings"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_restored","text":"Notify when health check failures have been resolved.","title":"on_health_restored"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_manual_interaction_required","text":"Notify when manual interaction is required to resolve an issue.","title":"on_manual_interaction_required"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_application_update","text":"Notify when Radarr gets updated to a new version.","title":"on_application_update"},{"location":"plugins/radarr/configuration/settings/notifications/#simplepush","text":"Send media update and health alert messages to Simplepush.","title":"Simplepush"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.simplepush.SimplepushNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.simplepush.SimplepushNotification.api_key","text":"Simplepush API key.","title":"api_key"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.simplepush.SimplepushNotification.event","text":"Customise the behaviour of push notification.","title":"event"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.Notification.tags","text":"Radarr tags to associate this notification connection with.","title":"tags"},{"location":"plugins/radarr/configuration/settings/notifications/#supported-notification-triggers_18","text":"","title":"Supported Notification Triggers"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_grab","text":"Notify when movies are available for download and have been sent to a download client.","title":"on_grab"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_import","text":"Notify when movies are successfully imported (downloaded).","title":"on_import"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_upgrade","text":"Notify when movies are upgraded to a better quality.","title":"on_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_added","text":"Notify when movies are added to Radarr's library to monitor.","title":"on_movie_added"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_delete","text":"Notify when movies are deleted.","title":"on_movie_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete","text":"Notify when movie files are deleted.","title":"on_movie_file_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete_for_upgrade","text":"Notify when movie files are deleted for upgrades.","title":"on_movie_file_delete_for_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_issue","text":"Notify on health check failures.","title":"on_health_issue"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.include_health_warnings","text":"When on_health_issue is enabled, notify for health check warnings in addition to errors.","title":"include_health_warnings"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_restored","text":"Notify when health check failures have been resolved.","title":"on_health_restored"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_manual_interaction_required","text":"Notify when manual interaction is required to resolve an issue.","title":"on_manual_interaction_required"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_application_update","text":"Notify when Radarr gets updated to a new version.","title":"on_application_update"},{"location":"plugins/radarr/configuration/settings/notifications/#slack","text":"Send media update and health alert messages to a Slack channel.","title":"Slack"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.slack.SlackNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.slack.SlackNotification.webhook_url","text":"Webhook URL for the Slack channel to send to.","title":"webhook_url"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.slack.SlackNotification.username","text":"Username to post as.","title":"username"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.slack.SlackNotification.icon","text":"The icon that is used for messages from this integration (emoji or URL). If unset, blank or set to None , use the default for the user.","title":"icon"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.slack.SlackNotification.channel","text":"If set, overrides the default channel in the webhook.","title":"channel"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.Notification.tags","text":"Radarr tags to associate this notification connection with.","title":"tags"},{"location":"plugins/radarr/configuration/settings/notifications/#supported-notification-triggers_19","text":"","title":"Supported Notification Triggers"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_grab","text":"Notify when movies are available for download and have been sent to a download client.","title":"on_grab"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_import","text":"Notify when movies are successfully imported (downloaded).","title":"on_import"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_upgrade","text":"Notify when movies are upgraded to a better quality.","title":"on_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_rename","text":"Notify when movies are renamed.","title":"on_rename"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_delete","text":"Notify when movies are deleted.","title":"on_movie_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete","text":"Notify when movie files are deleted.","title":"on_movie_file_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete_for_upgrade","text":"Notify when movie files are deleted for upgrades.","title":"on_movie_file_delete_for_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_issue","text":"Notify on health check failures.","title":"on_health_issue"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.include_health_warnings","text":"When on_health_issue is enabled, notify for health check warnings in addition to errors.","title":"include_health_warnings"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_restored","text":"Notify when health check failures have been resolved.","title":"on_health_restored"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_manual_interaction_required","text":"Notify when manual interaction is required to resolve an issue.","title":"on_manual_interaction_required"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_application_update","text":"Notify when Radarr gets updated to a new version.","title":"on_application_update"},{"location":"plugins/radarr/configuration/settings/notifications/#synology-indexer","text":"Send media update and health alert push notifications to a Synology Indexer.","title":"Synology Indexer"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.synology_indexer.SynologyIndexerNotification.type","text":"Type values associated with this kind of connection.","title":"type"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.synology_indexer.SynologyIndexerNotification.update_library","text":"Call synoindex on localhost to update library files.","title":"update_library"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.Notification.tags","text":"Radarr tags to associate this notification connection with.","title":"tags"},{"location":"plugins/radarr/configuration/settings/notifications/#supported-notification-triggers_20","text":"","title":"Supported Notification Triggers"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_import","text":"Notify when movies are successfully imported (downloaded).","title":"on_import"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_upgrade","text":"Notify when movies are upgraded to a better quality.","title":"on_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_rename","text":"Notify when movies are renamed.","title":"on_rename"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_delete","text":"Notify when movies are deleted.","title":"on_movie_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete","text":"Notify when movie files are deleted.","title":"on_movie_file_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete_for_upgrade","text":"Notify when movie files are deleted for upgrades.","title":"on_movie_file_delete_for_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#telegram","text":"Send media update and health alert messages to a Telegram chat room.","title":"Telegram"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.telegram.TelegramNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.telegram.TelegramNotification.bot_token","text":"The bot token assigned to this application.","title":"bot_token"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.telegram.TelegramNotification.chat_id","text":"The ID of the chat room to send messages to. You must start a conversation with the bot or add it to your group to receive messages.","title":"chat_id"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.telegram.TelegramNotification.send_silently","text":"Sends the message silently. Users will receive a notification with no sound.","title":"send_silently"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.Notification.tags","text":"Radarr tags to associate this notification connection with.","title":"tags"},{"location":"plugins/radarr/configuration/settings/notifications/#supported-notification-triggers_21","text":"","title":"Supported Notification Triggers"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_grab","text":"Notify when movies are available for download and have been sent to a download client.","title":"on_grab"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_import","text":"Notify when movies are successfully imported (downloaded).","title":"on_import"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_upgrade","text":"Notify when movies are upgraded to a better quality.","title":"on_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_added","text":"Notify when movies are added to Radarr's library to monitor.","title":"on_movie_added"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_delete","text":"Notify when movies are deleted.","title":"on_movie_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete","text":"Notify when movie files are deleted.","title":"on_movie_file_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete_for_upgrade","text":"Notify when movie files are deleted for upgrades.","title":"on_movie_file_delete_for_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_issue","text":"Notify on health check failures.","title":"on_health_issue"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.include_health_warnings","text":"When on_health_issue is enabled, notify for health check warnings in addition to errors.","title":"include_health_warnings"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_restored","text":"Notify when health check failures have been resolved.","title":"on_health_restored"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_manual_interaction_required","text":"Notify when manual interaction is required to resolve an issue.","title":"on_manual_interaction_required"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_application_update","text":"Notify when Radarr gets updated to a new version.","title":"on_application_update"},{"location":"plugins/radarr/configuration/settings/notifications/#trakt","text":"Buildarr is unable to manage Trakt notification connections at this time, due to Plex requiring external authentication using OAuth2. Please add the Trakt notification connection manually in the Radarr UI. Warning Ensure delete_unmanaged is set to false in Buildarr, otherwise the Trakt notification connection will be removed from Radarr whenever Buildarr performs an update run.","title":"Trakt"},{"location":"plugins/radarr/configuration/settings/notifications/#twitter","text":"Buildarr is unable to manage Twitter notification connections at this time, due to Plex requiring external authentication using OAuth2. Please add the Twitter notification connection manually in the Radarr UI. Warning Ensure delete_unmanaged is set to false in Buildarr, otherwise the Twitter notification connection will be removed from Radarr whenever Buildarr performs an update run.","title":"Twitter"},{"location":"plugins/radarr/configuration/settings/notifications/#webhook","text":"Send media update and health alert notifications to a webhook API.","title":"Webhook"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.webhook.WebhookNotification.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.webhook.WebhookNotification.method","text":"HTTP request method type to use. Values: POST PUT","title":"method"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.webhook.WebhookNotification.username","text":"Webhook API username, if required.","title":"username"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.webhook.WebhookNotification.password","text":"Webhook API password, if required.","title":"password"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.Notification.tags","text":"Radarr tags to associate this notification connection with.","title":"tags"},{"location":"plugins/radarr/configuration/settings/notifications/#supported-notification-triggers_22","text":"","title":"Supported Notification Triggers"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_grab","text":"Notify when movies are available for download and have been sent to a download client.","title":"on_grab"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_import","text":"Notify when movies are successfully imported (downloaded).","title":"on_import"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_upgrade","text":"Notify when movies are upgraded to a better quality.","title":"on_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_rename","text":"Notify when movies are renamed.","title":"on_rename"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_added","text":"Notify when movies are added to Radarr's library to monitor.","title":"on_movie_added"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_delete","text":"Notify when movies are deleted.","title":"on_movie_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete","text":"Notify when movie files are deleted.","title":"on_movie_file_delete"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_movie_file_delete_for_upgrade","text":"Notify when movie files are deleted for upgrades.","title":"on_movie_file_delete_for_upgrade"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_issue","text":"Notify on health check failures.","title":"on_health_issue"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.include_health_warnings","text":"When on_health_issue is enabled, notify for health check warnings in addition to errors.","title":"include_health_warnings"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_health_restored","text":"Notify when health check failures have been resolved.","title":"on_health_restored"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_manual_interaction_required","text":"Notify when manual interaction is required to resolve an issue.","title":"on_manual_interaction_required"},{"location":"plugins/radarr/configuration/settings/notifications/#buildarr_radarr.config.settings.notifications.base.NotificationTriggers.on_application_update","text":"Notify when Radarr gets updated to a new version.","title":"on_application_update"},{"location":"plugins/radarr/configuration/settings/quality/","text":"Quality # Quality definitions are used to set the permitted bit rates for each quality level. These can either be set manually within Buildarr, or profiles can be imported from TRaSH-Guides. radarr : settings : quality : trash_id : aed34b9f60ee115dfa7918b742336277 # movie definitions : Bluray-480p : # \"Quality\" column name (not \"Title\") # title: null # Optional. Set when you want to change the display name. min : 2 preferred : 95 max : 100 # Add additional override quality definitions here Quality definition profiles retrieved from TRaSH-Guides are automatically kept up to date by Buildarr, with the latest values being pushed to Radarr on an update run. For more information, refer to the guides from WikiArr and TRaSH-Guides . TRaSH-Guides quality definition profiles # TRaSH-Guides provides presets for Radarr quality definitions ideal for different use cases. Type Trash ID movie aed34b9f60ee115dfa7918b742336277 Using only the Trash ID, Buildarr can import these profiles and use them to configure the Radarr instance, making it much more convenient to get started with a known-good configuration. radarr : settings : quality : trash_id : aed34b9f60ee115dfa7918b742336277 # movie When using Buildarr daemon it will also automatically update the Radarr instance whenever the guide's recommendations change, as it always uses the latest version on each update run. trash_id : Optional [ TrashID ] = None class-attribute instance-attribute # Trash ID of the TRaSH-Guides quality definition profile to load default values from. If there is an update in the profile, the quality definitions will be updated accordingly. Overriding quality definitions # If you would like to fine tune the parameters yourself, Buildarr supports configuring all quality definitions attributes manually. You can also combine this with a TRaSH-Guides profile using trash_id , to override specific quality definitions when values different from the profile are required. radarr : settings : quality : # trash_id: ... # When set, the below definitions override the values in this profile. definitions : Bluray-480p : min : 2 preferred : null # Max preferred max : null # Unlimited DVD : title : DVD-480p min : 2 preferred : 95 max : 100 title : Optional [ str ] = None class-attribute instance-attribute # The name of the quality in the GUI. If set to an empty string or null , it will always be set to the name of the quality itself. (e.g. For the Bluray-480p quality, the GUI title will also be Bluray-480p ) min : float = Field ( ... , ge = 0 , le = QUALITYDEFINITION_MIN_MAX ) class-attribute instance-attribute # The minimum allowed bitrate for a quality level, in megabytes per minute (MB/min). Must be set at least 1MB/min lower than preferred . The minimum value is 0 , and the maximum value is 398 . preferred : Optional [ float ] = Field ( ... , ge = 0 , le = QUALITYDEFINITION_PREFERRED_MAX ) class-attribute instance-attribute # The maximum allowed bitrate for a quality level, in megabytes per minute (MB/min). Must be set at least 1MB/min higher than min , and 1MB/min lower than max . If set to null or 399 , prefer the highest possible bitrate. max : Optional [ float ] = Field ( ... , ge = 1 , le = QUALITYDEFINITION_MAX ) class-attribute instance-attribute # The maximum allowed bitrate for a quality level, in megabytes per minute (MB/min). Must be set at least 1MB/min higher than preferred . If set to null or 400 , the maximum bit rate will be unlimited.","title":"Quality"},{"location":"plugins/radarr/configuration/settings/quality/#quality","text":"Quality definitions are used to set the permitted bit rates for each quality level. These can either be set manually within Buildarr, or profiles can be imported from TRaSH-Guides. radarr : settings : quality : trash_id : aed34b9f60ee115dfa7918b742336277 # movie definitions : Bluray-480p : # \"Quality\" column name (not \"Title\") # title: null # Optional. Set when you want to change the display name. min : 2 preferred : 95 max : 100 # Add additional override quality definitions here Quality definition profiles retrieved from TRaSH-Guides are automatically kept up to date by Buildarr, with the latest values being pushed to Radarr on an update run. For more information, refer to the guides from WikiArr and TRaSH-Guides .","title":"Quality"},{"location":"plugins/radarr/configuration/settings/quality/#trash-guides-quality-definition-profiles","text":"TRaSH-Guides provides presets for Radarr quality definitions ideal for different use cases. Type Trash ID movie aed34b9f60ee115dfa7918b742336277 Using only the Trash ID, Buildarr can import these profiles and use them to configure the Radarr instance, making it much more convenient to get started with a known-good configuration. radarr : settings : quality : trash_id : aed34b9f60ee115dfa7918b742336277 # movie When using Buildarr daemon it will also automatically update the Radarr instance whenever the guide's recommendations change, as it always uses the latest version on each update run.","title":"TRaSH-Guides quality definition profiles"},{"location":"plugins/radarr/configuration/settings/quality/#buildarr_radarr.config.settings.quality.RadarrQualitySettings.trash_id","text":"Trash ID of the TRaSH-Guides quality definition profile to load default values from. If there is an update in the profile, the quality definitions will be updated accordingly.","title":"trash_id"},{"location":"plugins/radarr/configuration/settings/quality/#overriding-quality-definitions","text":"If you would like to fine tune the parameters yourself, Buildarr supports configuring all quality definitions attributes manually. You can also combine this with a TRaSH-Guides profile using trash_id , to override specific quality definitions when values different from the profile are required. radarr : settings : quality : # trash_id: ... # When set, the below definitions override the values in this profile. definitions : Bluray-480p : min : 2 preferred : null # Max preferred max : null # Unlimited DVD : title : DVD-480p min : 2 preferred : 95 max : 100","title":"Overriding quality definitions"},{"location":"plugins/radarr/configuration/settings/quality/#buildarr_radarr.config.settings.quality.QualityDefinition.title","text":"The name of the quality in the GUI. If set to an empty string or null , it will always be set to the name of the quality itself. (e.g. For the Bluray-480p quality, the GUI title will also be Bluray-480p )","title":"title"},{"location":"plugins/radarr/configuration/settings/quality/#buildarr_radarr.config.settings.quality.QualityDefinition.min","text":"The minimum allowed bitrate for a quality level, in megabytes per minute (MB/min). Must be set at least 1MB/min lower than preferred . The minimum value is 0 , and the maximum value is 398 .","title":"min"},{"location":"plugins/radarr/configuration/settings/quality/#buildarr_radarr.config.settings.quality.QualityDefinition.preferred","text":"The maximum allowed bitrate for a quality level, in megabytes per minute (MB/min). Must be set at least 1MB/min higher than min , and 1MB/min lower than max . If set to null or 399 , prefer the highest possible bitrate.","title":"preferred"},{"location":"plugins/radarr/configuration/settings/quality/#buildarr_radarr.config.settings.quality.QualityDefinition.max","text":"The maximum allowed bitrate for a quality level, in megabytes per minute (MB/min). Must be set at least 1MB/min higher than preferred . If set to null or 400 , the maximum bit rate will be unlimited.","title":"max"},{"location":"plugins/radarr/configuration/settings/tags/","text":"Tags # Tags are used to associate media files with certain resources (e.g. indexers). radarr : settings : tags : definitions : - movies - anime-movies To be able to use those tags in Buildarr, they need to be defined in this configuration section. definitions : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Define tags that are used within Buildarr here. If they are not defined here, you may get errors resulting from non-existent tags from either Buildarr or Radarr.","title":"Tags"},{"location":"plugins/radarr/configuration/settings/tags/#tags","text":"Tags are used to associate media files with certain resources (e.g. indexers). radarr : settings : tags : definitions : - movies - anime-movies To be able to use those tags in Buildarr, they need to be defined in this configuration section.","title":"Tags"},{"location":"plugins/radarr/configuration/settings/tags/#buildarr_radarr.config.settings.tags.RadarrTagsSettings.definitions","text":"Define tags that are used within Buildarr here. If they are not defined here, you may get errors resulting from non-existent tags from either Buildarr or Radarr.","title":"definitions"},{"location":"plugins/radarr/configuration/settings/ui/","text":"UI # Radarr user interface configuration can also be set directly from Buildarr. radarr : settings : ui : first_day_of_week : monday week_column_header : day-first short_date_format : word-month-second long_date_format : day-first time_format : twentyfour-hour show_relative_dates : true enable_color_impaired_mode : false theme : auto movie_info_language : english ui_language : english first_day_of_week : FirstDayOfWeek = FirstDayOfWeek . sunday class-attribute instance-attribute # The first day of the week that Radarr will show in the calendar. Values: sunday monday week_column_header : WeekColumnHeader = WeekColumnHeader . month_first class-attribute instance-attribute # The format of the date in columns when \"Week\" is the active view in the calendar. Values: month-first - Print month first (e.g. Tue 3/25) month-first-padded - Print month first with padded numbers (e.g. Tue 03/25) day-first - Print day first with padded numbers (e.g. Tue 25/3) day-first-padded - Print day first with padded numbers (e.g. Tue 25/03) short_date_format : ShortDateFormat = ShortDateFormat . word_month_first class-attribute instance-attribute # The format of short dates in the user interface. Values: word-month-first - Month as word, print month first (e.g. Mar 4 2014) word-month-second - Month as word, print month second (e.g. 4 Mar 2014) slash-month-first - Slash-separated date, print month first (e.g. 03/4/2014) slash-month-first-padded - Slash-separated date, print month first (e.g. 03/04/2014) slash-day-first - Slash-separated date, print day first (e.g. 04/03/2014) iso8601 - ISO-8601 date (e.g. 2014-03-04) long_date_format : LongDateFormat = LongDateFormat . month_first class-attribute instance-attribute # The format of long dates in the user interface. Values: month-first - Print month first (e.g. Tuesday, March 4 2014) day-first - Print day first (e.g. Tuesday, 4 March 2014) time_format : TimeFormat = TimeFormat . twelve_hour class-attribute instance-attribute # The format of time in the user information. Values: twelve-hour - 12-hour time (e.g. 5pm/5:30pm) twentyfour-hour - 24-hour time (e.g. 17:00/17:30) show_relative_dates : bool = True class-attribute instance-attribute # When set to true , Radarr will show relative dates (e.g. today, yesterday) instead of absolute dates (e.g. 4 Mar 2014). enable_color_impaired_mode : bool = False class-attribute instance-attribute # Enable an altered view style to allow colour-impaired users to better distinguish colour-coded information. theme : Theme = Theme . auto class-attribute instance-attribute # The theme to use when browsing the Radarr UI. Values: auto (Auto-detect based on browser settings) light (Light-coloured theme) dark (Dark-coloured theme) movie_info_language : LowerCaseNonEmptyStr = 'english' class-attribute instance-attribute # The language that Radarr will use for movie information in the UI. Set to original to use the original language of the media. ui_language : LowerCaseNonEmptyStr = 'english' class-attribute instance-attribute # The display language for the Radarr UI.","title":"UI"},{"location":"plugins/radarr/configuration/settings/ui/#ui","text":"Radarr user interface configuration can also be set directly from Buildarr. radarr : settings : ui : first_day_of_week : monday week_column_header : day-first short_date_format : word-month-second long_date_format : day-first time_format : twentyfour-hour show_relative_dates : true enable_color_impaired_mode : false theme : auto movie_info_language : english ui_language : english","title":"UI"},{"location":"plugins/radarr/configuration/settings/ui/#buildarr_radarr.config.settings.ui.RadarrUISettings.first_day_of_week","text":"The first day of the week that Radarr will show in the calendar. Values: sunday monday","title":"first_day_of_week"},{"location":"plugins/radarr/configuration/settings/ui/#buildarr_radarr.config.settings.ui.RadarrUISettings.week_column_header","text":"The format of the date in columns when \"Week\" is the active view in the calendar. Values: month-first - Print month first (e.g. Tue 3/25) month-first-padded - Print month first with padded numbers (e.g. Tue 03/25) day-first - Print day first with padded numbers (e.g. Tue 25/3) day-first-padded - Print day first with padded numbers (e.g. Tue 25/03)","title":"week_column_header"},{"location":"plugins/radarr/configuration/settings/ui/#buildarr_radarr.config.settings.ui.RadarrUISettings.short_date_format","text":"The format of short dates in the user interface. Values: word-month-first - Month as word, print month first (e.g. Mar 4 2014) word-month-second - Month as word, print month second (e.g. 4 Mar 2014) slash-month-first - Slash-separated date, print month first (e.g. 03/4/2014) slash-month-first-padded - Slash-separated date, print month first (e.g. 03/04/2014) slash-day-first - Slash-separated date, print day first (e.g. 04/03/2014) iso8601 - ISO-8601 date (e.g. 2014-03-04)","title":"short_date_format"},{"location":"plugins/radarr/configuration/settings/ui/#buildarr_radarr.config.settings.ui.RadarrUISettings.long_date_format","text":"The format of long dates in the user interface. Values: month-first - Print month first (e.g. Tuesday, March 4 2014) day-first - Print day first (e.g. Tuesday, 4 March 2014)","title":"long_date_format"},{"location":"plugins/radarr/configuration/settings/ui/#buildarr_radarr.config.settings.ui.RadarrUISettings.time_format","text":"The format of time in the user information. Values: twelve-hour - 12-hour time (e.g. 5pm/5:30pm) twentyfour-hour - 24-hour time (e.g. 17:00/17:30)","title":"time_format"},{"location":"plugins/radarr/configuration/settings/ui/#buildarr_radarr.config.settings.ui.RadarrUISettings.show_relative_dates","text":"When set to true , Radarr will show relative dates (e.g. today, yesterday) instead of absolute dates (e.g. 4 Mar 2014).","title":"show_relative_dates"},{"location":"plugins/radarr/configuration/settings/ui/#buildarr_radarr.config.settings.ui.RadarrUISettings.enable_color_impaired_mode","text":"Enable an altered view style to allow colour-impaired users to better distinguish colour-coded information.","title":"enable_color_impaired_mode"},{"location":"plugins/radarr/configuration/settings/ui/#buildarr_radarr.config.settings.ui.RadarrUISettings.theme","text":"The theme to use when browsing the Radarr UI. Values: auto (Auto-detect based on browser settings) light (Light-coloured theme) dark (Dark-coloured theme)","title":"theme"},{"location":"plugins/radarr/configuration/settings/ui/#buildarr_radarr.config.settings.ui.RadarrUISettings.movie_info_language","text":"The language that Radarr will use for movie information in the UI. Set to original to use the original language of the media.","title":"movie_info_language"},{"location":"plugins/radarr/configuration/settings/ui/#buildarr_radarr.config.settings.ui.RadarrUISettings.ui_language","text":"The display language for the Radarr UI.","title":"ui_language"},{"location":"plugins/radarr/configuration/settings/profiles/delay-profiles/","text":"Delay Profiles # Delay profiles facilitate better release matching by delaying grabbing movies by a configured amount of time after release. This gives time for more releases to become available to your configured indexers, allowing Radarr to grab releases that better match your preferences. radarr : settings : profiles : delay_profiles : # Set to `true` or `false` as desired. (Default `false`) # Works a bit differently to other profile types, see # the `delete_unmanaged` attribute docs. delete_unmanaged : true definitions : # Ordered in priority, highest priority first. - preferred_protocol : \"torrent-prefer\" usenet_delay : 1440 torrent_delay : 1440 bypass_if_highest_quality : true tags : - \"anime-movies\" # Add additional delay profiles here as needed. ... # Default delay profile goes last, and MUST be defined # if you have defined any other delay profiles. - preferred_protocol : \"usenet-prefer\" usenet_delay : 0 torrent_delay : 0 bypass_if_highest_quality : false # Tags will be ignored for default delay profile. In Buildarr, delay profiles are defined using an ordered list structure, prioritised from first to last (top to bottom). The last delay profile in the list is assumed to be the default delay profile. Every non-default delay profile must have tags defined, and the default delay profile must have no tags defined. For more information, see this guide from WikiArr . delete_unmanaged = False class-attribute instance-attribute # Controls how Buildarr manages existing delay profiles in Radarr when no delay profiles are defined in Buildarr. When set to True and there are no delay profiles defined in Buildarr, delete all delay profiles except the default delay profile (which can't be deleted). When set to False and there are no delay profiles defined in Buildarr, do not modify the existing delay profiles in Radarr at all. Due to the unique way delay profiles are structured, when they are defined in Buildarr, they always overwrite the existing delay profiles on the remote Radarr instance and configure it exactly as laid out in Buildarr, irrespective of this value. If unsure, leave this value set to False . definitions : List [ DelayProfile ] = [] class-attribute instance-attribute # Define delay profiles to configure on Radarr here. The final delay profile in the list is assumed to be the default delay profile. Creating a delay profile # The following parameters are available for configuring delay profiles. A preferred protocol must be specified for all delay profiles. Tags must be defined on all except the final profile (the default profile), where tags must not be defined. preferred_protocol : PreferredProtocol instance-attribute # Choose which protocol(s) to use and which one is preferred when choosing between otherwise equal releases. Values: usenet-prefer (Prefer Usenet) torrent-prefer (Prefer Torrent) usenet-only (Only Usenet) torrent-only (Only Torrent) usenet_delay : int = Field ( 0 , ge = 0 ) class-attribute instance-attribute # Delay (in minutes) to wait before grabbing Usenet releases. torrent_delay : int = Field ( 0 , ge = 0 ) class-attribute instance-attribute # Delay (in minutes) to wait before grabbing torrent releases. bypass_if_highest_quality : bool = False class-attribute instance-attribute # Bypass the delay if a found release is the highest quality allowed in the quality profile that applies to it, and uses the preferred protocol as defined in this delay profile. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Tags to assign to this delay profile. This delay profile will apply to movies with at least one matching tag.","title":"Delay Profiles"},{"location":"plugins/radarr/configuration/settings/profiles/delay-profiles/#delay-profiles","text":"Delay profiles facilitate better release matching by delaying grabbing movies by a configured amount of time after release. This gives time for more releases to become available to your configured indexers, allowing Radarr to grab releases that better match your preferences. radarr : settings : profiles : delay_profiles : # Set to `true` or `false` as desired. (Default `false`) # Works a bit differently to other profile types, see # the `delete_unmanaged` attribute docs. delete_unmanaged : true definitions : # Ordered in priority, highest priority first. - preferred_protocol : \"torrent-prefer\" usenet_delay : 1440 torrent_delay : 1440 bypass_if_highest_quality : true tags : - \"anime-movies\" # Add additional delay profiles here as needed. ... # Default delay profile goes last, and MUST be defined # if you have defined any other delay profiles. - preferred_protocol : \"usenet-prefer\" usenet_delay : 0 torrent_delay : 0 bypass_if_highest_quality : false # Tags will be ignored for default delay profile. In Buildarr, delay profiles are defined using an ordered list structure, prioritised from first to last (top to bottom). The last delay profile in the list is assumed to be the default delay profile. Every non-default delay profile must have tags defined, and the default delay profile must have no tags defined. For more information, see this guide from WikiArr .","title":"Delay Profiles"},{"location":"plugins/radarr/configuration/settings/profiles/delay-profiles/#buildarr_radarr.config.settings.profiles.delay_profiles.RadarrDelayProfilesSettings.delete_unmanaged","text":"Controls how Buildarr manages existing delay profiles in Radarr when no delay profiles are defined in Buildarr. When set to True and there are no delay profiles defined in Buildarr, delete all delay profiles except the default delay profile (which can't be deleted). When set to False and there are no delay profiles defined in Buildarr, do not modify the existing delay profiles in Radarr at all. Due to the unique way delay profiles are structured, when they are defined in Buildarr, they always overwrite the existing delay profiles on the remote Radarr instance and configure it exactly as laid out in Buildarr, irrespective of this value. If unsure, leave this value set to False .","title":"delete_unmanaged"},{"location":"plugins/radarr/configuration/settings/profiles/delay-profiles/#buildarr_radarr.config.settings.profiles.delay_profiles.RadarrDelayProfilesSettings.definitions","text":"Define delay profiles to configure on Radarr here. The final delay profile in the list is assumed to be the default delay profile.","title":"definitions"},{"location":"plugins/radarr/configuration/settings/profiles/delay-profiles/#creating-a-delay-profile","text":"The following parameters are available for configuring delay profiles. A preferred protocol must be specified for all delay profiles. Tags must be defined on all except the final profile (the default profile), where tags must not be defined.","title":"Creating a delay profile"},{"location":"plugins/radarr/configuration/settings/profiles/delay-profiles/#buildarr_radarr.config.settings.profiles.delay_profiles.DelayProfile.preferred_protocol","text":"Choose which protocol(s) to use and which one is preferred when choosing between otherwise equal releases. Values: usenet-prefer (Prefer Usenet) torrent-prefer (Prefer Torrent) usenet-only (Only Usenet) torrent-only (Only Torrent)","title":"preferred_protocol"},{"location":"plugins/radarr/configuration/settings/profiles/delay-profiles/#buildarr_radarr.config.settings.profiles.delay_profiles.DelayProfile.usenet_delay","text":"Delay (in minutes) to wait before grabbing Usenet releases.","title":"usenet_delay"},{"location":"plugins/radarr/configuration/settings/profiles/delay-profiles/#buildarr_radarr.config.settings.profiles.delay_profiles.DelayProfile.torrent_delay","text":"Delay (in minutes) to wait before grabbing torrent releases.","title":"torrent_delay"},{"location":"plugins/radarr/configuration/settings/profiles/delay-profiles/#buildarr_radarr.config.settings.profiles.delay_profiles.DelayProfile.bypass_if_highest_quality","text":"Bypass the delay if a found release is the highest quality allowed in the quality profile that applies to it, and uses the preferred protocol as defined in this delay profile.","title":"bypass_if_highest_quality"},{"location":"plugins/radarr/configuration/settings/profiles/delay-profiles/#buildarr_radarr.config.settings.profiles.delay_profiles.DelayProfile.tags","text":"Tags to assign to this delay profile. This delay profile will apply to movies with at least one matching tag.","title":"tags"},{"location":"plugins/radarr/configuration/settings/profiles/quality-profiles/","text":"Quality Profiles # Quality profiles are used by Radarr as the guideline for desired quality when searching for releases. When media is requested for download in Radarr, the user selects a quality profile to use. Once all available releases have been found, the release that most closely matches the quality profile will be selected for download. With a quality profile you can prioritise media releases by the desired quality level, arbitrary conditions using custom formats, or language. Parameters for upgrading existing media to higher quality versions are also defined here. radarr : settings : profiles : quality_profiles : delete_unmanaged : false definitions : # Add Quality profiles here. # The name of the block becomes the name of the quality profile. HD/SD : upgrades_allowed : true upgrade_until_quality : Bluray-1080p qualities : - Bluray-1080p # Quality definition name. - name : WEB 1080p # Group quality definitions of equal priority. members : - WEBRip-1080p - WEBDL-1080p - Bluray-720p - name : WEB 720p members : - WEBRip-720p - WEBDL-720p - Bluray-576p - Bluray-480p - name : WEB 480p members : - WEBRip-480p - WEBDL-480p - name : DVD-Video members : - DVD-R - DVD minimum_custom_format_score : 0 upgrade_until_custom_format_score : 10000 custom_formats : - name : remaster # Use the `default_score` field in the custom format definition. - name : 4k-remaster score : 100 # Explicitly set score for the custom format in the profile. language : english In Buildarr, quality profiles are defined using a dictonary structure, where the name of the definition becomes the name of the quality profile in Radarr. delete_unmanaged : bool = False class-attribute instance-attribute # Automatically delete quality profiles not defined in Buildarr. Out of the box Radarr provides some pre-defined quality profiles. If there are no quality profiles defined in Buildarr and delete_unmanaged is true , Buildarr will delete all existing profiles. Be careful when using delete_unmanaged . definitions : Dict [ str , QualityProfile ] = {} class-attribute instance-attribute # Define quality profiles to configure on Radarr here. Creating a quality profile # A basic quality profile looks something like this. ... quality_profiles : definitions : SD : upgrades_allowed : true upgrade_until_quality : Bluray-480p qualities : - Bluray-480p - DVD - name : WEB 480p members : - WEBDL-480p - WEBRip-480p custom_formats : - name : remaster score : 0 language : english For more insight into reasonable values for quality profiles, refer to these guides from WikiArr and TRaSH-Guides ( general , anime ). upgrades_allowed : bool = False class-attribute instance-attribute # Enable automatic upgrading if a higher quality version of the media file becomes available. If disabled, media files will not be upgraded after they have been downloaded. Quality Levels # Quality levels are used to prioritise media releases by resolution, bitrate and distribution method. ... qualities : - Bluray-480p - name : WEB 480p members : - WEBDL-480p - WEBRip-480p In Buildarr, the quality listed first (at the top) is given the highest priority, with subsequent qualities given lower priority. Quality levels not explicitly defined are disabled (not downloaded). Radarr supports grouping multiple qualities together to give them the same priority. In Buildarr, these are expressed by giving a name to the group, and listing the member quality levels under the members attribute. For details on the available quality levels, refer to this guide on WikiArr. upgrade_until_quality : Optional [ NonEmptyStr ] = None class-attribute instance-attribute # The maximum quality level (or quality group) to upgrade a movie to. Once this quality is reached, Radarr will no longer upgrade movie releases based on quality level. This attribute is required if upgrades_allowed is set to true . qualities : Annotated [ List [ Union [ NonEmptyStr , QualityGroup ]], Field ( min_items = 1 )] instance-attribute # The quality levels (or quality groups) to enable downloading releases for. The order determines the priority (highest priority first, lowest priority last). At least one quality level must be specified. Custom Formats # Custom formats allow for finer control of filtering and prioritising media releases. Once you have created the custom formats you want to apply in the Custom Formats section, you can assign a score under the for that custom format within the context of the quality profile, using the custom_formats attribute. ... quality_profiles : definitions : HD : upgrades_allowed : true upgrade_until_quality : Bluray-1080p qualities : - Bluray-1080p - name : WEB 1080p members : - WEBDL-1080p - WEBRip-1080p minimum_custom_format_score : 0 upgrade_until_custom_format_score : 10000 custom_formats : # Wanted - name : remaster score : 25 - name : 4k-remaster # If `score` is unset, use `default_score` as defined in the Buildarr custom format definition. # score: 25 # Unwanted - name : br-disk score : -10000 # Inverse of maximum allowed score, to ensure it is never selected. - name : lq score : -10000 - name : 3d score : -10000 language : english If a release matches that custom format, it is applied to the release, i.e. the score associated with it is added to the total for that release. If the assigned score is positive, it will increase the priority of the release, while if it is negative, it will decrease the priority. The sum of all applied custom format scores determines the priority of the release (higher is better). Custom formats that exist but have not been assigned a score, or assigned a score of 0, are still evaluated against releases, but are purely informational in nature and do not influence release selection. Settings # The following settings control how custom formats are applied to the quality profile. minimum_custom_format_score : int = 0 class-attribute instance-attribute # The minimum sum of custom format scores matching a release for the release to be considered for download. If the score sum is below this number, it will not be downloaded. upgrade_until_custom_format_score : int = 0 class-attribute instance-attribute # The maximum sum of custom format scores to upgrade a movie to. Once this number is reached, Radarr will no longer upgrade movie releases based on custom format score. This must be greater than or equal to minimum_custom_format_score . Score Definitions # Custom format score definitions in quality profiles can have the following attributes assigned to them. name : NonEmptyStr instance-attribute # The name of the custom format to assign a score to. Required. score : Optional [ int ] = None class-attribute instance-attribute # The score to add to the release if the custom format is applied. If not defined, Buildarr will use the default_score attribute from the custom format definition. This allows for defining a common score for a custom format shared between multiple quality profiles. If default_score is not defined, the score will be set to 0 (ignore this custom format). Language # Quality profiles also allow for explicit filtering by media language. Prioritisation based on language (e.g. prefer Japanese but also allow English), however, should be done using custom formats. language : NonEmptyStr = 'english' class-attribute instance-attribute # The desired media language, written in English. Use the any keyword to allow any language. Use the original keyword to require the original language of the media. All languages supported by your Radarr instance version can be defined here. Note When prioritising by language using custom formats, this attribute should be set to any . Examples: english portuguese-brazil","title":"Quality Profiles"},{"location":"plugins/radarr/configuration/settings/profiles/quality-profiles/#quality-profiles","text":"Quality profiles are used by Radarr as the guideline for desired quality when searching for releases. When media is requested for download in Radarr, the user selects a quality profile to use. Once all available releases have been found, the release that most closely matches the quality profile will be selected for download. With a quality profile you can prioritise media releases by the desired quality level, arbitrary conditions using custom formats, or language. Parameters for upgrading existing media to higher quality versions are also defined here. radarr : settings : profiles : quality_profiles : delete_unmanaged : false definitions : # Add Quality profiles here. # The name of the block becomes the name of the quality profile. HD/SD : upgrades_allowed : true upgrade_until_quality : Bluray-1080p qualities : - Bluray-1080p # Quality definition name. - name : WEB 1080p # Group quality definitions of equal priority. members : - WEBRip-1080p - WEBDL-1080p - Bluray-720p - name : WEB 720p members : - WEBRip-720p - WEBDL-720p - Bluray-576p - Bluray-480p - name : WEB 480p members : - WEBRip-480p - WEBDL-480p - name : DVD-Video members : - DVD-R - DVD minimum_custom_format_score : 0 upgrade_until_custom_format_score : 10000 custom_formats : - name : remaster # Use the `default_score` field in the custom format definition. - name : 4k-remaster score : 100 # Explicitly set score for the custom format in the profile. language : english In Buildarr, quality profiles are defined using a dictonary structure, where the name of the definition becomes the name of the quality profile in Radarr.","title":"Quality Profiles"},{"location":"plugins/radarr/configuration/settings/profiles/quality-profiles/#buildarr_radarr.config.settings.profiles.quality_profiles.RadarrQualityProfilesSettings.delete_unmanaged","text":"Automatically delete quality profiles not defined in Buildarr. Out of the box Radarr provides some pre-defined quality profiles. If there are no quality profiles defined in Buildarr and delete_unmanaged is true , Buildarr will delete all existing profiles. Be careful when using delete_unmanaged .","title":"delete_unmanaged"},{"location":"plugins/radarr/configuration/settings/profiles/quality-profiles/#buildarr_radarr.config.settings.profiles.quality_profiles.RadarrQualityProfilesSettings.definitions","text":"Define quality profiles to configure on Radarr here.","title":"definitions"},{"location":"plugins/radarr/configuration/settings/profiles/quality-profiles/#creating-a-quality-profile","text":"A basic quality profile looks something like this. ... quality_profiles : definitions : SD : upgrades_allowed : true upgrade_until_quality : Bluray-480p qualities : - Bluray-480p - DVD - name : WEB 480p members : - WEBDL-480p - WEBRip-480p custom_formats : - name : remaster score : 0 language : english For more insight into reasonable values for quality profiles, refer to these guides from WikiArr and TRaSH-Guides ( general , anime ).","title":"Creating a quality profile"},{"location":"plugins/radarr/configuration/settings/profiles/quality-profiles/#buildarr_radarr.config.settings.profiles.quality_profiles.QualityProfile.upgrades_allowed","text":"Enable automatic upgrading if a higher quality version of the media file becomes available. If disabled, media files will not be upgraded after they have been downloaded.","title":"upgrades_allowed"},{"location":"plugins/radarr/configuration/settings/profiles/quality-profiles/#quality-levels","text":"Quality levels are used to prioritise media releases by resolution, bitrate and distribution method. ... qualities : - Bluray-480p - name : WEB 480p members : - WEBDL-480p - WEBRip-480p In Buildarr, the quality listed first (at the top) is given the highest priority, with subsequent qualities given lower priority. Quality levels not explicitly defined are disabled (not downloaded). Radarr supports grouping multiple qualities together to give them the same priority. In Buildarr, these are expressed by giving a name to the group, and listing the member quality levels under the members attribute. For details on the available quality levels, refer to this guide on WikiArr.","title":"Quality Levels"},{"location":"plugins/radarr/configuration/settings/profiles/quality-profiles/#buildarr_radarr.config.settings.profiles.quality_profiles.QualityProfile.upgrade_until_quality","text":"The maximum quality level (or quality group) to upgrade a movie to. Once this quality is reached, Radarr will no longer upgrade movie releases based on quality level. This attribute is required if upgrades_allowed is set to true .","title":"upgrade_until_quality"},{"location":"plugins/radarr/configuration/settings/profiles/quality-profiles/#buildarr_radarr.config.settings.profiles.quality_profiles.QualityProfile.qualities","text":"The quality levels (or quality groups) to enable downloading releases for. The order determines the priority (highest priority first, lowest priority last). At least one quality level must be specified.","title":"qualities"},{"location":"plugins/radarr/configuration/settings/profiles/quality-profiles/#custom-formats","text":"Custom formats allow for finer control of filtering and prioritising media releases. Once you have created the custom formats you want to apply in the Custom Formats section, you can assign a score under the for that custom format within the context of the quality profile, using the custom_formats attribute. ... quality_profiles : definitions : HD : upgrades_allowed : true upgrade_until_quality : Bluray-1080p qualities : - Bluray-1080p - name : WEB 1080p members : - WEBDL-1080p - WEBRip-1080p minimum_custom_format_score : 0 upgrade_until_custom_format_score : 10000 custom_formats : # Wanted - name : remaster score : 25 - name : 4k-remaster # If `score` is unset, use `default_score` as defined in the Buildarr custom format definition. # score: 25 # Unwanted - name : br-disk score : -10000 # Inverse of maximum allowed score, to ensure it is never selected. - name : lq score : -10000 - name : 3d score : -10000 language : english If a release matches that custom format, it is applied to the release, i.e. the score associated with it is added to the total for that release. If the assigned score is positive, it will increase the priority of the release, while if it is negative, it will decrease the priority. The sum of all applied custom format scores determines the priority of the release (higher is better). Custom formats that exist but have not been assigned a score, or assigned a score of 0, are still evaluated against releases, but are purely informational in nature and do not influence release selection.","title":"Custom Formats"},{"location":"plugins/radarr/configuration/settings/profiles/quality-profiles/#settings","text":"The following settings control how custom formats are applied to the quality profile.","title":"Settings"},{"location":"plugins/radarr/configuration/settings/profiles/quality-profiles/#buildarr_radarr.config.settings.profiles.quality_profiles.QualityProfile.minimum_custom_format_score","text":"The minimum sum of custom format scores matching a release for the release to be considered for download. If the score sum is below this number, it will not be downloaded.","title":"minimum_custom_format_score"},{"location":"plugins/radarr/configuration/settings/profiles/quality-profiles/#buildarr_radarr.config.settings.profiles.quality_profiles.QualityProfile.upgrade_until_custom_format_score","text":"The maximum sum of custom format scores to upgrade a movie to. Once this number is reached, Radarr will no longer upgrade movie releases based on custom format score. This must be greater than or equal to minimum_custom_format_score .","title":"upgrade_until_custom_format_score"},{"location":"plugins/radarr/configuration/settings/profiles/quality-profiles/#score-definitions","text":"Custom format score definitions in quality profiles can have the following attributes assigned to them.","title":"Score Definitions"},{"location":"plugins/radarr/configuration/settings/profiles/quality-profiles/#buildarr_radarr.config.settings.profiles.quality_profiles.CustomFormatScore.name","text":"The name of the custom format to assign a score to. Required.","title":"name"},{"location":"plugins/radarr/configuration/settings/profiles/quality-profiles/#buildarr_radarr.config.settings.profiles.quality_profiles.CustomFormatScore.score","text":"The score to add to the release if the custom format is applied. If not defined, Buildarr will use the default_score attribute from the custom format definition. This allows for defining a common score for a custom format shared between multiple quality profiles. If default_score is not defined, the score will be set to 0 (ignore this custom format).","title":"score"},{"location":"plugins/radarr/configuration/settings/profiles/quality-profiles/#language","text":"Quality profiles also allow for explicit filtering by media language. Prioritisation based on language (e.g. prefer Japanese but also allow English), however, should be done using custom formats.","title":"Language"},{"location":"plugins/radarr/configuration/settings/profiles/quality-profiles/#buildarr_radarr.config.settings.profiles.quality_profiles.QualityProfile.language","text":"The desired media language, written in English. Use the any keyword to allow any language. Use the original keyword to require the original language of the media. All languages supported by your Radarr instance version can be defined here. Note When prioritising by language using custom formats, this attribute should be set to any . Examples: english portuguese-brazil","title":"language"},{"location":"plugins/sonarr/","text":"Buildarr Sonarr Plugin # The Buildarr Sonarr plugin ( buildarr-sonarr ) is a plugin for Buildarr that adds the capability to configure and manage Sonarr instances. Sonarr is a PVR application which downloads, renames and manages the lifecycle of TV shows in your media library. It is capable of scanning for higher quality versions of your media and automatically upgrading them when a suitable version is available. Currently, Sonarr V3 is the only supported version. Sonarr V4 support is planned for the future. Installation # From version 0.4.0 onwards, the Buildarr Sonarr plugin is now an independent package, developed separately from the core Buildarr package. When using Buildarr as a standalone application , it can simply be installed using pip : $ pip install buildarr buildarr-sonarr When using Buildarr as a Docker container , the Sonarr plugin is still bundled in the official container ( callum027/buildarr ). There is no need to install it separately. You can upgrade, or pin the version of the plugin to a specific version, within the container by setting the $BUILDARR_INSTALL_PACKAGES environment variable in the docker run command using --env / -e : -e BUILDARR_INSTALL_PACKAGES = \"buildarr-sonar==<version>\" In Buildarr version 0.3.0 and earlier, the Sonarr plugin was vendored within the core Buildarr package. On these versions, it is not necessary to install the Sonarr plugin separately. Quick Start # To use the Sonarr plugin, create a sonarr block within buildarr.yml , and enter the connection information required for the Buildarr instance to connect to the Sonarr instance you'd like to manage. Buildarr won't modify anything yet since no configuration has been defined, but you are able to test if Buildarr is able to connect to and authenticate with the Sonarr instance. --- buildarr : watch_config : true sonarr : hostname : \"localhost\" # Defaults to `sonarr`, or the instance name for instance-specific configs. port : 8989 # Defaults to 8989. protocol : \"http\" # Defaults to `http`. api_key : \"...\" # Optional. If undefined, auto-fetch (authentication must be disabled). Now try a buildarr run . If the output is similar to the below output, Buildarr was able to connect to your Sonarr instance. 2023-03-29 20:39:50,856 buildarr:1 buildarr.cli.run [INFO] Buildarr version 0.4.0 (log level: INFO) 2023-03-29 20:39:50,856 buildarr:1 buildarr.cli.run [INFO] Loading configuration file '/config/buildarr.yml' 2023-03-29 20:39:50,872 buildarr:1 buildarr.cli.run [INFO] Finished loading configuration file 2023-03-29 20:39:50,874 buildarr:1 buildarr.cli.run [INFO] Loaded plugins: sonarr (0.4.0) 2023-03-29 20:39:50,875 buildarr:1 buildarr.cli.run [INFO] Loading instance configurations 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Finished loading instance configurations 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Running with plugins: sonarr 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Resolving instance dependencies 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Finished resolving instance dependencies 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Loading secrets file from '/config/secrets.json' 2023-03-29 20:39:50,886 buildarr:1 buildarr.cli.run [INFO] Finished loading secrets file 2023-03-29 20:39:50,886 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Checking secrets 2023-03-29 20:39:50,912 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Connection test successful using cached secrets 2023-03-29 20:39:50,912 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished checking secrets 2023-03-29 20:39:50,912 buildarr:1 buildarr.cli.run [INFO] Saving updated secrets file to '/config/secrets.json' 2023-03-29 20:39:50,914 buildarr:1 buildarr.cli.run [INFO] Finished saving updated secrets file 2023-03-29 20:39:50,914 buildarr:1 buildarr.cli.run [INFO] Updating configuration on remote instances 2023-03-29 20:39:50,914 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Getting remote configuration 2023-03-29 20:39:51,406 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished getting remote configuration 2023-03-29 20:39:51,463 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Updating remote configuration 2023-03-29 20:39:52,019 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Remote configuration is up to date 2023-03-29 20:39:52,019 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished updating remote configuration 2023-03-29 20:39:52,019 buildarr:1 buildarr.cli.run [INFO] Finished updating configuration on remote instances Configuring your Sonarr instance # The following sections cover comprehensive configuration of a Sonarr instance. Note that these documents do not show how you should configure a Sonarr instance. Rather, they show how you can configure a Sonarr instance the way you want with Buildarr. For more information on how to optimally configure Sonarr, you can refer to the excellent guides from WikiArr and TRaSH-Guides . Host Configuration Media Management Profiles Quality Profiles Language Profiles Delay Profiles Release Profiles Quality Indexers Download Clients Import Lists Connect Metadata Tags General UI Dumping an existing Sonarr instance configuration # Buildarr is capable of dumping a running Sonarr instance's configuration. $ buildarr sonarr dump-config http://localhost:8989 > sonarr.yml Sonarr instance API key: <Paste API key here> The dumped YAML object can be placed directly under the sonarr configuration block, or used as an instance-specific configuration . Most values are explicitly defined in this dumped configuration, ensuring that when used with Buildarr, the configuration will always remain static. api_key : 1a2b3c4d5e6f1a2b3c4d5e6f1a2b3c4d hostname : localhost port : 8989 protocol : http settings : connect : definitions : Trakt : access_token : 1a2b3c4d5e6f1a2b3c4d5e6f1a2b3c4d5e6f1a2b3c4d5e6f1a2b3c4d5e6f1a2b auth_user : example expires : '2023-05-10T15:34:08.117451+00:00' notification_triggers : include_health_warnings : false on_application_update : false on_episode_file_delete : true on_episode_file_delete_for_upgrade : true on_grab : false on_health_issue : false on_import : true on_rename : false on_series_delete : true on_upgrade : true refresh_token : 1a2b3c4d5e6f1a2b3c4d5e6f1a2b3c4d5e6f1a2b3c4d5e6f1a2b3c4d5e6f1a2b tags : [] download_clients : definitions : Transmission : add_paused : false category : sonarr directory : null enable : true host : transmission older_priority : last password : null port : 9091 priority : 1 recent_priority : last remove_completed_downloads : true remove_failed_downloads : true tags : [] url_base : /transmission/ use_ssl : false username : null enable_completed_download_handling : true redownload_failed : true remote_path_mappings : definitions : [] general : analytics : send_anonymous_usage_data : true backup : folder : Backups interval : 7 retention : 28 host : bind_address : '*' instance_name : Sonarr (Example) port : 8989 ssl_port : 9898 url_base : null use_ssl : false logging : log_level : INFO proxy : bypass_proxy_for_local_addresses : true enable : false hostname : null ignored_addresses : [] password : null port : 8080 proxy_type : http username : null security : authentication : none certificate_validation : enabled password : null username : null updates : automatic : false branch : main mechanism : docker script_path : null import_lists : definitions : {} indexers : definitions : {} maximum_size : 0 minimum_age : 0 retention : 0 rss_sync_interval : 15 media_management : analyze_video_files : true anime_episode_format : '{Series TitleYear} - S{season:00}E{episode:00} - {absolute:000} - {Episode CleanTitle} {[Preferred Words]} {[Quality Full]} {[MediaInfo VideoDynamicRangeType]} [{MediaInfo VideoBitDepth}bit] {[MediaInfo VideoCodec]} [{Mediainfo AudioCodec} { Mediainfo AudioChannels}]{MediaInfo AudioLanguages} {[Release Group]} - Default' change_file_date : none chmod_folder : drwxr-xr-x chown_group : null create_empty_series_folders : false daily_episode_format : '{Series TitleYear} - {Air-Date} - {Episode CleanTitle} - {[Preferred Words]} {[Quality Full]} {[MediaInfo VideoDynamicRangeType]} [{MediaInfo VideoBitDepth}bit] {[MediaInfo VideoCodec]} [{Mediainfo AudioCodec} {Mediainfo AudioChannels}] {[MediaInfo AudioLanguages]} {[Release Group]} - Default' delete_empty_folders : false episode_title_required : always import_extra_files : false minimum_free_space : 100 multiepisode_style : range propers_and_repacks : do-not-prefer recycling_bin : null recycling_bin_cleanup : 7 rename_episodes : true replace_illegal_characters : true rescan_series_folder_after_refresh : always root_folders : [] season_folder_format : Season {season:00} series_folder_format : '{Series TitleYear} [imdbid-{ImdbId}]' set_permissions : false skip_free_space_check : false specials_folder_format : Specials standard_episode_format : '{Series TitleYear} - S{season:00}E{episode:00} - {Episode CleanTitle} - {[Preferred Words]} {[Quality Full]} {[MediaInfo VideoDynamicRangeType]} [{MediaInfo VideoBitDepth}bit] {[MediaInfo VideoCodec]} [{Mediainfo AudioCodec} {Mediainfo AudioChannels}] {[MediaInfo AudioLanguages]} {[Release Group]} - Default' use_hardlinks : true metadata : kodi_emby : enable : false episode_images : true episode_metadata : true season_images : true series_images : true series_metadata : true series_metadata_url : true roksbox : enable : false episode_images : true episode_metadata : true season_images : true series_images : true wdtv : enable : false episode_images : true episode_metadata : true season_images : true series_images : true profiles : delay_profiles : definitions : - bypass_if_highest_quality : true preferred_protocol : usenet-prefer tags : [] torrent_delay : 0 usenet_delay : 0 language_profiles : definitions : Shows : languages : - english upgrade_until : english upgrades_allowed : true quality_profiles : definitions : SD/HD : qualities : - Bluray-1080p - members : - WEBDL-1080p - WEBRip-1080p name : WEB 1080p - HDTV-1080p - Bluray-720p - members : - WEBDL-720p - WEBRip-720p name : WEB 720p - HDTV-720p - Raw-HD - Bluray-480p - DVD - members : - WEBDL-480p - WEBRip-480p name : WEB 480p - SDTV upgrade_until : Bluray-1080p upgrades_allowed : true release_profiles : definitions : '[Trash] Low Quality Groups' : enable : true include_preferred_when_renaming : false indexer : null must_contain : [] must_not_contain : [] preferred : - score : -10000 term : /(-BRiNK|-CHX|-GHOSTS|-EVO|-FGT|JFF|PSA|MeGusta|-NERO|nhanc3|Pahe\\.ph|Pahe\\.in|TBS|-VIDEOHOLE|-worldmkv|-XLF)\\b/i tags : [] '[Trash] Optionals' : enable : true include_preferred_when_renaming : false indexer : null must_contain : [] must_not_contain : - /^(?=.*(1080|720))(?=.*((x|h)[ ._-]?265|hevc)).*/i - /\\b(-alfaHD|-BAT|-BNd|-C\\.A\\.A|-Cory|-EXTREME|-FF|-FOXX|-G4RiS|-GUEIRA|-N3G4N|-PD|-PTHome|-RiPER|-RK|-SiGLA|-Tars|-WTV|-Yatogam1|-YusukeFLA|-ZigZag)\\b/i - /\\b(-scene)\\b/i - /^(?!.*(HDR|HULU|REMUX))(?=.*\\b(DV|Dovi|Dolby[- .]?Vision)\\b).*/i - /\\bAV1\\b/i - /^(?!.*(web[ ]dl|-deflate|-inflate))(?=.*([_. ]WEB[_. ]|-CAKES\\b|-GGEZ\\b|-GGWP\\b|-GLHF\\b|-GOSSIP\\b|-KOGI\\b|-PECULATE\\b|-SLOT\\b)).*/i preferred : - score : 15 term : /\\bS\\d+\\b(?!E\\d+\\b)/i - score : -10000 term : /(-4P|-4Planet|-AsRequested|-BUYMORE|-CAPTCHA|-Chamele0n|-GEROV|-iNC0GNiTO|-NZBGeek|-Obfuscated|-postbot|-Rakuv|-Scrambled|-WhiteRev|-WRTEAM|-xpost)\\b/i - score : -10000 term : /(?<!\\d\\.)(1-.+)$/i - score : -10000 term : /(\\[rartv\\]|\\[rarbg\\]|\\[eztv\\]|\\[TGx\\])/i - score : -10000 term : /\\s?\\ben\\b$/i tags : [] '[Trash] P2P Groups + Repack/Proper' : enable : true include_preferred_when_renaming : false indexer : null must_contain : [] must_not_contain : [] preferred : - score : 1800 term : /(-deflate|-inflate)\\b/i - score : 1700 term : /(-ABBIE|-AJP69|-APEX|-CasStudio|CRFW|-CtrlHD|-FLUX|\\bHONE|-KiNGS|-monkee|NOSiViD|-NTb|-NTG|-PAXA|-PEXA|-QOQ|-RTN|-SiC|T6D|-TOMMY|-ViSUM|-XEPA)\\b/i - score : 1650 term : /(3CTWeB|BLUTONiUM|-BTW|-Chotab|-Cinefeel|-CiT|Coo7|-dB|-DEEP|-END|-ETHiCS|-FC|-Flights|-GNOME|-iJP|-iKA|-iT00NZ|-JETIX|-KHN|-KiMCHI|-LAZY|-MZABI|-NPMS|-NYH|-orbitron|playWEB|PSiG|-ROCCaT|RTFM|-SA89|-SDCC|-SIGMA|-SMURF|-SPiRiT|-TEPES|-TVSmash|-WELP)\\b/i - score : 1600 term : /(-DRACULA|SLiGNOME|T4H|-ViSiON|SwAgLaNdEr)\\b/i - score : 13 term : /(repack3)/i - score : 12 term : /(repack2)/i - score : 11 term : /\\b(repack|proper)\\b/i tags : [] '[Trash] Release Sources (Streaming Service)' : enable : true include_preferred_when_renaming : true indexer : null must_contain : [] must_not_contain : [] preferred : - score : 100 term : /\\b(amzn|amazon)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 100 term : /\\b(atvp|aptv|Apple TV\\+)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 95 term : /\\b(sho|showtime)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 90 term : /\\b(dsnp|dsny|disney|Disney\\+)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 90 term : /\\b(hmax|hbom|hbo[ ._-]max)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 90 term : /\\b(nf|netflix)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 90 term : /\\b(qibi|quibi)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 85 term : /\\b(hulu)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 85 term : /\\b(pcok|Peacock TV)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 75 term : /\\b(dcu)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 75 term : /\\b(hbo)(?![ ._-]max)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 75 term : /\\b(it)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 75 term : /\\b(nlz)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 75 term : /\\b(pmtp)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 75 term : /\\b(red)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 75 term : /\\b(stan)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 75 term : /\\b(vdl)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i tags : [] quality : definitions : Bluray-1080p : max : 227.0 min : 50.4 title : null Bluray-1080p Remux : max : null min : 69.1 title : null Bluray-2160p : max : null min : 94.6 title : null Bluray-2160p Remux : max : null min : 204.4 title : null Bluray-480p : max : 100.0 min : 2.0 title : null Bluray-720p : max : 137.3 min : 17.1 title : null DVD : max : 100.0 min : 2.0 title : null HDTV-1080p : max : 137.3 min : 15.0 title : null HDTV-2160p : max : 350.0 min : 50.4 title : null HDTV-720p : max : 67.5 min : 10.0 title : null Raw-HD : max : null min : 4.0 title : null SDTV : max : 100.0 min : 2.0 title : null Unknown : max : 199.9 min : 1.0 title : null WEBDL-1080p : max : 137.3 min : 15.0 title : null WEBDL-2160p : max : 350.0 min : 50.4 title : null WEBDL-480p : max : 100.0 min : 2.0 title : null WEBDL-720p : max : 137.3 min : 10.0 title : null WEBRip-1080p : max : 137.3 min : 15.0 title : null WEBRip-2160p : max : 350.0 min : 50.4 title : null WEBRip-480p : max : 100.0 min : 2.0 title : null WEBRip-720p : max : 137.3 min : 10.0 title : null tags : definitions : [] ui : enable_color_impaired_mode : false first_day_of_week : sunday long_date_format : day-first short_date_format : word-month-second show_relative_dates : true time_format : twentyfour-hour week_column_header : day-first version : 3.0.9.1549","title":"Introduction"},{"location":"plugins/sonarr/#buildarr-sonarr-plugin","text":"The Buildarr Sonarr plugin ( buildarr-sonarr ) is a plugin for Buildarr that adds the capability to configure and manage Sonarr instances. Sonarr is a PVR application which downloads, renames and manages the lifecycle of TV shows in your media library. It is capable of scanning for higher quality versions of your media and automatically upgrading them when a suitable version is available. Currently, Sonarr V3 is the only supported version. Sonarr V4 support is planned for the future.","title":"Buildarr Sonarr Plugin"},{"location":"plugins/sonarr/#installation","text":"From version 0.4.0 onwards, the Buildarr Sonarr plugin is now an independent package, developed separately from the core Buildarr package. When using Buildarr as a standalone application , it can simply be installed using pip : $ pip install buildarr buildarr-sonarr When using Buildarr as a Docker container , the Sonarr plugin is still bundled in the official container ( callum027/buildarr ). There is no need to install it separately. You can upgrade, or pin the version of the plugin to a specific version, within the container by setting the $BUILDARR_INSTALL_PACKAGES environment variable in the docker run command using --env / -e : -e BUILDARR_INSTALL_PACKAGES = \"buildarr-sonar==<version>\" In Buildarr version 0.3.0 and earlier, the Sonarr plugin was vendored within the core Buildarr package. On these versions, it is not necessary to install the Sonarr plugin separately.","title":"Installation"},{"location":"plugins/sonarr/#quick-start","text":"To use the Sonarr plugin, create a sonarr block within buildarr.yml , and enter the connection information required for the Buildarr instance to connect to the Sonarr instance you'd like to manage. Buildarr won't modify anything yet since no configuration has been defined, but you are able to test if Buildarr is able to connect to and authenticate with the Sonarr instance. --- buildarr : watch_config : true sonarr : hostname : \"localhost\" # Defaults to `sonarr`, or the instance name for instance-specific configs. port : 8989 # Defaults to 8989. protocol : \"http\" # Defaults to `http`. api_key : \"...\" # Optional. If undefined, auto-fetch (authentication must be disabled). Now try a buildarr run . If the output is similar to the below output, Buildarr was able to connect to your Sonarr instance. 2023-03-29 20:39:50,856 buildarr:1 buildarr.cli.run [INFO] Buildarr version 0.4.0 (log level: INFO) 2023-03-29 20:39:50,856 buildarr:1 buildarr.cli.run [INFO] Loading configuration file '/config/buildarr.yml' 2023-03-29 20:39:50,872 buildarr:1 buildarr.cli.run [INFO] Finished loading configuration file 2023-03-29 20:39:50,874 buildarr:1 buildarr.cli.run [INFO] Loaded plugins: sonarr (0.4.0) 2023-03-29 20:39:50,875 buildarr:1 buildarr.cli.run [INFO] Loading instance configurations 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Finished loading instance configurations 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Running with plugins: sonarr 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Resolving instance dependencies 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Finished resolving instance dependencies 2023-03-29 20:39:50,877 buildarr:1 buildarr.cli.run [INFO] Loading secrets file from '/config/secrets.json' 2023-03-29 20:39:50,886 buildarr:1 buildarr.cli.run [INFO] Finished loading secrets file 2023-03-29 20:39:50,886 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Checking secrets 2023-03-29 20:39:50,912 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Connection test successful using cached secrets 2023-03-29 20:39:50,912 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished checking secrets 2023-03-29 20:39:50,912 buildarr:1 buildarr.cli.run [INFO] Saving updated secrets file to '/config/secrets.json' 2023-03-29 20:39:50,914 buildarr:1 buildarr.cli.run [INFO] Finished saving updated secrets file 2023-03-29 20:39:50,914 buildarr:1 buildarr.cli.run [INFO] Updating configuration on remote instances 2023-03-29 20:39:50,914 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Getting remote configuration 2023-03-29 20:39:51,406 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished getting remote configuration 2023-03-29 20:39:51,463 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Updating remote configuration 2023-03-29 20:39:52,019 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Remote configuration is up to date 2023-03-29 20:39:52,019 buildarr:1 buildarr.cli.run [INFO] <sonarr> (default) Finished updating remote configuration 2023-03-29 20:39:52,019 buildarr:1 buildarr.cli.run [INFO] Finished updating configuration on remote instances","title":"Quick Start"},{"location":"plugins/sonarr/#configuring-your-sonarr-instance","text":"The following sections cover comprehensive configuration of a Sonarr instance. Note that these documents do not show how you should configure a Sonarr instance. Rather, they show how you can configure a Sonarr instance the way you want with Buildarr. For more information on how to optimally configure Sonarr, you can refer to the excellent guides from WikiArr and TRaSH-Guides . Host Configuration Media Management Profiles Quality Profiles Language Profiles Delay Profiles Release Profiles Quality Indexers Download Clients Import Lists Connect Metadata Tags General UI","title":"Configuring your Sonarr instance"},{"location":"plugins/sonarr/#dumping-an-existing-sonarr-instance-configuration","text":"Buildarr is capable of dumping a running Sonarr instance's configuration. $ buildarr sonarr dump-config http://localhost:8989 > sonarr.yml Sonarr instance API key: <Paste API key here> The dumped YAML object can be placed directly under the sonarr configuration block, or used as an instance-specific configuration . Most values are explicitly defined in this dumped configuration, ensuring that when used with Buildarr, the configuration will always remain static. api_key : 1a2b3c4d5e6f1a2b3c4d5e6f1a2b3c4d hostname : localhost port : 8989 protocol : http settings : connect : definitions : Trakt : access_token : 1a2b3c4d5e6f1a2b3c4d5e6f1a2b3c4d5e6f1a2b3c4d5e6f1a2b3c4d5e6f1a2b auth_user : example expires : '2023-05-10T15:34:08.117451+00:00' notification_triggers : include_health_warnings : false on_application_update : false on_episode_file_delete : true on_episode_file_delete_for_upgrade : true on_grab : false on_health_issue : false on_import : true on_rename : false on_series_delete : true on_upgrade : true refresh_token : 1a2b3c4d5e6f1a2b3c4d5e6f1a2b3c4d5e6f1a2b3c4d5e6f1a2b3c4d5e6f1a2b tags : [] download_clients : definitions : Transmission : add_paused : false category : sonarr directory : null enable : true host : transmission older_priority : last password : null port : 9091 priority : 1 recent_priority : last remove_completed_downloads : true remove_failed_downloads : true tags : [] url_base : /transmission/ use_ssl : false username : null enable_completed_download_handling : true redownload_failed : true remote_path_mappings : definitions : [] general : analytics : send_anonymous_usage_data : true backup : folder : Backups interval : 7 retention : 28 host : bind_address : '*' instance_name : Sonarr (Example) port : 8989 ssl_port : 9898 url_base : null use_ssl : false logging : log_level : INFO proxy : bypass_proxy_for_local_addresses : true enable : false hostname : null ignored_addresses : [] password : null port : 8080 proxy_type : http username : null security : authentication : none certificate_validation : enabled password : null username : null updates : automatic : false branch : main mechanism : docker script_path : null import_lists : definitions : {} indexers : definitions : {} maximum_size : 0 minimum_age : 0 retention : 0 rss_sync_interval : 15 media_management : analyze_video_files : true anime_episode_format : '{Series TitleYear} - S{season:00}E{episode:00} - {absolute:000} - {Episode CleanTitle} {[Preferred Words]} {[Quality Full]} {[MediaInfo VideoDynamicRangeType]} [{MediaInfo VideoBitDepth}bit] {[MediaInfo VideoCodec]} [{Mediainfo AudioCodec} { Mediainfo AudioChannels}]{MediaInfo AudioLanguages} {[Release Group]} - Default' change_file_date : none chmod_folder : drwxr-xr-x chown_group : null create_empty_series_folders : false daily_episode_format : '{Series TitleYear} - {Air-Date} - {Episode CleanTitle} - {[Preferred Words]} {[Quality Full]} {[MediaInfo VideoDynamicRangeType]} [{MediaInfo VideoBitDepth}bit] {[MediaInfo VideoCodec]} [{Mediainfo AudioCodec} {Mediainfo AudioChannels}] {[MediaInfo AudioLanguages]} {[Release Group]} - Default' delete_empty_folders : false episode_title_required : always import_extra_files : false minimum_free_space : 100 multiepisode_style : range propers_and_repacks : do-not-prefer recycling_bin : null recycling_bin_cleanup : 7 rename_episodes : true replace_illegal_characters : true rescan_series_folder_after_refresh : always root_folders : [] season_folder_format : Season {season:00} series_folder_format : '{Series TitleYear} [imdbid-{ImdbId}]' set_permissions : false skip_free_space_check : false specials_folder_format : Specials standard_episode_format : '{Series TitleYear} - S{season:00}E{episode:00} - {Episode CleanTitle} - {[Preferred Words]} {[Quality Full]} {[MediaInfo VideoDynamicRangeType]} [{MediaInfo VideoBitDepth}bit] {[MediaInfo VideoCodec]} [{Mediainfo AudioCodec} {Mediainfo AudioChannels}] {[MediaInfo AudioLanguages]} {[Release Group]} - Default' use_hardlinks : true metadata : kodi_emby : enable : false episode_images : true episode_metadata : true season_images : true series_images : true series_metadata : true series_metadata_url : true roksbox : enable : false episode_images : true episode_metadata : true season_images : true series_images : true wdtv : enable : false episode_images : true episode_metadata : true season_images : true series_images : true profiles : delay_profiles : definitions : - bypass_if_highest_quality : true preferred_protocol : usenet-prefer tags : [] torrent_delay : 0 usenet_delay : 0 language_profiles : definitions : Shows : languages : - english upgrade_until : english upgrades_allowed : true quality_profiles : definitions : SD/HD : qualities : - Bluray-1080p - members : - WEBDL-1080p - WEBRip-1080p name : WEB 1080p - HDTV-1080p - Bluray-720p - members : - WEBDL-720p - WEBRip-720p name : WEB 720p - HDTV-720p - Raw-HD - Bluray-480p - DVD - members : - WEBDL-480p - WEBRip-480p name : WEB 480p - SDTV upgrade_until : Bluray-1080p upgrades_allowed : true release_profiles : definitions : '[Trash] Low Quality Groups' : enable : true include_preferred_when_renaming : false indexer : null must_contain : [] must_not_contain : [] preferred : - score : -10000 term : /(-BRiNK|-CHX|-GHOSTS|-EVO|-FGT|JFF|PSA|MeGusta|-NERO|nhanc3|Pahe\\.ph|Pahe\\.in|TBS|-VIDEOHOLE|-worldmkv|-XLF)\\b/i tags : [] '[Trash] Optionals' : enable : true include_preferred_when_renaming : false indexer : null must_contain : [] must_not_contain : - /^(?=.*(1080|720))(?=.*((x|h)[ ._-]?265|hevc)).*/i - /\\b(-alfaHD|-BAT|-BNd|-C\\.A\\.A|-Cory|-EXTREME|-FF|-FOXX|-G4RiS|-GUEIRA|-N3G4N|-PD|-PTHome|-RiPER|-RK|-SiGLA|-Tars|-WTV|-Yatogam1|-YusukeFLA|-ZigZag)\\b/i - /\\b(-scene)\\b/i - /^(?!.*(HDR|HULU|REMUX))(?=.*\\b(DV|Dovi|Dolby[- .]?Vision)\\b).*/i - /\\bAV1\\b/i - /^(?!.*(web[ ]dl|-deflate|-inflate))(?=.*([_. ]WEB[_. ]|-CAKES\\b|-GGEZ\\b|-GGWP\\b|-GLHF\\b|-GOSSIP\\b|-KOGI\\b|-PECULATE\\b|-SLOT\\b)).*/i preferred : - score : 15 term : /\\bS\\d+\\b(?!E\\d+\\b)/i - score : -10000 term : /(-4P|-4Planet|-AsRequested|-BUYMORE|-CAPTCHA|-Chamele0n|-GEROV|-iNC0GNiTO|-NZBGeek|-Obfuscated|-postbot|-Rakuv|-Scrambled|-WhiteRev|-WRTEAM|-xpost)\\b/i - score : -10000 term : /(?<!\\d\\.)(1-.+)$/i - score : -10000 term : /(\\[rartv\\]|\\[rarbg\\]|\\[eztv\\]|\\[TGx\\])/i - score : -10000 term : /\\s?\\ben\\b$/i tags : [] '[Trash] P2P Groups + Repack/Proper' : enable : true include_preferred_when_renaming : false indexer : null must_contain : [] must_not_contain : [] preferred : - score : 1800 term : /(-deflate|-inflate)\\b/i - score : 1700 term : /(-ABBIE|-AJP69|-APEX|-CasStudio|CRFW|-CtrlHD|-FLUX|\\bHONE|-KiNGS|-monkee|NOSiViD|-NTb|-NTG|-PAXA|-PEXA|-QOQ|-RTN|-SiC|T6D|-TOMMY|-ViSUM|-XEPA)\\b/i - score : 1650 term : /(3CTWeB|BLUTONiUM|-BTW|-Chotab|-Cinefeel|-CiT|Coo7|-dB|-DEEP|-END|-ETHiCS|-FC|-Flights|-GNOME|-iJP|-iKA|-iT00NZ|-JETIX|-KHN|-KiMCHI|-LAZY|-MZABI|-NPMS|-NYH|-orbitron|playWEB|PSiG|-ROCCaT|RTFM|-SA89|-SDCC|-SIGMA|-SMURF|-SPiRiT|-TEPES|-TVSmash|-WELP)\\b/i - score : 1600 term : /(-DRACULA|SLiGNOME|T4H|-ViSiON|SwAgLaNdEr)\\b/i - score : 13 term : /(repack3)/i - score : 12 term : /(repack2)/i - score : 11 term : /\\b(repack|proper)\\b/i tags : [] '[Trash] Release Sources (Streaming Service)' : enable : true include_preferred_when_renaming : true indexer : null must_contain : [] must_not_contain : [] preferred : - score : 100 term : /\\b(amzn|amazon)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 100 term : /\\b(atvp|aptv|Apple TV\\+)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 95 term : /\\b(sho|showtime)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 90 term : /\\b(dsnp|dsny|disney|Disney\\+)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 90 term : /\\b(hmax|hbom|hbo[ ._-]max)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 90 term : /\\b(nf|netflix)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 90 term : /\\b(qibi|quibi)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 85 term : /\\b(hulu)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 85 term : /\\b(pcok|Peacock TV)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 75 term : /\\b(dcu)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 75 term : /\\b(hbo)(?![ ._-]max)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 75 term : /\\b(it)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 75 term : /\\b(nlz)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 75 term : /\\b(pmtp)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 75 term : /\\b(red)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 75 term : /\\b(stan)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i - score : 75 term : /\\b(vdl)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i tags : [] quality : definitions : Bluray-1080p : max : 227.0 min : 50.4 title : null Bluray-1080p Remux : max : null min : 69.1 title : null Bluray-2160p : max : null min : 94.6 title : null Bluray-2160p Remux : max : null min : 204.4 title : null Bluray-480p : max : 100.0 min : 2.0 title : null Bluray-720p : max : 137.3 min : 17.1 title : null DVD : max : 100.0 min : 2.0 title : null HDTV-1080p : max : 137.3 min : 15.0 title : null HDTV-2160p : max : 350.0 min : 50.4 title : null HDTV-720p : max : 67.5 min : 10.0 title : null Raw-HD : max : null min : 4.0 title : null SDTV : max : 100.0 min : 2.0 title : null Unknown : max : 199.9 min : 1.0 title : null WEBDL-1080p : max : 137.3 min : 15.0 title : null WEBDL-2160p : max : 350.0 min : 50.4 title : null WEBDL-480p : max : 100.0 min : 2.0 title : null WEBDL-720p : max : 137.3 min : 10.0 title : null WEBRip-1080p : max : 137.3 min : 15.0 title : null WEBRip-2160p : max : 350.0 min : 50.4 title : null WEBRip-480p : max : 100.0 min : 2.0 title : null WEBRip-720p : max : 137.3 min : 10.0 title : null tags : definitions : [] ui : enable_color_impaired_mode : false first_day_of_week : sunday long_date_format : day-first short_date_format : word-month-second show_relative_dates : true time_format : twentyfour-hour week_column_header : day-first version : 3.0.9.1549","title":"Dumping an existing Sonarr instance configuration"},{"location":"plugins/sonarr/release-notes/","text":"Release Notes (Buildarr Sonarr Plugin) # v0.5.3 - 2023-09-11 # This is a minor release that fixes the following issues: Fix managing e-mail, Mailgun and SendGrid notification connections by enforcing that email address attributes consist only of an email address, and do not contain a name (e.g. Sonarr Notifications <sonarr@example.com> ). Sonarr V3 does not support this style of email address definition. Changed # Fix parsing email addresses for notification connections ( #23 ) v0.5.2 - 2023-09-09 # This is a minor release that fixes the following issues: Fix Sonarr instance configuration dumping via the CLI for some instances, by changing URL parsing for the Sonarr instance URL to accept any valid URL (not just instances with actual FQDNs). Changed # Fix URL parsing for configuration dumping ( #19 ) v0.5.1 - 2023-09-09 # This is a minor release that enables support for Buildarr v0.6.0. Buildarr v0.5.0 is still supported in this release. Changed # Update package metadata and dependencies ( #15 ) v0.5.0 - 2023-04-16 # This updates the Sonarr plugin so that it is compatible with Buildarr v0.5.0 . Other changes to the Sonarr plugin for this release include: Fix a bug where Sonarr instance configuration dumping was broken due to trying to use a Buildarr configuration value that was not loaded Improve support for deleting resources with delete_unmanaged , by using the new delete_remote API function Remove the sonarr.tags.delete_unused attribute (for deleting Sonarr tags not used in Buildarr), as it was unimplemented and Sonarr automatically cleans up unused tags anyway Changed # Update plugin to newer Buildarr API standards ( #11 ) v0.4.1 - 2023-04-08 # This is a bugfix release that addresses a number of issues that one might encounter when deploying a Sonarr instance for the first time, or linking a Sonarr instance with a Prowlarr instance using the new Prowlarr plugin for Buildarr . Add mutual exclusion handling for the category and directory attributes for Transmission download clients Rename the indexer_priority attribute on indexers to priority (with an alias available for backwards compatibility) Remove the anime_standard_format_search attribute from the common indexer interface, and add it to the specific indexer types that implement it Fix a large number of indexer parsing bugs Torznab indexers are now confirmed to load correctly from remote Sonarr instances (by testing the Torznab indexer Prowlarr creates) Fix updating delay profiles on brand new Sonarr installations Fix updating Media Management naming configuration Fix an issue where UI settings updating was not idempotent Changed # Fix bugs from integration tests ( #4 ) v0.4.0 - 2023-03-31 # This is the first release of the Buildarr Sonarr plugin as an independent package. As major strides have been taken to stabilise the plugin API, the Sonarr plugin for Buildarr has been forked into a separate package, buildarr-sonarr . From Buildarr version 0.4.0 onwards, application plugins are no longer bundled. The Docker container still bundles the Sonarr plugin for ease of use, but when upgrading an existing standalone installation of Buildarr, the Sonarr plugin package will need to be installed using pip . $ pip install buildarr-sonarr This will allow the Sonarr plugin to deliver releases independently of the base Buildarr package, allowing for more rapid releases of both packages, while ensuring compability between Buildarr and its plugins through plugin version pinning of the Buildarr base package. A number of other features and bugfixes have been added in this release of the Sonarr plugin: Add support for dry runs in Buildarr ad-hoc runs, for testing configuration changes against live instances without modifying them Add support for automatic generation of Docker Compose files from Buildarr configuration files using the buildarr compose command Improve validation to output easier-to-read error messages in some cases Refactor logging to use the new logging API for Buildarr v0.4.0 onwards Added # Add the --dry-run option to buildarr run ( buildarr/buildarr#56 ) Add instance-specific configs to global state and fix Sonarr dry-run bug ( buildarr/buildarr#59 ) Add the buildarr test-config command ( buildarr/buildarr#60 ) Add --secrets-file option to daemon and run modes ( buildarr/buildarr#67 ) Add the buildarr compose command ( buildarr/buildarr#73 ) Reintroduce buildarr.__version__ and use it internally ( buildarr/buildarr#75 ) Add version attribute to plugin metadata object ( buildarr/buildarr#78 ) Changed # Convert most root validators to attribute-specific validators ( buildarr/buildarr#54 ) Remove unused code and fix pre-commit job ( buildarr/buildarr#58 ) Enable validating default config/secrets attribute values ( buildarr/buildarr#63 ) Reduce usage of initialize.js endpoints ( buildarr/buildarr#66 ) Refactor logging infrastructure ( buildarr/buildarr#68 ) Relax dependency version requirements ( buildarr/buildarr#69 ) Improve and add missing docs for new features ( buildarr/buildarr#70 ) Evaluate local paths relative to the config file ( buildarr/buildarr#71 ) Add temporary ignore for watchdog.Observer type hint ( buildarr/buildarr#72 ) Fork the Sonarr plugin into its own package ( #1 ) v0.3.0 - 2023-03-15 # This is a feature and bugfix release that extends the groundwork laid in the previous version for making Buildarr more usable, and future-proof for the planned new plugins. A major bug where running Buildarr when secrets.json does not exist would result in an error, even if valid instance credentials were found, has been fixed. This would have prevented many people from trying out Buildarr, and for this I would like to apologise. In the future automated unit tests are planned, and major refactors of the Buildarr codebase are now less likely to happen as a result of development, so bugs like this should not happen as often in the future. The major new feature this release introduces is instance linking: the ability to define relationships between two instances. Most of the work went into the internal implementation to make it possible to use in plugins, but one use case within the Sonarr plugin itself is now supported: Sonarr instances using another Sonarr instance as an import list, via the new instance_name attribute. When using this attribute, Buildarr will automatically fill in the API key attribute so you don't have to, and instead of using IDs to reference quality profiles/language profiles/tags in the source instance, names can now be used: sonarr : instances : sonarr-hd : hostname : \"localhost\" port : 8989 sonarr-4k : hostname : \"localhost\" port : 8990 settings : import_lists : definitions : Sonarr (HD) : type : \"sonarr\" # Global import list options. root_folder : \"/path/to/videos\" quality_profile : \"4K\" language_profile : \"English\" # Sonarr import list-specific options. full_url : \"http://sonarr:8989\" instance_name : \"sonarr-hd\" source_quality_profiles : - \"HD/SD\" source_language_profiles : - \"English\" source_tags : - \"shows\" When instance links are made, Buildarr automatically adjusts the order of execution such that the target instance is always processed before the instance linking to the target. This ensures the state of the target instance is consistent when they are both updated to establish the link. A number of other improvements and bugfixes were made, such as: Fix configuration validation to allow local and non-qualified domains on all URL-type attributes (fixes localhost API URL references) Rename the following Sonarr import list attributes (and retain the old names as aliases to ensure backwards compatibility): source_quality_profile_ids renamed to source_quality_profiles source_language_profile_ids renamed to source_language_profiles source_tag_ids renamed to source_tags Fix reading the $BUILDARR_LOG_LEVEL environment variable to be case-insensitive Clean up runtime state after individual update runs in daemon mode, to ensure no state leakage into subsequent runs Add a new buildarr.request_timeout configuration attribute for adjusting API request timeouts (the default is 30 seconds) Improve Sonarr quality definition min and max validation so that 400 is also a valid value for max , and enforce min - max value difference constraints Major internal code refactor through the introduction of Ruff to the development pipeline, fixing a large number of minor code quality issues Changed # Fix fetching new instance secrets ( buildarr/buildarr#44 ) Accept local and non-qualified domain names in URLs ( buildarr/buildarr#46 ) Add instance referencing and dependency resolution ( buildarr/buildarr#47 ) Replace isort and Flake8 with Ruff and reformat source files ( buildarr/buildarr#49 ) v0.2.0 - 2023-02-23 # This is a feature release that comprehensively refactors the internal structure of Buildarr and the plugin API, and introduces a new, formally defined global state architecture that Buildarr and plugins can utilise. These changes improve maintainability of the codebase, allow for more accurate type validation of global state objects, make the plugin API easier to understand for developers, and pave the way for planned new features such as configuring instance-to-instance links within Buildarr. This release also introduces connection testing of cached and auto-retrieved instance secrets, to ensure Buildarr can communicate and authenticate with instances before it tries to update them. A handful of bugs were fixed, including but not limited to: Work around a parsing bug in Pydantic that causes Buildarr to error out when specifying Sonarr instance API keys in the Buildarr configuration More accurate resource type detection eliminating the chance of parsing errors for Sonarr import list, indexer, download client and connection definitions Set better constraints on some Sonarr configuration attributes: To handle suboptimal configuration (e.g. ignore duplicate elements) To reject invalid configuration (e.g. require at least one recipient e-mail address on Mailgun and Sendgrid connection types) Added # Implement testing of cached and fetched instance secrets ( buildarr/buildarr#32 ) Refactor the internals of Buildarr to improve maintainability ( buildarr/buildarr#30 ) Changed # Convert Password and SonarrApiKey to subclasses of SecretStr ( buildarr/buildarr#34 ) Fix CLI exception class inheritance ( buildarr/buildarr#35 ) Use discriminated unions to accurately determine resource type ( buildarr/buildarr#36 ) Change log types of some TRaSH logs to INFO ( buildarr/buildarr#37 ) Set better constraints on Sonarr configuration attributes ( buildarr/buildarr#38 ) v0.1.2 - 2023-02-20 # This is a bugfix release that fixes updates of certain types of Sonarr instance configuration, improving usability of the Sonarr plugin. The following types of Sonarr instance configuration have had bugfixes and improvements made, and are confirmed to work without errors: Media Management Ensure that minimum_free_space is set to a minimum of 100 MB Fix unmonitor_deleted_episodes so that it is now checked and updated by Buildarr Add a delete_unmanaged_root_folders option to allow Buildarr to delete undefined root folders (disabled by default) Improve other configuration constraints so that it more closely matches Sonarr Fix a minor logging bug in root folder updates Profiles Quality Profiles / Language Profiles Improve attribute constraints e.g. ensure duplicate quality values cannot be defined, enforce upgrade_until being required when allow_upgrades is True Fix conversion between Buildarr and Sonarr configuration state so that no errors occur when upgrades are disabled Internal refactor to make the code easier to understand Delay Profiles - Confirmed to work properly as of v0.1.1 (and likely v0.1.0 ) Release Profiles Fix bug introduced in v0.1.1 where internal validation is not done on release profiles downloaded from TRaSH-Guides, resulting in preferred word lists being updated on each run, and potential errors not being caught if there are invalid values in the profile Internal refactor to simplify implementation Quality Fix bug introduced in v0.1.1 where internal validation is not done on quality profiles downloaded from TRaSH-Guides, resulting in potential errors not being caught if there are invalid values in the profile Metadata - Confirmed to work properly as of v0.1.1 (and likely v0.1.0 ) Small logging bug fixed where it was ambiguous which metadata type was being modified on update Tags - Confirmed to work properly as of v0.1.1 (and likely v0.1.0 ) General Improve behaviour when setting an authentication username and password so that configuration updates are idempotent when authentication is disabled Fix setting a proxy password Fix setting backup intervals and retentions so that it is no longer possible to set a value not supported by Sonarr Incorrect syntax in some examples in the documentation were also found and fixed. Added # Added the sonarr.settings.media_management.delete_unmanaged_root_folders configuration attribute ( buildarr/buildarr#24 ) Changed # Improve and fix Sonarr general settings configuration updates ( buildarr/buildarr#19 ) Fix Sonarr UI settings updates ( buildarr/buildarr#20 ) Fix small bug Sonarr metadata definition update logging ( buildarr/buildarr#21 ) Improve Sonarr quality profile definition parsing ( buildarr/buildarr#22 ) Make improvements and bug fixes to quality/language/release profile and quality definition parsing ( buildarr/buildarr#23 ) Fix Sonarr media management settings and improve root folder handling ( buildarr/buildarr#24 ) v0.1.1 - 2023-02-19 # This is a support release that fixes quality definition and backup configuration updates on remote Sonarr instances. A new Dummy plugin is now included with Buildarr, used for testing Buildarr and its plugin API, and also serves as a reference implementation for plugin developers. Other behind-the-scenes improvements include a refactor of the plugin API to allow for accurate type hints for configuration objects in secrets metadata classes (and vice versa), and numerous updates to the documentation to correct errors and add more detail. Added # Add a GitHub Action to push releases to PyPI ( buildarr/buildarr#11 ) Create a buildarr-dummy plugin for testing the Buildarr plugin API ( buildarr/buildarr#12 ) Changed # Fix $PUID and $GUID declarations ( b5110f3 ) Fix Docker Hub link ( be0ba12 ) Fix Docker volume mount docs ( fe328aa ) Fix troubleshooting Buildarr run docs ( e3b8833 ) Update dependency versions ( 3c19ede ) Fix debug Docker command in the GitHub Pages site ( 1e17741 ) Disable automatic dependency version updates ( c5c61cd ) Add missing download client documentation ( d07936f ) Fix incorrect config value definition in docs ( d1807a0 ) Fix to-do list indenting ( bca56e5 ) Add a link to the configuration documentation in README.md ( a5c0e6d ) Clean up and update Sonarr plugin internals ( buildarr/buildarr#14 ) Fix updates to Sonarr quality definitions ( buildarr/buildarr#15 ) Fix updates to Sonarr backup general settings ( buildarr/buildarr#16 ) Removed # Removed buildarr.__version__ (please use importlib.metadata instead) v0.1.0 - 2023-02-11 # Release the initial version of Buildarr (v0.1.0).","title":"Release Notes"},{"location":"plugins/sonarr/release-notes/#release-notes-buildarr-sonarr-plugin","text":"","title":"Release Notes (Buildarr Sonarr Plugin)"},{"location":"plugins/sonarr/release-notes/#v053-2023-09-11","text":"This is a minor release that fixes the following issues: Fix managing e-mail, Mailgun and SendGrid notification connections by enforcing that email address attributes consist only of an email address, and do not contain a name (e.g. Sonarr Notifications <sonarr@example.com> ). Sonarr V3 does not support this style of email address definition.","title":"v0.5.3 - 2023-09-11"},{"location":"plugins/sonarr/release-notes/#changed","text":"Fix parsing email addresses for notification connections ( #23 )","title":"Changed"},{"location":"plugins/sonarr/release-notes/#v052-2023-09-09","text":"This is a minor release that fixes the following issues: Fix Sonarr instance configuration dumping via the CLI for some instances, by changing URL parsing for the Sonarr instance URL to accept any valid URL (not just instances with actual FQDNs).","title":"v0.5.2 - 2023-09-09"},{"location":"plugins/sonarr/release-notes/#changed_1","text":"Fix URL parsing for configuration dumping ( #19 )","title":"Changed"},{"location":"plugins/sonarr/release-notes/#v051-2023-09-09","text":"This is a minor release that enables support for Buildarr v0.6.0. Buildarr v0.5.0 is still supported in this release.","title":"v0.5.1 - 2023-09-09"},{"location":"plugins/sonarr/release-notes/#changed_2","text":"Update package metadata and dependencies ( #15 )","title":"Changed"},{"location":"plugins/sonarr/release-notes/#v050-2023-04-16","text":"This updates the Sonarr plugin so that it is compatible with Buildarr v0.5.0 . Other changes to the Sonarr plugin for this release include: Fix a bug where Sonarr instance configuration dumping was broken due to trying to use a Buildarr configuration value that was not loaded Improve support for deleting resources with delete_unmanaged , by using the new delete_remote API function Remove the sonarr.tags.delete_unused attribute (for deleting Sonarr tags not used in Buildarr), as it was unimplemented and Sonarr automatically cleans up unused tags anyway","title":"v0.5.0 - 2023-04-16"},{"location":"plugins/sonarr/release-notes/#changed_3","text":"Update plugin to newer Buildarr API standards ( #11 )","title":"Changed"},{"location":"plugins/sonarr/release-notes/#v041-2023-04-08","text":"This is a bugfix release that addresses a number of issues that one might encounter when deploying a Sonarr instance for the first time, or linking a Sonarr instance with a Prowlarr instance using the new Prowlarr plugin for Buildarr . Add mutual exclusion handling for the category and directory attributes for Transmission download clients Rename the indexer_priority attribute on indexers to priority (with an alias available for backwards compatibility) Remove the anime_standard_format_search attribute from the common indexer interface, and add it to the specific indexer types that implement it Fix a large number of indexer parsing bugs Torznab indexers are now confirmed to load correctly from remote Sonarr instances (by testing the Torznab indexer Prowlarr creates) Fix updating delay profiles on brand new Sonarr installations Fix updating Media Management naming configuration Fix an issue where UI settings updating was not idempotent","title":"v0.4.1 - 2023-04-08"},{"location":"plugins/sonarr/release-notes/#changed_4","text":"Fix bugs from integration tests ( #4 )","title":"Changed"},{"location":"plugins/sonarr/release-notes/#v040-2023-03-31","text":"This is the first release of the Buildarr Sonarr plugin as an independent package. As major strides have been taken to stabilise the plugin API, the Sonarr plugin for Buildarr has been forked into a separate package, buildarr-sonarr . From Buildarr version 0.4.0 onwards, application plugins are no longer bundled. The Docker container still bundles the Sonarr plugin for ease of use, but when upgrading an existing standalone installation of Buildarr, the Sonarr plugin package will need to be installed using pip . $ pip install buildarr-sonarr This will allow the Sonarr plugin to deliver releases independently of the base Buildarr package, allowing for more rapid releases of both packages, while ensuring compability between Buildarr and its plugins through plugin version pinning of the Buildarr base package. A number of other features and bugfixes have been added in this release of the Sonarr plugin: Add support for dry runs in Buildarr ad-hoc runs, for testing configuration changes against live instances without modifying them Add support for automatic generation of Docker Compose files from Buildarr configuration files using the buildarr compose command Improve validation to output easier-to-read error messages in some cases Refactor logging to use the new logging API for Buildarr v0.4.0 onwards","title":"v0.4.0 - 2023-03-31"},{"location":"plugins/sonarr/release-notes/#added","text":"Add the --dry-run option to buildarr run ( buildarr/buildarr#56 ) Add instance-specific configs to global state and fix Sonarr dry-run bug ( buildarr/buildarr#59 ) Add the buildarr test-config command ( buildarr/buildarr#60 ) Add --secrets-file option to daemon and run modes ( buildarr/buildarr#67 ) Add the buildarr compose command ( buildarr/buildarr#73 ) Reintroduce buildarr.__version__ and use it internally ( buildarr/buildarr#75 ) Add version attribute to plugin metadata object ( buildarr/buildarr#78 )","title":"Added"},{"location":"plugins/sonarr/release-notes/#changed_5","text":"Convert most root validators to attribute-specific validators ( buildarr/buildarr#54 ) Remove unused code and fix pre-commit job ( buildarr/buildarr#58 ) Enable validating default config/secrets attribute values ( buildarr/buildarr#63 ) Reduce usage of initialize.js endpoints ( buildarr/buildarr#66 ) Refactor logging infrastructure ( buildarr/buildarr#68 ) Relax dependency version requirements ( buildarr/buildarr#69 ) Improve and add missing docs for new features ( buildarr/buildarr#70 ) Evaluate local paths relative to the config file ( buildarr/buildarr#71 ) Add temporary ignore for watchdog.Observer type hint ( buildarr/buildarr#72 ) Fork the Sonarr plugin into its own package ( #1 )","title":"Changed"},{"location":"plugins/sonarr/release-notes/#v030-2023-03-15","text":"This is a feature and bugfix release that extends the groundwork laid in the previous version for making Buildarr more usable, and future-proof for the planned new plugins. A major bug where running Buildarr when secrets.json does not exist would result in an error, even if valid instance credentials were found, has been fixed. This would have prevented many people from trying out Buildarr, and for this I would like to apologise. In the future automated unit tests are planned, and major refactors of the Buildarr codebase are now less likely to happen as a result of development, so bugs like this should not happen as often in the future. The major new feature this release introduces is instance linking: the ability to define relationships between two instances. Most of the work went into the internal implementation to make it possible to use in plugins, but one use case within the Sonarr plugin itself is now supported: Sonarr instances using another Sonarr instance as an import list, via the new instance_name attribute. When using this attribute, Buildarr will automatically fill in the API key attribute so you don't have to, and instead of using IDs to reference quality profiles/language profiles/tags in the source instance, names can now be used: sonarr : instances : sonarr-hd : hostname : \"localhost\" port : 8989 sonarr-4k : hostname : \"localhost\" port : 8990 settings : import_lists : definitions : Sonarr (HD) : type : \"sonarr\" # Global import list options. root_folder : \"/path/to/videos\" quality_profile : \"4K\" language_profile : \"English\" # Sonarr import list-specific options. full_url : \"http://sonarr:8989\" instance_name : \"sonarr-hd\" source_quality_profiles : - \"HD/SD\" source_language_profiles : - \"English\" source_tags : - \"shows\" When instance links are made, Buildarr automatically adjusts the order of execution such that the target instance is always processed before the instance linking to the target. This ensures the state of the target instance is consistent when they are both updated to establish the link. A number of other improvements and bugfixes were made, such as: Fix configuration validation to allow local and non-qualified domains on all URL-type attributes (fixes localhost API URL references) Rename the following Sonarr import list attributes (and retain the old names as aliases to ensure backwards compatibility): source_quality_profile_ids renamed to source_quality_profiles source_language_profile_ids renamed to source_language_profiles source_tag_ids renamed to source_tags Fix reading the $BUILDARR_LOG_LEVEL environment variable to be case-insensitive Clean up runtime state after individual update runs in daemon mode, to ensure no state leakage into subsequent runs Add a new buildarr.request_timeout configuration attribute for adjusting API request timeouts (the default is 30 seconds) Improve Sonarr quality definition min and max validation so that 400 is also a valid value for max , and enforce min - max value difference constraints Major internal code refactor through the introduction of Ruff to the development pipeline, fixing a large number of minor code quality issues","title":"v0.3.0 - 2023-03-15"},{"location":"plugins/sonarr/release-notes/#changed_6","text":"Fix fetching new instance secrets ( buildarr/buildarr#44 ) Accept local and non-qualified domain names in URLs ( buildarr/buildarr#46 ) Add instance referencing and dependency resolution ( buildarr/buildarr#47 ) Replace isort and Flake8 with Ruff and reformat source files ( buildarr/buildarr#49 )","title":"Changed"},{"location":"plugins/sonarr/release-notes/#v020-2023-02-23","text":"This is a feature release that comprehensively refactors the internal structure of Buildarr and the plugin API, and introduces a new, formally defined global state architecture that Buildarr and plugins can utilise. These changes improve maintainability of the codebase, allow for more accurate type validation of global state objects, make the plugin API easier to understand for developers, and pave the way for planned new features such as configuring instance-to-instance links within Buildarr. This release also introduces connection testing of cached and auto-retrieved instance secrets, to ensure Buildarr can communicate and authenticate with instances before it tries to update them. A handful of bugs were fixed, including but not limited to: Work around a parsing bug in Pydantic that causes Buildarr to error out when specifying Sonarr instance API keys in the Buildarr configuration More accurate resource type detection eliminating the chance of parsing errors for Sonarr import list, indexer, download client and connection definitions Set better constraints on some Sonarr configuration attributes: To handle suboptimal configuration (e.g. ignore duplicate elements) To reject invalid configuration (e.g. require at least one recipient e-mail address on Mailgun and Sendgrid connection types)","title":"v0.2.0 - 2023-02-23"},{"location":"plugins/sonarr/release-notes/#added_1","text":"Implement testing of cached and fetched instance secrets ( buildarr/buildarr#32 ) Refactor the internals of Buildarr to improve maintainability ( buildarr/buildarr#30 )","title":"Added"},{"location":"plugins/sonarr/release-notes/#changed_7","text":"Convert Password and SonarrApiKey to subclasses of SecretStr ( buildarr/buildarr#34 ) Fix CLI exception class inheritance ( buildarr/buildarr#35 ) Use discriminated unions to accurately determine resource type ( buildarr/buildarr#36 ) Change log types of some TRaSH logs to INFO ( buildarr/buildarr#37 ) Set better constraints on Sonarr configuration attributes ( buildarr/buildarr#38 )","title":"Changed"},{"location":"plugins/sonarr/release-notes/#v012-2023-02-20","text":"This is a bugfix release that fixes updates of certain types of Sonarr instance configuration, improving usability of the Sonarr plugin. The following types of Sonarr instance configuration have had bugfixes and improvements made, and are confirmed to work without errors: Media Management Ensure that minimum_free_space is set to a minimum of 100 MB Fix unmonitor_deleted_episodes so that it is now checked and updated by Buildarr Add a delete_unmanaged_root_folders option to allow Buildarr to delete undefined root folders (disabled by default) Improve other configuration constraints so that it more closely matches Sonarr Fix a minor logging bug in root folder updates Profiles Quality Profiles / Language Profiles Improve attribute constraints e.g. ensure duplicate quality values cannot be defined, enforce upgrade_until being required when allow_upgrades is True Fix conversion between Buildarr and Sonarr configuration state so that no errors occur when upgrades are disabled Internal refactor to make the code easier to understand Delay Profiles - Confirmed to work properly as of v0.1.1 (and likely v0.1.0 ) Release Profiles Fix bug introduced in v0.1.1 where internal validation is not done on release profiles downloaded from TRaSH-Guides, resulting in preferred word lists being updated on each run, and potential errors not being caught if there are invalid values in the profile Internal refactor to simplify implementation Quality Fix bug introduced in v0.1.1 where internal validation is not done on quality profiles downloaded from TRaSH-Guides, resulting in potential errors not being caught if there are invalid values in the profile Metadata - Confirmed to work properly as of v0.1.1 (and likely v0.1.0 ) Small logging bug fixed where it was ambiguous which metadata type was being modified on update Tags - Confirmed to work properly as of v0.1.1 (and likely v0.1.0 ) General Improve behaviour when setting an authentication username and password so that configuration updates are idempotent when authentication is disabled Fix setting a proxy password Fix setting backup intervals and retentions so that it is no longer possible to set a value not supported by Sonarr Incorrect syntax in some examples in the documentation were also found and fixed.","title":"v0.1.2 - 2023-02-20"},{"location":"plugins/sonarr/release-notes/#added_2","text":"Added the sonarr.settings.media_management.delete_unmanaged_root_folders configuration attribute ( buildarr/buildarr#24 )","title":"Added"},{"location":"plugins/sonarr/release-notes/#changed_8","text":"Improve and fix Sonarr general settings configuration updates ( buildarr/buildarr#19 ) Fix Sonarr UI settings updates ( buildarr/buildarr#20 ) Fix small bug Sonarr metadata definition update logging ( buildarr/buildarr#21 ) Improve Sonarr quality profile definition parsing ( buildarr/buildarr#22 ) Make improvements and bug fixes to quality/language/release profile and quality definition parsing ( buildarr/buildarr#23 ) Fix Sonarr media management settings and improve root folder handling ( buildarr/buildarr#24 )","title":"Changed"},{"location":"plugins/sonarr/release-notes/#v011-2023-02-19","text":"This is a support release that fixes quality definition and backup configuration updates on remote Sonarr instances. A new Dummy plugin is now included with Buildarr, used for testing Buildarr and its plugin API, and also serves as a reference implementation for plugin developers. Other behind-the-scenes improvements include a refactor of the plugin API to allow for accurate type hints for configuration objects in secrets metadata classes (and vice versa), and numerous updates to the documentation to correct errors and add more detail.","title":"v0.1.1 - 2023-02-19"},{"location":"plugins/sonarr/release-notes/#added_3","text":"Add a GitHub Action to push releases to PyPI ( buildarr/buildarr#11 ) Create a buildarr-dummy plugin for testing the Buildarr plugin API ( buildarr/buildarr#12 )","title":"Added"},{"location":"plugins/sonarr/release-notes/#changed_9","text":"Fix $PUID and $GUID declarations ( b5110f3 ) Fix Docker Hub link ( be0ba12 ) Fix Docker volume mount docs ( fe328aa ) Fix troubleshooting Buildarr run docs ( e3b8833 ) Update dependency versions ( 3c19ede ) Fix debug Docker command in the GitHub Pages site ( 1e17741 ) Disable automatic dependency version updates ( c5c61cd ) Add missing download client documentation ( d07936f ) Fix incorrect config value definition in docs ( d1807a0 ) Fix to-do list indenting ( bca56e5 ) Add a link to the configuration documentation in README.md ( a5c0e6d ) Clean up and update Sonarr plugin internals ( buildarr/buildarr#14 ) Fix updates to Sonarr quality definitions ( buildarr/buildarr#15 ) Fix updates to Sonarr backup general settings ( buildarr/buildarr#16 )","title":"Changed"},{"location":"plugins/sonarr/release-notes/#removed","text":"Removed buildarr.__version__ (please use importlib.metadata instead)","title":"Removed"},{"location":"plugins/sonarr/release-notes/#v010-2023-02-11","text":"Release the initial version of Buildarr (v0.1.0).","title":"v0.1.0 - 2023-02-11"},{"location":"plugins/sonarr/configuration/connect/","text":"Connect # Sonarr supports configuring connections to external applications and services. These are not only for Sonarr to communicate with the outside world, they can also be useful for monitoring since the user can be alerted by a variety of possible service when some kind of event (or problem) occurs in Sonarr. Configuring connections # Connections are configured using the following syntax. sonarr : settings : connect : delete_unmanaged : false # Optional definitions : Email : # Name of connection in Sonarr. type : \"email\" # Required notification_triggers : # When to send notifications. on_grab : true on_import : true on_upgrade : true on_rename : false # Not supported by email notifications. on_series_delete : true on_episode_file_delete : true on_episode_file_delete_for_upgrade : true on_health_issue : true include_health_warnings : false # Do not send on just warnings. on_application_update : true tags : # Tags can also be assigned to connections. - \"example\" # Connection-specific parameters. server : \"smtp.example.com\" port : 465 use_encryption : true username : \"sonarr\" password : \"fake-password\" from_address : \"sonarr@example.com\" recipient_addresses : - \"admin@example.com\" # Add additional connections here. A type attribute must be defined so Buildarr knows what type of connection to make. Each connection has a unique value for type documented below. The triggers enabled on a connection are defined under notification_triggers . Tags can be assigned to connections, to only allow notifications relating to media under those tags. The delete_unmanaged flag on the outer connect block can be set to remove connections not defined in Buildarr. Take care when using this option, as it can remove connections automatically managed by other applications. The following notification triggers can be enabled. Some connection types only allow a subset of these to be enabled, check the documentation the specific connection type for more information. on_grab : bool = False class-attribute instance-attribute # Be notified when episodes are available for download and has been sent to a download client. on_import : bool = False class-attribute instance-attribute # Be notified when episodes are successfully imported. (Formerly known as On Download) on_upgrade : bool = False class-attribute instance-attribute # Be notified when episodes are upgraded to a better quality. on_rename : bool = False class-attribute instance-attribute # Be notified when episodes are renamed. on_series_delete : bool = False class-attribute instance-attribute # Be notified when series are deleted. on_episode_file_delete : bool = False class-attribute instance-attribute # Be notified when episodes files are deleted. on_episode_file_delete_for_upgrade : bool = False class-attribute instance-attribute # Be notified when episode files are deleted for upgrades. on_health_issue : bool = False class-attribute instance-attribute # Be notified on health check failures. include_health_warnings : bool = False class-attribute instance-attribute # Be notified on health warnings in addition to errors. Requires on_health_issue to be enabled to have any effect. on_application_update : bool = False class-attribute instance-attribute # Be notified when Sonarr gets updated to a new version. Boxcar # Receive media update and health alert push notifications via Boxcar. Supported notification triggers: All except on_rename type : Literal [ 'boxcar' ] = 'boxcar' class-attribute instance-attribute # Type value associated with this kind of connection. access_token : Password instance-attribute # Access token for authenticating with Boxcar. Custom Script # Execute a local script on the Sonarr instance when events occur. Supported notification triggers: All type : Literal [ 'customscript' ] = 'customscript' class-attribute instance-attribute # Type value associated with this kind of connection. path : NonEmptyStr instance-attribute # Path of the script to execute. Discord # Send media update and health alert messages to a Discord server. Supported notification triggers: All type : Literal [ 'discord' ] = 'discord' class-attribute instance-attribute # Type value associated with this kind of connection. webhook_url : AnyHttpUrl instance-attribute # Discord server webhook URL. username : Optional [ str ] = None class-attribute instance-attribute # The username to post as. If unset, blank or set to None , use the default username set to the webhook URL. avatar : Optional [ str ] = None class-attribute instance-attribute # Change the avatar that is used for messages from this connection. If unset, blank or set to None , use the default avatar for the user. host : Optional [ str ] = None class-attribute instance-attribute # Override the host name that shows for this notification. If unset, blank or set to None , use the machine name. on_grab_fields : Set [ OnGrabField ] = { OnGrabField . overview , OnGrabField . rating , OnGrabField . genres , OnGrabField . quality , OnGrabField . size , OnGrabField . links , OnGrabField . release , OnGrabField . poster , OnGrabField . fanart } class-attribute instance-attribute # Set the fields that are passed in for this 'on grab' notification. By default, all fields are passed in. Values: overview rating genres quality group size links release poster fanart Example: ... connect : definitions : Discord : type : \"discord\" webhook_url : \"https://...\" on_grab_fields : - \"overview\" - \"quality\" - \"release\" on_import_fields : Set [ OnImportField ] = { OnImportField . overview , OnImportField . rating , OnImportField . genres , OnImportField . quality , OnImportField . codecs , OnImportField . group , OnImportField . size , OnImportField . languages , OnImportField . subtitles , OnImportField . links , OnImportField . release , OnImportField . poster , OnImportField . fanart } class-attribute instance-attribute # Set the fields that are passed in for this 'on import' notification. By default, all fields are passed in. Values: overview rating genres quality codecs group size languages subtitles links release poster fanart Example: ... connect : definitions : Discord : type : \"discord\" webhook_url : \"https://...\" on_import_fields : - \"overview\" - \"quality\" - \"release\" Email # Send media update and health alert messages to an email address. Supported notification triggers: All except on_rename type : Literal [ 'email' ] = 'email' class-attribute instance-attribute # Type value associated with this kind of connection. server : NonEmptyStr instance-attribute # Hostname or IP address of the SMTP server to send outbound mail to. port : Port = 587 class-attribute instance-attribute # The port number on the SMTP server to use to submit mail. The default is to use STARTTLS on the standard SMTP submission port. use_encryption : bool = True class-attribute instance-attribute # Whether or not to use encryption when sending mail to the SMTP server. If the port number is set to 465, SMTPS (implicit TLS) will be used. Any other port number will result in STARTTLS being used. The default is to enable encryption. username : NonEmptyStr instance-attribute # SMTP username of the account to send the mail from. password : Password instance-attribute # SMTP password of the account to send the mail from. from_address : EmailStr instance-attribute # Email address to send the mail as. Changed in version 0.5.3 : Disallow RFC-5322 formatted mailbox addresses (e.g. Sonarr Notifications <sonarr@example.com> ), as they are not supported by Sonarr V3 (the currently supported version). recipient_addresses : Annotated [ List [ EmailStr ], Field ( min_items = 1 , unique_items = True )] instance-attribute # List of email addresses to directly address the mail to. At least one address must be provided. Changed in version 0.5.3 : Disallow RFC-5322 formatted mailbox addresses (e.g. Sonarr Notifications <sonarr@example.com> ), as they are not supported by Sonarr V3 (the currently supported version). cc_addresses : Annotated [ List [ EmailStr ], Field ( unique_items = True )] = [] class-attribute instance-attribute # Optional list of email addresses to copy (CC) the mail to. Changed in version 0.5.3 : Disallow RFC-5322 formatted mailbox addresses (e.g. Sonarr Notifications <sonarr@example.com> ), as they are not supported by Sonarr V3 (the currently supported version). bcc_addresses : Annotated [ List [ EmailStr ], Field ( unique_items = True )] = [] class-attribute instance-attribute # Optional list of email addresses to blind copy (BCC) the mail to. Changed in version 0.5.3 : Disallow RFC-5322 formatted mailbox addresses (e.g. Sonarr Notifications <sonarr@example.com> ), as they are not supported by Sonarr V3 (the currently supported version). Emby # Send media update and health alert notifications to an Emby server. Supported notification triggers: All type : Literal [ 'emby' ] = 'emby' class-attribute instance-attribute # Type value associated with this kind of connection. host : NonEmptyStr instance-attribute # Emby server hostname or IP address. port : Port = 8096 class-attribute instance-attribute # Emby server port. use_ssl : bool = False class-attribute instance-attribute # Use HTTPS to connect to Emby, instead of HTTP. api_key : Password instance-attribute # API key to authenticate with Emby. send_notifications : bool = False class-attribute instance-attribute # Have MediaBrowser send notifications to configured providers. update_library : bool = False class-attribute instance-attribute # Update the Emby library on import, rename, or delete. Gotify # Send media update and health alert push notifications via a Gotify server. Supported notification triggers: All except on_rename type : Literal [ 'gotify' ] = 'gotify' class-attribute instance-attribute # Type value associated with this kind of connection. server : AnyHttpUrl instance-attribute # Gotify server URL. (e.g. http://gotify.example.com:1234 ) app_token : Password instance-attribute # App token to use to authenticate with Gotify. priority : GotifyPriority = GotifyPriority . normal class-attribute instance-attribute # Gotify notification priority. Values: min low normal high Join # Send media update and health alert push notifications via Join. Supported notification triggers: All except on_rename type : Literal [ 'join' ] = 'join' class-attribute instance-attribute # Type value associated with this kind of connection. api_key : Password instance-attribute # API key to use to authenticate with Join. device_names : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # List of full or partial device names you'd like to send notifications to. If unset or empty, all devices will receive notifications. priority : JoinPriority = JoinPriority . normal class-attribute instance-attribute # Join push notification priority. Values: silent quiet normal high emergency Kodi (XBMC) # Send media update and health alert notifications to a Kodi (XBMC) instance. Supported notification triggers: All type : Literal [ 'kodi' , 'xbmc' ] = 'kodi' class-attribute instance-attribute # Type values associated with this kind of connection. (Use either one) host : NonEmptyStr instance-attribute # Kodi hostname or IP address. port : Port = 8080 class-attribute instance-attribute # Kodi API port. use_ssl : bool = False class-attribute instance-attribute # Connect to Kodi over HTTPS instead of HTTP. username : NonEmptyStr instance-attribute # Username to use to login to Kodi. password : Password instance-attribute # Password to use to login to Kodi. gui_notification : bool = False class-attribute instance-attribute # Enable showing notifications from Sonarr in the Kodi GUI. display_time : int = Field ( 5 , ge = 0 ) class-attribute instance-attribute # How long the notification will be displayed for (in seconds). update_library : bool = False class-attribute instance-attribute # Update the Kodi library on import/rename. clean_library : bool = False class-attribute instance-attribute # Clean the Kodi library after update. always_update : bool = False class-attribute instance-attribute # Update the Kodi library even when a video is playing. Mailgun # Send media update and health alert emails via the Mailgun delivery service. Supported notification triggers: All except on_rename type : Literal [ 'mailgun' ] = 'mailgun' class-attribute instance-attribute # Type value associated with this kind of connection. api_key : Password instance-attribute # API key to use to authenticate with Mailgun. use_eu_endpoint : bool = False class-attribute instance-attribute # Send mail via the EU endpoint instead of the US one. from_address : EmailStr instance-attribute # Email address to send the mail as. Changed in version 0.5.3 : Disallow RFC-5322 formatted mailbox addresses (e.g. Sonarr Notifications <sonarr@example.com> ), as they are not supported by Sonarr V3 (the currently supported version). sender_domain : NonEmptyStr instance-attribute # The domain from which the mail will be sent. recipient_addresses : Annotated [ List [ EmailStr ], Field ( min_items = 1 , unique_items = True )] instance-attribute # The recipient email addresses of the notification mail. At least one recipient address is required. Changed in version 0.5.3 : Disallow RFC-5322 formatted mailbox addresses (e.g. Sonarr Notifications <sonarr@example.com> ), as they are not supported by Sonarr V3 (the currently supported version). Plex Home Theater # Send media update notifications to a Plex Home Theater instance. Supported notification triggers: on_grab , on_import , on_upgrade only type : Literal [ 'plex-home-theater' ] = 'plex-home-theater' class-attribute instance-attribute # Type value associated with this kind of connection. host : NonEmptyStr instance-attribute # Plex Home Theater hostname or IP address. port : Port = 3005 class-attribute instance-attribute # Plex Home Theater API port. use_ssl : bool = False class-attribute instance-attribute # Connect to Plex Home Theater over HTTPS instead of HTTP. username : NonEmptyStr instance-attribute # Username to use to login to Plex Home Theater. password : Password instance-attribute # Password to use to login to Plex Home Theater. gui_notification : bool = False class-attribute instance-attribute # Enable showing notifications from Sonarr in the Plex Home Theater GUI. display_time : int = Field ( 5 , ge = 0 ) class-attribute instance-attribute # How long the notification will be displayed for (in seconds). update_library : bool = False class-attribute instance-attribute # Update the Plex Home Theater library on import/rename. clean_library : bool = False class-attribute instance-attribute # Clean the Plex Home Theater library after update. always_update : bool = False class-attribute instance-attribute # Update the Plex Home THeater library even when a video is playing. Plex Media Center # Send media update notifications to a Plex Media Center instance. Supported notification triggers: on_grab , on_import , on_upgrade only type : Literal [ 'plex-media-center' ] = 'plex-media-center' class-attribute instance-attribute # Type value associated with this kind of connection. host : NonEmptyStr instance-attribute # Plex Media Center hostname or IP address. port : Port = 3000 class-attribute instance-attribute # Plex Media Center API port. username : NonEmptyStr instance-attribute # Username to use to login to Plex Media Center. password : Password instance-attribute # Password to use to login to Plex Media Center. Plex Media Server # Send media update notifications to a Plex Media Server instance. Supported notification triggers: All except on_grab , on_health_issue and on_application_update type : Literal [ 'plex-media-server' ] = 'plex-media-server' class-attribute instance-attribute # Type value associated with this kind of connection. host : NonEmptyStr instance-attribute # Plex Media Server hostname or IP address. port : Port = 32400 class-attribute instance-attribute # Plex Media Server API port. use_ssl : bool = False class-attribute instance-attribute # Connect to Plex Media Server over HTTPS instead of HTTP. auth_token : Password instance-attribute # Plex authentication token. If unsure on where to find this token, follow this guide from Plex.tv . update_library : bool = True class-attribute instance-attribute # Update the Plex Media Server library on import, rename or delete. Prowl # Send media update and health alert push notifications to a Prowl client. Supported notification triggers: All except on_rename type : Literal [ 'prowl' ] = 'prowl' class-attribute instance-attribute # Type value associated with this kind of connection. api_key : Password instance-attribute # API key to use when authenticating with Prowl. priority : ProwlPriority = ProwlPriority . normal class-attribute instance-attribute # Prowl push notification priority. Values: verylow low normal high emergency Pushbullet # Send media update and health alert push notifications to 1 or more Pushbullet devices. Supported notification triggers: All except on_rename type : Literal [ 'pushbullet' ] = 'pushbullet' class-attribute instance-attribute # Type value associated with this kind of connection. api_key : Password instance-attribute # API key to use when authenticating with Pushbullet. device_ids : List [ NonEmptyStr ] = [] class-attribute instance-attribute # List of device IDs to send notifications to. If unset or empty, send to all devices. channel_tags : List [ NonEmptyStr ] = [] class-attribute instance-attribute # List of Channel Tags to send notifications to. sender_id : Optional [ str ] = None class-attribute instance-attribute # The device ID to send notifications from ( device_iden in the device's URL on pushbullet.com ). Leave unset, blank or set to None to send from yourself. Pushover # Send media update and health alert push notifications to 1 or more Pushover devices. Supported notification triggers: All except on_rename type : Literal [ 'pushover' ] = 'pushover' class-attribute instance-attribute # Type value associated with this kind of connection. user_key : Annotated [ SecretStr , Field ( min_length = 30 , max_length = 30 )] instance-attribute # User key to use to authenticate with your Pushover account. api_key : Annotated [ SecretStr , Field ( min_length = 30 , max_length = 30 )] instance-attribute # API key assigned to Sonarr in Pushover. devices : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # List of device names to send notifications to. If unset or empty, send to all devices. priority : PushoverPriority = PushoverPriority . normal class-attribute instance-attribute # Pushover push notification priority. Values: silent quiet normal high emergency retry : Union [ Literal [ 0 ], PushoverRetry ] = 0 class-attribute instance-attribute # Interval to retry emergency alerts, in seconds. Minimum 30 seconds. Set to 0 to disable retrying emergency alerts. expire : int = Field ( 0 , ge = 0 , le = 86400 ) class-attribute instance-attribute # Threshold for retrying emergency alerts, in seconds. If retry is set, this should be set to a higher value. Maximum 86400 seconds (1 day). sound : Optional [ str ] = None class-attribute instance-attribute # Notification sound to use on devices. Leave unset, blank or set to None to use the default. SendGrid # Send media update and health alert emails via the SendGrid delivery service. Supported notification triggers: All except on_rename type : Literal [ 'sendgrid' ] = 'sendgrid' class-attribute instance-attribute # Type value associated with this kind of connection. api_key : Password instance-attribute # API key to use to authenticate with SendGrid. from_address : EmailStr instance-attribute # Email address to send the mail as. Changed in version 0.5.3 : Disallow RFC-5322 formatted mailbox addresses (e.g. Sonarr Notifications <sonarr@example.com> ), as they are not supported by Sonarr V3 (the currently supported version). recipient_addresses : Annotated [ List [ EmailStr ], Field ( min_items = 1 , unique_items = True )] instance-attribute # The recipient email addresses of the notification mail. At least one recipient address is required. Changed in version 0.5.3 : Disallow RFC-5322 formatted mailbox addresses (e.g. Sonarr Notifications <sonarr@example.com> ), as they are not supported by Sonarr V3 (the currently supported version). Slack # Send media update and health alert messages to a Slack channel. Supported notification triggers: All type : Literal [ 'slack' ] = 'slack' class-attribute instance-attribute # Type value associated with this kind of connection. webhook_url : AnyHttpUrl instance-attribute # Webhook URL for the Slack channel to send to. username : NonEmptyStr instance-attribute # Username to post as. icon : Optional [ str ] = None class-attribute instance-attribute # The icon that is used for messages from this integration (emoji or URL). If unset, blank or set to None , use the default for the user. channel : Optional [ str ] = None class-attribute instance-attribute # If set, overrides the default channel in the webhook. Synology Indexer # Send media update notifications to the local Synology Indexer. Supported notification triggers: All except on_grab , on_health_issue and on_application_update type : Literal [ 'synology-indexer' ] = 'synology-indexer' class-attribute instance-attribute # Type value associated with this kind of connection. update_library : bool = True class-attribute instance-attribute # Update the library on media import/rename/delete. Telegram # Send media update and health alert messages to a Telegram chat room. Supported notification triggers: All type : Literal [ 'telegram' ] = 'telegram' class-attribute instance-attribute # Type value associated with this kind of connection. bot_token : Password instance-attribute # The bot token assigned to the Sonarr instance. chat_id : NonEmptyStr instance-attribute # The ID of the chat room to send messages to. You must start a conversation with the bot or add it to your group to receive messages. send_silently : bool = False class-attribute instance-attribute # Sends the message silently. Users will receive a notification with no sound. Trakt # Send media update and health alert messages to the Trakt media tracker. Note Sonarr directly authenticates with Trakt to generate tokens for it to use. At the moment, the easiest way to generate the tokens for Buildarr is to do it using the GUI within Sonarr, and use the following shell command to retrieve the generated configuration. $ curl -X \"GET\" \"<sonarr-url>/api/v3/notification\" -H \"X-Api-Key: <api-key>\" Supported notification triggers: All except on_grab , on_rename , on_health_issue and on_application_update type : Literal [ 'trakt' ] = 'trakt' class-attribute instance-attribute # Type value associated with this kind of connection. access_token : Password instance-attribute # Access token for Sonarr from Trakt. refresh_token : Password instance-attribute # Refresh token for Sonarr from Trakt. expires : datetime instance-attribute # Expiry date-time of the access token, preferably in ISO-8601 format and in UTC. Example: 2023-05-10T15:34:08.117451Z auth_user : TraktAuthUser instance-attribute # The username being authenticated in Trakt. Twitter # Send media update and health alert messages via Twitter. Twitter requires you to create an application for their API to generate the necessary keys and secrets. If unsure how to proceed, refer to these guides from Twitter and WikiArr . Access tokens can be obtained using the prodecure documented here . Supported notification triggers: All except on_rename type : Literal [ 'twitter' ] = 'twitter' class-attribute instance-attribute # Type value associated with this kind of connection. consumer_key : Password instance-attribute # Consumer key from a Twitter application. consumer_secret : Password instance-attribute # Consumer key from a Twitter application. access_token : Password instance-attribute # Access token for a Twitter user. access_token_secret : Password instance-attribute # Access token secret for a Twitter user. mention : NonEmptyStr instance-attribute # Mention this user in sent tweets. direct_message : bool = True class-attribute instance-attribute # Send a direct message instead of a public message. Webhook # Send media update and health alert notifications to a webhook API. Supported notification triggers: All type : Literal [ 'webhook' ] = 'webhook' class-attribute instance-attribute # Type value associated with this kind of connection. method : WebhookMethod = WebhookMethod . POST class-attribute instance-attribute # HTTP request method type to use. Values: POST PUT username : NonEmptyStr instance-attribute # Webhook API username. password : Password instance-attribute # Webhook API password.","title":"Connect"},{"location":"plugins/sonarr/configuration/connect/#connect","text":"Sonarr supports configuring connections to external applications and services. These are not only for Sonarr to communicate with the outside world, they can also be useful for monitoring since the user can be alerted by a variety of possible service when some kind of event (or problem) occurs in Sonarr.","title":"Connect"},{"location":"plugins/sonarr/configuration/connect/#configuring-connections","text":"Connections are configured using the following syntax. sonarr : settings : connect : delete_unmanaged : false # Optional definitions : Email : # Name of connection in Sonarr. type : \"email\" # Required notification_triggers : # When to send notifications. on_grab : true on_import : true on_upgrade : true on_rename : false # Not supported by email notifications. on_series_delete : true on_episode_file_delete : true on_episode_file_delete_for_upgrade : true on_health_issue : true include_health_warnings : false # Do not send on just warnings. on_application_update : true tags : # Tags can also be assigned to connections. - \"example\" # Connection-specific parameters. server : \"smtp.example.com\" port : 465 use_encryption : true username : \"sonarr\" password : \"fake-password\" from_address : \"sonarr@example.com\" recipient_addresses : - \"admin@example.com\" # Add additional connections here. A type attribute must be defined so Buildarr knows what type of connection to make. Each connection has a unique value for type documented below. The triggers enabled on a connection are defined under notification_triggers . Tags can be assigned to connections, to only allow notifications relating to media under those tags. The delete_unmanaged flag on the outer connect block can be set to remove connections not defined in Buildarr. Take care when using this option, as it can remove connections automatically managed by other applications. The following notification triggers can be enabled. Some connection types only allow a subset of these to be enabled, check the documentation the specific connection type for more information.","title":"Configuring connections"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.NotificationTriggers.on_grab","text":"Be notified when episodes are available for download and has been sent to a download client.","title":"on_grab"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.NotificationTriggers.on_import","text":"Be notified when episodes are successfully imported. (Formerly known as On Download)","title":"on_import"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.NotificationTriggers.on_upgrade","text":"Be notified when episodes are upgraded to a better quality.","title":"on_upgrade"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.NotificationTriggers.on_rename","text":"Be notified when episodes are renamed.","title":"on_rename"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.NotificationTriggers.on_series_delete","text":"Be notified when series are deleted.","title":"on_series_delete"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.NotificationTriggers.on_episode_file_delete","text":"Be notified when episodes files are deleted.","title":"on_episode_file_delete"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.NotificationTriggers.on_episode_file_delete_for_upgrade","text":"Be notified when episode files are deleted for upgrades.","title":"on_episode_file_delete_for_upgrade"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.NotificationTriggers.on_health_issue","text":"Be notified on health check failures.","title":"on_health_issue"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.NotificationTriggers.include_health_warnings","text":"Be notified on health warnings in addition to errors. Requires on_health_issue to be enabled to have any effect.","title":"include_health_warnings"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.NotificationTriggers.on_application_update","text":"Be notified when Sonarr gets updated to a new version.","title":"on_application_update"},{"location":"plugins/sonarr/configuration/connect/#boxcar","text":"Receive media update and health alert push notifications via Boxcar. Supported notification triggers: All except on_rename","title":"Boxcar"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.BoxcarConnection.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.BoxcarConnection.access_token","text":"Access token for authenticating with Boxcar.","title":"access_token"},{"location":"plugins/sonarr/configuration/connect/#custom-script","text":"Execute a local script on the Sonarr instance when events occur. Supported notification triggers: All","title":"Custom Script"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.CustomscriptConnection.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.CustomscriptConnection.path","text":"Path of the script to execute.","title":"path"},{"location":"plugins/sonarr/configuration/connect/#discord","text":"Send media update and health alert messages to a Discord server. Supported notification triggers: All","title":"Discord"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.DiscordConnection.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.DiscordConnection.webhook_url","text":"Discord server webhook URL.","title":"webhook_url"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.DiscordConnection.username","text":"The username to post as. If unset, blank or set to None , use the default username set to the webhook URL.","title":"username"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.DiscordConnection.avatar","text":"Change the avatar that is used for messages from this connection. If unset, blank or set to None , use the default avatar for the user.","title":"avatar"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.DiscordConnection.host","text":"Override the host name that shows for this notification. If unset, blank or set to None , use the machine name.","title":"host"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.DiscordConnection.on_grab_fields","text":"Set the fields that are passed in for this 'on grab' notification. By default, all fields are passed in. Values: overview rating genres quality group size links release poster fanart Example: ... connect : definitions : Discord : type : \"discord\" webhook_url : \"https://...\" on_grab_fields : - \"overview\" - \"quality\" - \"release\"","title":"on_grab_fields"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.DiscordConnection.on_import_fields","text":"Set the fields that are passed in for this 'on import' notification. By default, all fields are passed in. Values: overview rating genres quality codecs group size languages subtitles links release poster fanart Example: ... connect : definitions : Discord : type : \"discord\" webhook_url : \"https://...\" on_import_fields : - \"overview\" - \"quality\" - \"release\"","title":"on_import_fields"},{"location":"plugins/sonarr/configuration/connect/#email","text":"Send media update and health alert messages to an email address. Supported notification triggers: All except on_rename","title":"Email"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.EmailConnection.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.EmailConnection.server","text":"Hostname or IP address of the SMTP server to send outbound mail to.","title":"server"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.EmailConnection.port","text":"The port number on the SMTP server to use to submit mail. The default is to use STARTTLS on the standard SMTP submission port.","title":"port"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.EmailConnection.use_encryption","text":"Whether or not to use encryption when sending mail to the SMTP server. If the port number is set to 465, SMTPS (implicit TLS) will be used. Any other port number will result in STARTTLS being used. The default is to enable encryption.","title":"use_encryption"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.EmailConnection.username","text":"SMTP username of the account to send the mail from.","title":"username"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.EmailConnection.password","text":"SMTP password of the account to send the mail from.","title":"password"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.EmailConnection.from_address","text":"Email address to send the mail as. Changed in version 0.5.3 : Disallow RFC-5322 formatted mailbox addresses (e.g. Sonarr Notifications <sonarr@example.com> ), as they are not supported by Sonarr V3 (the currently supported version).","title":"from_address"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.EmailConnection.recipient_addresses","text":"List of email addresses to directly address the mail to. At least one address must be provided. Changed in version 0.5.3 : Disallow RFC-5322 formatted mailbox addresses (e.g. Sonarr Notifications <sonarr@example.com> ), as they are not supported by Sonarr V3 (the currently supported version).","title":"recipient_addresses"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.EmailConnection.cc_addresses","text":"Optional list of email addresses to copy (CC) the mail to. Changed in version 0.5.3 : Disallow RFC-5322 formatted mailbox addresses (e.g. Sonarr Notifications <sonarr@example.com> ), as they are not supported by Sonarr V3 (the currently supported version).","title":"cc_addresses"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.EmailConnection.bcc_addresses","text":"Optional list of email addresses to blind copy (BCC) the mail to. Changed in version 0.5.3 : Disallow RFC-5322 formatted mailbox addresses (e.g. Sonarr Notifications <sonarr@example.com> ), as they are not supported by Sonarr V3 (the currently supported version).","title":"bcc_addresses"},{"location":"plugins/sonarr/configuration/connect/#emby","text":"Send media update and health alert notifications to an Emby server. Supported notification triggers: All","title":"Emby"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.EmbyConnection.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.EmbyConnection.host","text":"Emby server hostname or IP address.","title":"host"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.EmbyConnection.port","text":"Emby server port.","title":"port"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.EmbyConnection.use_ssl","text":"Use HTTPS to connect to Emby, instead of HTTP.","title":"use_ssl"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.EmbyConnection.api_key","text":"API key to authenticate with Emby.","title":"api_key"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.EmbyConnection.send_notifications","text":"Have MediaBrowser send notifications to configured providers.","title":"send_notifications"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.EmbyConnection.update_library","text":"Update the Emby library on import, rename, or delete.","title":"update_library"},{"location":"plugins/sonarr/configuration/connect/#gotify","text":"Send media update and health alert push notifications via a Gotify server. Supported notification triggers: All except on_rename","title":"Gotify"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.GotifyConnection.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.GotifyConnection.server","text":"Gotify server URL. (e.g. http://gotify.example.com:1234 )","title":"server"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.GotifyConnection.app_token","text":"App token to use to authenticate with Gotify.","title":"app_token"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.GotifyConnection.priority","text":"Gotify notification priority. Values: min low normal high","title":"priority"},{"location":"plugins/sonarr/configuration/connect/#join","text":"Send media update and health alert push notifications via Join. Supported notification triggers: All except on_rename","title":"Join"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.JoinConnection.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.JoinConnection.api_key","text":"API key to use to authenticate with Join.","title":"api_key"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.JoinConnection.device_names","text":"List of full or partial device names you'd like to send notifications to. If unset or empty, all devices will receive notifications.","title":"device_names"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.JoinConnection.priority","text":"Join push notification priority. Values: silent quiet normal high emergency","title":"priority"},{"location":"plugins/sonarr/configuration/connect/#kodi-xbmc","text":"Send media update and health alert notifications to a Kodi (XBMC) instance. Supported notification triggers: All","title":"Kodi (XBMC)"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.KodiConnection.type","text":"Type values associated with this kind of connection. (Use either one)","title":"type"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.KodiConnection.host","text":"Kodi hostname or IP address.","title":"host"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.KodiConnection.port","text":"Kodi API port.","title":"port"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.KodiConnection.use_ssl","text":"Connect to Kodi over HTTPS instead of HTTP.","title":"use_ssl"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.KodiConnection.username","text":"Username to use to login to Kodi.","title":"username"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.KodiConnection.password","text":"Password to use to login to Kodi.","title":"password"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.KodiConnection.gui_notification","text":"Enable showing notifications from Sonarr in the Kodi GUI.","title":"gui_notification"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.KodiConnection.display_time","text":"How long the notification will be displayed for (in seconds).","title":"display_time"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.KodiConnection.update_library","text":"Update the Kodi library on import/rename.","title":"update_library"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.KodiConnection.clean_library","text":"Clean the Kodi library after update.","title":"clean_library"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.KodiConnection.always_update","text":"Update the Kodi library even when a video is playing.","title":"always_update"},{"location":"plugins/sonarr/configuration/connect/#mailgun","text":"Send media update and health alert emails via the Mailgun delivery service. Supported notification triggers: All except on_rename","title":"Mailgun"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.MailgunConnection.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.MailgunConnection.api_key","text":"API key to use to authenticate with Mailgun.","title":"api_key"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.MailgunConnection.use_eu_endpoint","text":"Send mail via the EU endpoint instead of the US one.","title":"use_eu_endpoint"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.MailgunConnection.from_address","text":"Email address to send the mail as. Changed in version 0.5.3 : Disallow RFC-5322 formatted mailbox addresses (e.g. Sonarr Notifications <sonarr@example.com> ), as they are not supported by Sonarr V3 (the currently supported version).","title":"from_address"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.MailgunConnection.sender_domain","text":"The domain from which the mail will be sent.","title":"sender_domain"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.MailgunConnection.recipient_addresses","text":"The recipient email addresses of the notification mail. At least one recipient address is required. Changed in version 0.5.3 : Disallow RFC-5322 formatted mailbox addresses (e.g. Sonarr Notifications <sonarr@example.com> ), as they are not supported by Sonarr V3 (the currently supported version).","title":"recipient_addresses"},{"location":"plugins/sonarr/configuration/connect/#plex-home-theater","text":"Send media update notifications to a Plex Home Theater instance. Supported notification triggers: on_grab , on_import , on_upgrade only","title":"Plex Home Theater"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PlexHomeTheaterConnection.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PlexHomeTheaterConnection.host","text":"Plex Home Theater hostname or IP address.","title":"host"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PlexHomeTheaterConnection.port","text":"Plex Home Theater API port.","title":"port"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PlexHomeTheaterConnection.use_ssl","text":"Connect to Plex Home Theater over HTTPS instead of HTTP.","title":"use_ssl"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PlexHomeTheaterConnection.username","text":"Username to use to login to Plex Home Theater.","title":"username"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PlexHomeTheaterConnection.password","text":"Password to use to login to Plex Home Theater.","title":"password"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PlexHomeTheaterConnection.gui_notification","text":"Enable showing notifications from Sonarr in the Plex Home Theater GUI.","title":"gui_notification"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PlexHomeTheaterConnection.display_time","text":"How long the notification will be displayed for (in seconds).","title":"display_time"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PlexHomeTheaterConnection.update_library","text":"Update the Plex Home Theater library on import/rename.","title":"update_library"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PlexHomeTheaterConnection.clean_library","text":"Clean the Plex Home Theater library after update.","title":"clean_library"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PlexHomeTheaterConnection.always_update","text":"Update the Plex Home THeater library even when a video is playing.","title":"always_update"},{"location":"plugins/sonarr/configuration/connect/#plex-media-center","text":"Send media update notifications to a Plex Media Center instance. Supported notification triggers: on_grab , on_import , on_upgrade only","title":"Plex Media Center"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PlexMediaCenterConnection.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PlexMediaCenterConnection.host","text":"Plex Media Center hostname or IP address.","title":"host"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PlexMediaCenterConnection.port","text":"Plex Media Center API port.","title":"port"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PlexMediaCenterConnection.username","text":"Username to use to login to Plex Media Center.","title":"username"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PlexMediaCenterConnection.password","text":"Password to use to login to Plex Media Center.","title":"password"},{"location":"plugins/sonarr/configuration/connect/#plex-media-server","text":"Send media update notifications to a Plex Media Server instance. Supported notification triggers: All except on_grab , on_health_issue and on_application_update","title":"Plex Media Server"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PlexMediaServerConnection.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PlexMediaServerConnection.host","text":"Plex Media Server hostname or IP address.","title":"host"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PlexMediaServerConnection.port","text":"Plex Media Server API port.","title":"port"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PlexMediaServerConnection.use_ssl","text":"Connect to Plex Media Server over HTTPS instead of HTTP.","title":"use_ssl"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PlexMediaServerConnection.auth_token","text":"Plex authentication token. If unsure on where to find this token, follow this guide from Plex.tv .","title":"auth_token"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PlexMediaServerConnection.update_library","text":"Update the Plex Media Server library on import, rename or delete.","title":"update_library"},{"location":"plugins/sonarr/configuration/connect/#prowl","text":"Send media update and health alert push notifications to a Prowl client. Supported notification triggers: All except on_rename","title":"Prowl"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.ProwlConnection.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.ProwlConnection.api_key","text":"API key to use when authenticating with Prowl.","title":"api_key"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.ProwlConnection.priority","text":"Prowl push notification priority. Values: verylow low normal high emergency","title":"priority"},{"location":"plugins/sonarr/configuration/connect/#pushbullet","text":"Send media update and health alert push notifications to 1 or more Pushbullet devices. Supported notification triggers: All except on_rename","title":"Pushbullet"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PushbulletConnection.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PushbulletConnection.api_key","text":"API key to use when authenticating with Pushbullet.","title":"api_key"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PushbulletConnection.device_ids","text":"List of device IDs to send notifications to. If unset or empty, send to all devices.","title":"device_ids"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PushbulletConnection.channel_tags","text":"List of Channel Tags to send notifications to.","title":"channel_tags"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PushbulletConnection.sender_id","text":"The device ID to send notifications from ( device_iden in the device's URL on pushbullet.com ). Leave unset, blank or set to None to send from yourself.","title":"sender_id"},{"location":"plugins/sonarr/configuration/connect/#pushover","text":"Send media update and health alert push notifications to 1 or more Pushover devices. Supported notification triggers: All except on_rename","title":"Pushover"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PushoverConnection.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PushoverConnection.user_key","text":"User key to use to authenticate with your Pushover account.","title":"user_key"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PushoverConnection.api_key","text":"API key assigned to Sonarr in Pushover.","title":"api_key"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PushoverConnection.devices","text":"List of device names to send notifications to. If unset or empty, send to all devices.","title":"devices"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PushoverConnection.priority","text":"Pushover push notification priority. Values: silent quiet normal high emergency","title":"priority"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PushoverConnection.retry","text":"Interval to retry emergency alerts, in seconds. Minimum 30 seconds. Set to 0 to disable retrying emergency alerts.","title":"retry"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PushoverConnection.expire","text":"Threshold for retrying emergency alerts, in seconds. If retry is set, this should be set to a higher value. Maximum 86400 seconds (1 day).","title":"expire"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.PushoverConnection.sound","text":"Notification sound to use on devices. Leave unset, blank or set to None to use the default.","title":"sound"},{"location":"plugins/sonarr/configuration/connect/#sendgrid","text":"Send media update and health alert emails via the SendGrid delivery service. Supported notification triggers: All except on_rename","title":"SendGrid"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.SendgridConnection.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.SendgridConnection.api_key","text":"API key to use to authenticate with SendGrid.","title":"api_key"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.SendgridConnection.from_address","text":"Email address to send the mail as. Changed in version 0.5.3 : Disallow RFC-5322 formatted mailbox addresses (e.g. Sonarr Notifications <sonarr@example.com> ), as they are not supported by Sonarr V3 (the currently supported version).","title":"from_address"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.SendgridConnection.recipient_addresses","text":"The recipient email addresses of the notification mail. At least one recipient address is required. Changed in version 0.5.3 : Disallow RFC-5322 formatted mailbox addresses (e.g. Sonarr Notifications <sonarr@example.com> ), as they are not supported by Sonarr V3 (the currently supported version).","title":"recipient_addresses"},{"location":"plugins/sonarr/configuration/connect/#slack","text":"Send media update and health alert messages to a Slack channel. Supported notification triggers: All","title":"Slack"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.SlackConnection.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.SlackConnection.webhook_url","text":"Webhook URL for the Slack channel to send to.","title":"webhook_url"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.SlackConnection.username","text":"Username to post as.","title":"username"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.SlackConnection.icon","text":"The icon that is used for messages from this integration (emoji or URL). If unset, blank or set to None , use the default for the user.","title":"icon"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.SlackConnection.channel","text":"If set, overrides the default channel in the webhook.","title":"channel"},{"location":"plugins/sonarr/configuration/connect/#synology-indexer","text":"Send media update notifications to the local Synology Indexer. Supported notification triggers: All except on_grab , on_health_issue and on_application_update","title":"Synology Indexer"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.SynologyIndexerConnection.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.SynologyIndexerConnection.update_library","text":"Update the library on media import/rename/delete.","title":"update_library"},{"location":"plugins/sonarr/configuration/connect/#telegram","text":"Send media update and health alert messages to a Telegram chat room. Supported notification triggers: All","title":"Telegram"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.TelegramConnection.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.TelegramConnection.bot_token","text":"The bot token assigned to the Sonarr instance.","title":"bot_token"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.TelegramConnection.chat_id","text":"The ID of the chat room to send messages to. You must start a conversation with the bot or add it to your group to receive messages.","title":"chat_id"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.TelegramConnection.send_silently","text":"Sends the message silently. Users will receive a notification with no sound.","title":"send_silently"},{"location":"plugins/sonarr/configuration/connect/#trakt","text":"Send media update and health alert messages to the Trakt media tracker. Note Sonarr directly authenticates with Trakt to generate tokens for it to use. At the moment, the easiest way to generate the tokens for Buildarr is to do it using the GUI within Sonarr, and use the following shell command to retrieve the generated configuration. $ curl -X \"GET\" \"<sonarr-url>/api/v3/notification\" -H \"X-Api-Key: <api-key>\" Supported notification triggers: All except on_grab , on_rename , on_health_issue and on_application_update","title":"Trakt"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.TraktConnection.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.TraktConnection.access_token","text":"Access token for Sonarr from Trakt.","title":"access_token"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.TraktConnection.refresh_token","text":"Refresh token for Sonarr from Trakt.","title":"refresh_token"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.TraktConnection.expires","text":"Expiry date-time of the access token, preferably in ISO-8601 format and in UTC. Example: 2023-05-10T15:34:08.117451Z","title":"expires"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.TraktConnection.auth_user","text":"The username being authenticated in Trakt.","title":"auth_user"},{"location":"plugins/sonarr/configuration/connect/#twitter","text":"Send media update and health alert messages via Twitter. Twitter requires you to create an application for their API to generate the necessary keys and secrets. If unsure how to proceed, refer to these guides from Twitter and WikiArr . Access tokens can be obtained using the prodecure documented here . Supported notification triggers: All except on_rename","title":"Twitter"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.TwitterConnection.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.TwitterConnection.consumer_key","text":"Consumer key from a Twitter application.","title":"consumer_key"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.TwitterConnection.consumer_secret","text":"Consumer key from a Twitter application.","title":"consumer_secret"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.TwitterConnection.access_token","text":"Access token for a Twitter user.","title":"access_token"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.TwitterConnection.access_token_secret","text":"Access token secret for a Twitter user.","title":"access_token_secret"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.TwitterConnection.mention","text":"Mention this user in sent tweets.","title":"mention"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.TwitterConnection.direct_message","text":"Send a direct message instead of a public message.","title":"direct_message"},{"location":"plugins/sonarr/configuration/connect/#webhook","text":"Send media update and health alert notifications to a webhook API. Supported notification triggers: All","title":"Webhook"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.WebhookConnection.type","text":"Type value associated with this kind of connection.","title":"type"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.WebhookConnection.method","text":"HTTP request method type to use. Values: POST PUT","title":"method"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.WebhookConnection.username","text":"Webhook API username.","title":"username"},{"location":"plugins/sonarr/configuration/connect/#buildarr_sonarr.config.connect.WebhookConnection.password","text":"Webhook API password.","title":"password"},{"location":"plugins/sonarr/configuration/download-clients/","text":"Download Clients # Download clients retrieve media files being tracked by Sonarr, and store them in a location Sonarr can access to manage the downloaded files. Download clients that use Usenet or BitTorrent can be configured, as well as remote path mappings and other related options. --- sonarr : settings : download_clients : enable_completed_download_handling : true redownload_failed : true delete_unmanaged : true definitions : Transmission : type : \"transmission\" host : \"transmission\" port : 9091 ... remote_path_mappings : definitions : - host : \"transmission\" remote_path : \"/remote/path\" local_path : \"/local/path\" ... enable_completed_download_handling : bool = True class-attribute instance-attribute # Automatically import completed downloads from download clients. redownload_failed : bool = True class-attribute instance-attribute # Automatically search for and attempt to download a different release. delete_unmanaged : bool = False class-attribute instance-attribute # Automatically delete download clients not defined in Buildarr. definitions : Dict [ str , Annotated [ DownloadClientType , Field ( discriminator = 'type' )]] = {} class-attribute instance-attribute # Download client definitions, for connecting with external media downloaders. remote_path_mappings = SonarrRemotePathMappingsSettingsConfig () class-attribute instance-attribute # Configuration for mapping paths on download client hosts to their counterparts on this Sonarr instance. For more information, refer to \"Configuring remote path mappings\". Note Before Sonarr can send requests to download clients, at least one Usenet or torrent indexer will need to be configured. Sonarr will then send download requests to a compatible client, or the download client the indexer has been assigned to. Configuring download clients # Download clients are defined using the following format. Here is an example of a Transmission download client being configured. --- sonarr : settings : download_clients : definitions : Transmission : # Name of the download client type : \"transmission\" # Type of download client enable : true # Enable the download client in Sonarr host : \"transmission\" port : 9091 category : \"sonarr\" # Define any other type-specific or global # download client attributes as needed. Every download client definition must have the correct type value defined, to tell Buildarr what type of download client to configure. The name of the download client definition is just a name, and has no meaning. enable can be set to False to keep the download client configured on Sonarr, but disabled so that it is inactive. The below attributes can be defined on any type of download client. enable : bool = True class-attribute instance-attribute # When True , this download client is active and Sonarr is able to send requests to it. priority : int = 1 class-attribute instance-attribute # Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority. remove_completed_downloads : bool = True class-attribute instance-attribute # Remove completed downloads from the download client history. For torrents, this happens once seeding is complete. remove_failed_downloads : bool = True class-attribute instance-attribute # Remove failed downloads from the download client history. (Usenet clients only) tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Sonarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client. Usenet download clients # These download clients retrieve media using the popular Usenet discussion and content delivery system. Download Station # Download client which uses Usenet via Download Station. type : Literal [ 'downloadstation-usenet' ] = 'downloadstation-usenet' class-attribute instance-attribute # Type value associated with this kind of download client. host : NonEmptyStr instance-attribute # Download Station host name. port : Port = 5000 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. username : NonEmptyStr instance-attribute # User name to use when authenticating with the download client. password : Password instance-attribute # Password to use to authenticate the download client user. category : Optional [ str ] = None class-attribute instance-attribute # Associate media from Sonarr with a category. Creates a [category] subdirectory in the output directory. Adding a category specific to Sonarr avoids conflicts with unrelated non-Sonarr downloads. Using a category is optional, but strongly recommended. directory : Optional [ str ] = None class-attribute instance-attribute # Optional shared folder to put downloads into. Leave blank, set to null or undefined to use the default download client location. NZBGet # NZBGet download client. type : Literal [ 'nzbget' ] = 'nzbget' class-attribute instance-attribute # Type value associated with this kind of download client. host : NonEmptyStr instance-attribute # NZBGet host name. port : Port = 5000 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : Optional [ str ] = None class-attribute instance-attribute # Adds a prefix to the NZBGet url, e.g. http://[host]:[port]/[url_base]/jsonrpc . username : NonEmptyStr instance-attribute # User name to use when authenticating with the download client. password : Password instance-attribute # Password to use to authenticate the download client user. category : Optional [ str ] = None class-attribute instance-attribute # Associate media from Sonarr with a category. Adding a category specific to Sonarr avoids conflicts with unrelated non-Sonarr downloads. Using a category is optional, but strongly recommended. recent_priority : NzbgetPriority = NzbgetPriority . normal class-attribute instance-attribute # Priority to use when grabbing episodes that aired within the last 14 days. Values: verylow low normal high veryhigh force older_priority : NzbgetPriority = NzbgetPriority . normal class-attribute instance-attribute # Priority to use when grabbing episodes that aired over 14 days ago. Values: verylow low normal high veryhigh force add_paused : bool = False class-attribute instance-attribute # Add media to the download client in the paused state. This option requires NZBGet version 16.0 or later. NZBVortex # NZBVortex download client. type : Literal [ 'nzbvortex' ] = 'nzbvortex' class-attribute instance-attribute # Type value associated with this kind of download client. host : NonEmptyStr instance-attribute # NZBVortex host name. port : Port = 4321 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : Optional [ str ] = None class-attribute instance-attribute # Adds a prefix to the NZBVortex url, e.g. http://[host]:[port]/[url_base]/api . api_key : Password instance-attribute # API key to use to authenticate with the download client. category : Optional [ str ] = None class-attribute instance-attribute # Associate media from Sonarr with a category. Adding a category specific to Sonarr avoids conflicts with unrelated non-Sonarr downloads. Using a category is optional, but strongly recommended. recent_priority : NzbvortexPriority = NzbvortexPriority . normal class-attribute instance-attribute # Priority to use when grabbing episodes that aired within the last 14 days. Values: low normal high older_priority : NzbvortexPriority = NzbvortexPriority . normal class-attribute instance-attribute # Priority to use when grabbing episodes that aired over 14 days ago. Values: low normal high Pneumatic # Download client for the Pneumatic NZB add-on for Kodi/XMBC. type : Literal [ 'pneumatic' ] = 'pneumatic' class-attribute instance-attribute # Type value associated with this kind of download client. nzb_folder : NonEmptyStr instance-attribute # Folder in which Sonarr will store .nzb files. This folder will need to be reachable from Kodi/XMBC. strm_folder : NonEmptyStr instance-attribute # Folder from which .strm files will be imported by Drone. SABnzbd # SABnzbd download client. type : Literal [ 'sabnzbd' ] = 'sabnzbd' class-attribute instance-attribute # Type value associated with this kind of download client. host : NonEmptyStr instance-attribute # SABnzbd host name. port : Port = 4321 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : Optional [ str ] = None class-attribute instance-attribute # Adds a prefix to the SABnzbd URL, e.g. http://[host]:[port]/[url_base]/api/ . api_key : Password instance-attribute # API key to use to authenticate with the download client. category : Optional [ str ] = None class-attribute instance-attribute # Associate media from Sonarr with a category. Adding a category specific to Sonarr avoids conflicts with unrelated non-Sonarr downloads. Using a category is optional, but strongly recommended. recent_priority : SabnzbdPriority = SabnzbdPriority . default class-attribute instance-attribute # Priority to use when grabbing episodes that aired within the last 14 days. Values: default paused low normal high force older_priority : SabnzbdPriority = SabnzbdPriority . default class-attribute instance-attribute # Priority to use when grabbing episodes that aired over 14 days ago. Values: default paused low normal high force Usenet Blackhole # Usenet Blackhole download client. type : Literal [ 'usenet-blackhole' ] = 'usenet-blackhole' class-attribute instance-attribute # Type value associated with this kind of download client. nzb_folder : NonEmptyStr instance-attribute # Folder in which Sonarr will store .nzb files. watch_folder : NonEmptyStr instance-attribute # Folder from which Sonarr should import completed downloads. Torrent download clients # These download clients use the BitTorrent peer-to-peer file sharing protocol to retrieve media files. Aria2 # Aria2 download client. type : Literal [ 'aria2' ] = 'aria2' class-attribute instance-attribute # Type value associated with this kind of download client. host : NonEmptyStr instance-attribute # Aria2 host name. port : Port = 6800 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. rpc_path : NonEmptyStr = '/rpc' class-attribute instance-attribute # XML RPC path in the Aria2 client URL. secret_token : Password instance-attribute # Secret token to use to authenticate with the download client. Deluge # Deluge download client. type : Literal [ 'deluge' ] = 'deluge' class-attribute instance-attribute # Type value associated with this kind of download client. host : NonEmptyStr instance-attribute # Deluge host name. port : Port = 8112 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : Optional [ str ] = None class-attribute instance-attribute # Adds a prefix to the Deluge JSON URL, e.g. http://[host]:[port]/[url_base]/json . password : Password instance-attribute # Password to use to authenticate the download client user. category : Optional [ str ] = 'tv-sonarr' class-attribute instance-attribute # Associate media from Sonarr with a category. Adding a category specific to Sonarr avoids conflicts with unrelated non-Sonarr downloads. Using a category is optional, but strongly recommended. postimport_category : Optional [ str ] = None class-attribute instance-attribute # Category for Sonarr to set after it has imported the download. Sonarr will not remove torrents in that category even if seeding has finished. Leave blank, set to null or undefined to keep the same category. recent_priority : DelugePriority = DelugePriority . last class-attribute instance-attribute # Priority to use when grabbing episodes that aired within the last 14 days. Values: last first older_priority : DelugePriority = DelugePriority . last class-attribute instance-attribute # Priority to use when grabbing episodes that aired over 14 days ago. Values: last first Download Station # Download client which uses torrents via Download Station. type : Literal [ 'downloadstation-torrent' ] = 'downloadstation-torrent' class-attribute instance-attribute # Type value associated with this kind of download client. host : NonEmptyStr instance-attribute # Download Station host name. port : Port = 5000 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. username : NonEmptyStr instance-attribute # User name to use when authenticating with the download client. password : Password instance-attribute # Password to use to authenticate the download client user. category : Optional [ str ] = None class-attribute instance-attribute # Associate media from Sonarr with a category. Creates a [category] subdirectory in the output directory. Adding a category specific to Sonarr avoids conflicts with unrelated non-Sonarr downloads. Using a category is optional, but strongly recommended. directory : Optional [ str ] = None class-attribute instance-attribute # Optional shared folder to put downloads into. Leave blank, set to null or undefined to use the default download client location. Flood # Flood download client. type : Literal [ 'flood' ] = 'flood' class-attribute instance-attribute # Type value associated with this kind of download client. host : NonEmptyStr instance-attribute # Flood host name. port : Port = 3000 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : Optional [ str ] = None class-attribute instance-attribute # Optionally adds a prefix to Flood API, such as [protocol]://[host]:[port]/[url_base]api . username : NonEmptyStr instance-attribute # User name to use when authenticating with the download client. password : Password instance-attribute # Password to use to authenticate the download client user. destination : Optional [ str ] = None class-attribute instance-attribute # Manually specified download destination. flood_tags : Set [ NonEmptyStr ] = { 'sonarr' } class-attribute instance-attribute # Initial tags of a download within Flood. To be recognized, a download must have all initial tags. This avoids conflicts with unrelated downloads. postimport_tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Tags to append within Flood after a download has been imported into Sonarr. additional_tags : Set [ FloodMediaTag ] = set () class-attribute instance-attribute # Adds properties of media as tags within Flood. start_on_add : bool = True class-attribute instance-attribute # Immediately start download once the media has been added to the client. Hadouken # Hadouken download client. type : Literal [ 'hadouken' ] = 'hadouken' class-attribute instance-attribute # Type value associated with this kind of download client. host : NonEmptyStr instance-attribute # Hadouken host name. port : Port = 7070 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : Optional [ str ] = None class-attribute instance-attribute # Adds a prefix to the Hadouken url, e.g. http://[host]:[port]/[url_base]/api . username : NonEmptyStr instance-attribute # User name to use when authenticating with the download client. password : Password instance-attribute # Password to use to authenticate the download client user. category : NonEmptyStr = 'sonarr-tv' class-attribute instance-attribute # Associate media from Sonarr with a category. Adding a category specific to Sonarr avoids conflicts with unrelated non-Sonarr downloads. Using a category is optional, but strongly recommended. qBittorrent # qBittorrent download client. type : Literal [ 'qbittorrent' ] = 'qbittorrent' class-attribute instance-attribute # Type value associated with this kind of download client. host : NonEmptyStr instance-attribute # qBittorrent host name. port : Port = 8080 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : Optional [ str ] = None class-attribute instance-attribute # Adds a prefix to the qBittorrent URL, e.g. http://[host]:[port]/[url_base]/api . username : NonEmptyStr instance-attribute # User name to use when authenticating with the download client. password : Password instance-attribute # Password to use to authenticate the download client user. category : Optional [ str ] = 'tv-sonarr' class-attribute instance-attribute # Associate media from Sonarr with a category. Adding a category specific to Sonarr avoids conflicts with unrelated non-Sonarr downloads. Using a category is optional, but strongly recommended. postimport_category : Optional [ str ] = None class-attribute instance-attribute # Category for Sonarr to set after it has imported the download. Sonarr will not remove torrents in that category even if seeding has finished. Leave blank, set to null or undefined to keep the same category. recent_priority : QbittorrentPriority = QbittorrentPriority . last class-attribute instance-attribute # Priority to use when grabbing episodes that aired within the last 14 days. Values: last first older_priority : QbittorrentPriority = QbittorrentPriority . last class-attribute instance-attribute # Priority to use when grabbing episodes that aired over 14 days ago. Values: last first initial_state : QbittorrentState = QbittorrentState . start class-attribute instance-attribute # Initial state for torrents added to qBittorrent. Note that forced torrents do not abide by seed restrictions. sequential_order : bool = False class-attribute instance-attribute # Download files in sequential order. This option requires qBittorrent version 4.1.0 or later. first_and_last_first : bool = False class-attribute instance-attribute # Download first and last pieces of a file first. This option requires qBittorrent version 4.1.0 or later. RTorrent (ruTorrent) # RTorrent (ruTorrent) download client. type : Literal [ 'rtorrent' , 'rutorrent' ] = 'rtorrent' class-attribute instance-attribute # Type value associated with this kind of download client. host : NonEmptyStr instance-attribute # RTorrent host name. port : Port = 8080 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : NonEmptyStr = 'RPC2' class-attribute instance-attribute # Path to the XMLRPC endpoint, e.g. http(s)://[host]:[port]/[url_base] . When using RTorrent this usually is RPC2 or plugins/rpc/rpc.php . username : NonEmptyStr instance-attribute # User name to use when authenticating with the download client. password : Password instance-attribute # Password to use to authenticate the download client user. category : Optional [ str ] = 'tv-sonarr' class-attribute instance-attribute # Associate media from Sonarr with a category. Adding a category specific to Sonarr avoids conflicts with unrelated non-Sonarr downloads. Using a category is optional, but strongly recommended. postimport_category : Optional [ str ] = None class-attribute instance-attribute # Category for Sonarr to set after it has imported the download. Sonarr will not remove torrents in that category even if seeding has finished. Leave blank, set to null or undefined to keep the same category. recent_priority : RtorrentPriority = RtorrentPriority . normal class-attribute instance-attribute # Priority to use when grabbing episodes that aired within the last 14 days. Values: verylow low normal high older_priority : RtorrentPriority = RtorrentPriority . normal class-attribute instance-attribute # Priority to use when grabbing episodes that aired over 14 days ago. Values: verylow low normal high add_stopped : bool = False class-attribute instance-attribute # Enabling will add torrents and magnets to RTorrent in a stopped state. This may break magnet files. Torrent Blackhole # Torrent Blackhole download client. type : Literal [ 'torrent-blackhole' ] = 'torrent-blackhole' class-attribute instance-attribute # Type value associated with this kind of download client. torrent_folder : NonEmptyStr instance-attribute # Folder in which Sonarr will store .torrent files. watch_folder : NonEmptyStr instance-attribute # Folder from which Sonarr should import completed downloads. save_magnet_files : bool = False class-attribute instance-attribute # Save the magnet link if no .torrent file is available. Only useful if the download client supports magnets saved to a file. magnet_file_extension : NonEmptyStr = '.magnet' class-attribute instance-attribute # Extension to use for magnet links. read_only : bool = True class-attribute instance-attribute # Instead of moving files, this will instruct Sonarr to copy or hard link (depending on settings/system configuration). Transmission/Vuze # Transmission and Vuze use the same configuration parameters. To use Transmission, set the type attribute in the download client to transmission . To use Vuze, set the type attribute in the download client to vuze . Configuration options common to both Transmission and Vuze download clients: host : NonEmptyStr instance-attribute # Transmission/Vuze host name. port : Port = 9091 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : NonEmptyStr = '/transmission/' class-attribute instance-attribute # Adds a prefix to the Transmission/Vuze RPC url, e.g. http://[host]:[port][url_base]rpc . This is set by default in most clients to /transmission/ . username : Optional [ str ] = None class-attribute instance-attribute # User name to use when authenticating with the download client, if required. password : Optional [ Password ] = None class-attribute instance-attribute # Password to use to authenticate the download client user, if required. category : Optional [ str ] = None class-attribute instance-attribute # Associate media from Sonarr with a category. Creates a [category] subdirectory in the output directory. Adding a category specific to Sonarr avoids conflicts with unrelated non-Sonarr downloads. Using a category is optional, but strongly recommended. category and directory are mutually exclusive, only one of them can be set at a time. directory : Optional [ str ] = None class-attribute instance-attribute # Optional shared folder to put downloads into. Leave blank, set to null or undefined to use the default download client location. category and directory are mutually exclusive, only one of them can be set at a time. recent_priority : TransmissionPriority = TransmissionPriority . last class-attribute instance-attribute # Priority to use when grabbing episodes that aired within the last 14 days. Values: last first older_priority : TransmissionPriority = TransmissionPriority . last class-attribute instance-attribute # Priority to use when grabbing episodes that aired over 14 days ago. Values: last first add_paused : bool = False class-attribute instance-attribute # Add media to the download client in the Paused state. uTorrent # uTorrent download client. type : Literal [ 'utorrent' ] = 'utorrent' class-attribute instance-attribute # Type value associated with this kind of download client. host : NonEmptyStr instance-attribute # uTorrent host name. port : Port = 8080 class-attribute instance-attribute # Download client access port. use_ssl : bool = False class-attribute instance-attribute # Use a secure connection when connecting to the download client. url_base : Optional [ str ] = None class-attribute instance-attribute # Adds a prefix to the uTorrent URL, e.g. http://[host]:[port]/[url_base]/api . username : NonEmptyStr instance-attribute # User name to use when authenticating with the download client. password : Password instance-attribute # Password to use to authenticate the download client user. category : Optional [ str ] = 'tv-sonarr' class-attribute instance-attribute # Associate media from Sonarr with a category. Adding a category specific to Sonarr avoids conflicts with unrelated non-Sonarr downloads. Using a category is optional, but strongly recommended. postimport_category : Optional [ str ] = None class-attribute instance-attribute # Category for Sonarr to set after it has imported the download. Sonarr will not remove torrents in that category even if seeding has finished. Leave blank, set to null or undefined to keep the same category. recent_priority : UtorrentPriority = UtorrentPriority . last class-attribute instance-attribute # Priority to use when grabbing episodes that aired within the last 14 days. Values: last first older_priority : UtorrentPriority = UtorrentPriority . last class-attribute instance-attribute # Priority to use when grabbing episodes that aired over 14 days ago. Values: last first initial_state : UtorrentState = UtorrentState . start class-attribute instance-attribute # Initial state for torrents added to uTorrent. Configuring remote path mappings # Remote path mappings are used to associate a path on a download client remote host with its associated path on the local Sonarr instance. The main use case for this is when Sonarr and the download client are not running on the same system, or when Docker is used to isolate these services and the mountpoints for media locations are not consistent between the containers. sonarr : settings : download_clients : definitions : Transmission : type : \"transmission\" host : \"transmission\" port : 9091 remote_path_mappings : delete_unmanaged : false # Optional definitions : - host : \"transmission\" remote_path : \"/remote/path\" local_path : \"/local/path\" ensure : \"present\" # Optional Remote path mappings can be difficult to properly configure. TRaSH-Guides provides an excellent guide that explains what they are for, and how to use them. delete_unmanaged : bool = False class-attribute instance-attribute # Automatically delete remote path mappings not configured in Buildarr. Deleting existing remote path mappings can cause problems with a running Sonarr instance. Think carefully before you enable this option. definitions : List [ RemotePathMapping ] = [] class-attribute instance-attribute # Remote path mapping definitions. Remote path mapping parameters # Remote path mapping definitions themselves are relatively simple. They can be configured with a desired ensure state, however, which Buildarr uses to control whether to create or delete the remote path mapping. Ensure this value is set appropriately. host : NonEmptyStr instance-attribute # The name of the host, as specified for the remote download client. remote_path : NonEmptyStr instance-attribute # Root path to the directory that the download client accesses. local_path : NonEmptyStr instance-attribute # The path that Sonarr should use to access the remote path locally. ensure : Ensure = Ensure . present class-attribute instance-attribute # Desired state for this resource. If set to present , the resource is created on the remote instance if it does not exist. If set to absent , the resource will be destroyed on the remote instance if it exists. This takes effect even if the delete_unmanaged is set to False for all remote path mappings.","title":"Download Clients"},{"location":"plugins/sonarr/configuration/download-clients/#download-clients","text":"Download clients retrieve media files being tracked by Sonarr, and store them in a location Sonarr can access to manage the downloaded files. Download clients that use Usenet or BitTorrent can be configured, as well as remote path mappings and other related options. --- sonarr : settings : download_clients : enable_completed_download_handling : true redownload_failed : true delete_unmanaged : true definitions : Transmission : type : \"transmission\" host : \"transmission\" port : 9091 ... remote_path_mappings : definitions : - host : \"transmission\" remote_path : \"/remote/path\" local_path : \"/local/path\" ...","title":"Download Clients"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.SonarrDownloadClientsSettingsConfig.enable_completed_download_handling","text":"Automatically import completed downloads from download clients.","title":"enable_completed_download_handling"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.SonarrDownloadClientsSettingsConfig.redownload_failed","text":"Automatically search for and attempt to download a different release.","title":"redownload_failed"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.SonarrDownloadClientsSettingsConfig.delete_unmanaged","text":"Automatically delete download clients not defined in Buildarr.","title":"delete_unmanaged"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.SonarrDownloadClientsSettingsConfig.definitions","text":"Download client definitions, for connecting with external media downloaders.","title":"definitions"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.SonarrDownloadClientsSettingsConfig.remote_path_mappings","text":"Configuration for mapping paths on download client hosts to their counterparts on this Sonarr instance. For more information, refer to \"Configuring remote path mappings\". Note Before Sonarr can send requests to download clients, at least one Usenet or torrent indexer will need to be configured. Sonarr will then send download requests to a compatible client, or the download client the indexer has been assigned to.","title":"remote_path_mappings"},{"location":"plugins/sonarr/configuration/download-clients/#configuring-download-clients","text":"Download clients are defined using the following format. Here is an example of a Transmission download client being configured. --- sonarr : settings : download_clients : definitions : Transmission : # Name of the download client type : \"transmission\" # Type of download client enable : true # Enable the download client in Sonarr host : \"transmission\" port : 9091 category : \"sonarr\" # Define any other type-specific or global # download client attributes as needed. Every download client definition must have the correct type value defined, to tell Buildarr what type of download client to configure. The name of the download client definition is just a name, and has no meaning. enable can be set to False to keep the download client configured on Sonarr, but disabled so that it is inactive. The below attributes can be defined on any type of download client.","title":"Configuring download clients"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DownloadClient.enable","text":"When True , this download client is active and Sonarr is able to send requests to it.","title":"enable"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DownloadClient.priority","text":"Download client priority. Clients with a lower value are prioritised. Round-robin is used for clients with the same priority.","title":"priority"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DownloadClient.remove_completed_downloads","text":"Remove completed downloads from the download client history. For torrents, this happens once seeding is complete.","title":"remove_completed_downloads"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DownloadClient.remove_failed_downloads","text":"Remove failed downloads from the download client history. (Usenet clients only)","title":"remove_failed_downloads"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DownloadClient.tags","text":"Sonarr tags to assign to the download clients. Only media under those tags will be assigned to this client. If no tags are assigned, all media can use the client.","title":"tags"},{"location":"plugins/sonarr/configuration/download-clients/#usenet-download-clients","text":"These download clients retrieve media using the popular Usenet discussion and content delivery system.","title":"Usenet download clients"},{"location":"plugins/sonarr/configuration/download-clients/#download-station","text":"Download client which uses Usenet via Download Station.","title":"Download Station"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DownloadstationUsenetDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DownloadstationUsenetDownloadClient.host","text":"Download Station host name.","title":"host"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DownloadstationUsenetDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DownloadstationUsenetDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DownloadstationUsenetDownloadClient.username","text":"User name to use when authenticating with the download client.","title":"username"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DownloadstationUsenetDownloadClient.password","text":"Password to use to authenticate the download client user.","title":"password"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DownloadstationUsenetDownloadClient.category","text":"Associate media from Sonarr with a category. Creates a [category] subdirectory in the output directory. Adding a category specific to Sonarr avoids conflicts with unrelated non-Sonarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DownloadstationUsenetDownloadClient.directory","text":"Optional shared folder to put downloads into. Leave blank, set to null or undefined to use the default download client location.","title":"directory"},{"location":"plugins/sonarr/configuration/download-clients/#nzbget","text":"NZBGet download client.","title":"NZBGet"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.NzbgetDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.NzbgetDownloadClient.host","text":"NZBGet host name.","title":"host"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.NzbgetDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.NzbgetDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.NzbgetDownloadClient.url_base","text":"Adds a prefix to the NZBGet url, e.g. http://[host]:[port]/[url_base]/jsonrpc .","title":"url_base"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.NzbgetDownloadClient.username","text":"User name to use when authenticating with the download client.","title":"username"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.NzbgetDownloadClient.password","text":"Password to use to authenticate the download client user.","title":"password"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.NzbgetDownloadClient.category","text":"Associate media from Sonarr with a category. Adding a category specific to Sonarr avoids conflicts with unrelated non-Sonarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.NzbgetDownloadClient.recent_priority","text":"Priority to use when grabbing episodes that aired within the last 14 days. Values: verylow low normal high veryhigh force","title":"recent_priority"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.NzbgetDownloadClient.older_priority","text":"Priority to use when grabbing episodes that aired over 14 days ago. Values: verylow low normal high veryhigh force","title":"older_priority"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.NzbgetDownloadClient.add_paused","text":"Add media to the download client in the paused state. This option requires NZBGet version 16.0 or later.","title":"add_paused"},{"location":"plugins/sonarr/configuration/download-clients/#nzbvortex","text":"NZBVortex download client.","title":"NZBVortex"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.NzbvortexDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.NzbvortexDownloadClient.host","text":"NZBVortex host name.","title":"host"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.NzbvortexDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.NzbvortexDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.NzbvortexDownloadClient.url_base","text":"Adds a prefix to the NZBVortex url, e.g. http://[host]:[port]/[url_base]/api .","title":"url_base"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.NzbvortexDownloadClient.api_key","text":"API key to use to authenticate with the download client.","title":"api_key"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.NzbvortexDownloadClient.category","text":"Associate media from Sonarr with a category. Adding a category specific to Sonarr avoids conflicts with unrelated non-Sonarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.NzbvortexDownloadClient.recent_priority","text":"Priority to use when grabbing episodes that aired within the last 14 days. Values: low normal high","title":"recent_priority"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.NzbvortexDownloadClient.older_priority","text":"Priority to use when grabbing episodes that aired over 14 days ago. Values: low normal high","title":"older_priority"},{"location":"plugins/sonarr/configuration/download-clients/#pneumatic","text":"Download client for the Pneumatic NZB add-on for Kodi/XMBC.","title":"Pneumatic"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.PneumaticDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.PneumaticDownloadClient.nzb_folder","text":"Folder in which Sonarr will store .nzb files. This folder will need to be reachable from Kodi/XMBC.","title":"nzb_folder"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.PneumaticDownloadClient.strm_folder","text":"Folder from which .strm files will be imported by Drone.","title":"strm_folder"},{"location":"plugins/sonarr/configuration/download-clients/#sabnzbd","text":"SABnzbd download client.","title":"SABnzbd"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.SabnzbdDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.SabnzbdDownloadClient.host","text":"SABnzbd host name.","title":"host"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.SabnzbdDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.SabnzbdDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.SabnzbdDownloadClient.url_base","text":"Adds a prefix to the SABnzbd URL, e.g. http://[host]:[port]/[url_base]/api/ .","title":"url_base"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.SabnzbdDownloadClient.api_key","text":"API key to use to authenticate with the download client.","title":"api_key"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.SabnzbdDownloadClient.category","text":"Associate media from Sonarr with a category. Adding a category specific to Sonarr avoids conflicts with unrelated non-Sonarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.SabnzbdDownloadClient.recent_priority","text":"Priority to use when grabbing episodes that aired within the last 14 days. Values: default paused low normal high force","title":"recent_priority"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.SabnzbdDownloadClient.older_priority","text":"Priority to use when grabbing episodes that aired over 14 days ago. Values: default paused low normal high force","title":"older_priority"},{"location":"plugins/sonarr/configuration/download-clients/#usenet-blackhole","text":"Usenet Blackhole download client.","title":"Usenet Blackhole"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.UsenetBlackholeDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.UsenetBlackholeDownloadClient.nzb_folder","text":"Folder in which Sonarr will store .nzb files.","title":"nzb_folder"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.UsenetBlackholeDownloadClient.watch_folder","text":"Folder from which Sonarr should import completed downloads.","title":"watch_folder"},{"location":"plugins/sonarr/configuration/download-clients/#torrent-download-clients","text":"These download clients use the BitTorrent peer-to-peer file sharing protocol to retrieve media files.","title":"Torrent download clients"},{"location":"plugins/sonarr/configuration/download-clients/#aria2","text":"Aria2 download client.","title":"Aria2"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.Aria2DownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.Aria2DownloadClient.host","text":"Aria2 host name.","title":"host"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.Aria2DownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.Aria2DownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.Aria2DownloadClient.rpc_path","text":"XML RPC path in the Aria2 client URL.","title":"rpc_path"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.Aria2DownloadClient.secret_token","text":"Secret token to use to authenticate with the download client.","title":"secret_token"},{"location":"plugins/sonarr/configuration/download-clients/#deluge","text":"Deluge download client.","title":"Deluge"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DelugeDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DelugeDownloadClient.host","text":"Deluge host name.","title":"host"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DelugeDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DelugeDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DelugeDownloadClient.url_base","text":"Adds a prefix to the Deluge JSON URL, e.g. http://[host]:[port]/[url_base]/json .","title":"url_base"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DelugeDownloadClient.password","text":"Password to use to authenticate the download client user.","title":"password"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DelugeDownloadClient.category","text":"Associate media from Sonarr with a category. Adding a category specific to Sonarr avoids conflicts with unrelated non-Sonarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DelugeDownloadClient.postimport_category","text":"Category for Sonarr to set after it has imported the download. Sonarr will not remove torrents in that category even if seeding has finished. Leave blank, set to null or undefined to keep the same category.","title":"postimport_category"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DelugeDownloadClient.recent_priority","text":"Priority to use when grabbing episodes that aired within the last 14 days. Values: last first","title":"recent_priority"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DelugeDownloadClient.older_priority","text":"Priority to use when grabbing episodes that aired over 14 days ago. Values: last first","title":"older_priority"},{"location":"plugins/sonarr/configuration/download-clients/#download-station_1","text":"Download client which uses torrents via Download Station.","title":"Download Station"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DownloadstationTorrentDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DownloadstationTorrentDownloadClient.host","text":"Download Station host name.","title":"host"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DownloadstationTorrentDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DownloadstationTorrentDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DownloadstationTorrentDownloadClient.username","text":"User name to use when authenticating with the download client.","title":"username"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DownloadstationTorrentDownloadClient.password","text":"Password to use to authenticate the download client user.","title":"password"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DownloadstationTorrentDownloadClient.category","text":"Associate media from Sonarr with a category. Creates a [category] subdirectory in the output directory. Adding a category specific to Sonarr avoids conflicts with unrelated non-Sonarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.DownloadstationTorrentDownloadClient.directory","text":"Optional shared folder to put downloads into. Leave blank, set to null or undefined to use the default download client location.","title":"directory"},{"location":"plugins/sonarr/configuration/download-clients/#flood","text":"Flood download client.","title":"Flood"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.FloodDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.FloodDownloadClient.host","text":"Flood host name.","title":"host"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.FloodDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.FloodDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.FloodDownloadClient.url_base","text":"Optionally adds a prefix to Flood API, such as [protocol]://[host]:[port]/[url_base]api .","title":"url_base"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.FloodDownloadClient.username","text":"User name to use when authenticating with the download client.","title":"username"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.FloodDownloadClient.password","text":"Password to use to authenticate the download client user.","title":"password"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.FloodDownloadClient.destination","text":"Manually specified download destination.","title":"destination"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.FloodDownloadClient.flood_tags","text":"Initial tags of a download within Flood. To be recognized, a download must have all initial tags. This avoids conflicts with unrelated downloads.","title":"flood_tags"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.FloodDownloadClient.postimport_tags","text":"Tags to append within Flood after a download has been imported into Sonarr.","title":"postimport_tags"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.FloodDownloadClient.additional_tags","text":"Adds properties of media as tags within Flood.","title":"additional_tags"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.FloodDownloadClient.start_on_add","text":"Immediately start download once the media has been added to the client.","title":"start_on_add"},{"location":"plugins/sonarr/configuration/download-clients/#hadouken","text":"Hadouken download client.","title":"Hadouken"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.HadoukenDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.HadoukenDownloadClient.host","text":"Hadouken host name.","title":"host"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.HadoukenDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.HadoukenDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.HadoukenDownloadClient.url_base","text":"Adds a prefix to the Hadouken url, e.g. http://[host]:[port]/[url_base]/api .","title":"url_base"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.HadoukenDownloadClient.username","text":"User name to use when authenticating with the download client.","title":"username"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.HadoukenDownloadClient.password","text":"Password to use to authenticate the download client user.","title":"password"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.HadoukenDownloadClient.category","text":"Associate media from Sonarr with a category. Adding a category specific to Sonarr avoids conflicts with unrelated non-Sonarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/sonarr/configuration/download-clients/#qbittorrent","text":"qBittorrent download client.","title":"qBittorrent"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.QbittorrentDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.QbittorrentDownloadClient.host","text":"qBittorrent host name.","title":"host"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.QbittorrentDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.QbittorrentDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.QbittorrentDownloadClient.url_base","text":"Adds a prefix to the qBittorrent URL, e.g. http://[host]:[port]/[url_base]/api .","title":"url_base"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.QbittorrentDownloadClient.username","text":"User name to use when authenticating with the download client.","title":"username"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.QbittorrentDownloadClient.password","text":"Password to use to authenticate the download client user.","title":"password"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.QbittorrentDownloadClient.category","text":"Associate media from Sonarr with a category. Adding a category specific to Sonarr avoids conflicts with unrelated non-Sonarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.QbittorrentDownloadClient.postimport_category","text":"Category for Sonarr to set after it has imported the download. Sonarr will not remove torrents in that category even if seeding has finished. Leave blank, set to null or undefined to keep the same category.","title":"postimport_category"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.QbittorrentDownloadClient.recent_priority","text":"Priority to use when grabbing episodes that aired within the last 14 days. Values: last first","title":"recent_priority"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.QbittorrentDownloadClient.older_priority","text":"Priority to use when grabbing episodes that aired over 14 days ago. Values: last first","title":"older_priority"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.QbittorrentDownloadClient.initial_state","text":"Initial state for torrents added to qBittorrent. Note that forced torrents do not abide by seed restrictions.","title":"initial_state"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.QbittorrentDownloadClient.sequential_order","text":"Download files in sequential order. This option requires qBittorrent version 4.1.0 or later.","title":"sequential_order"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.QbittorrentDownloadClient.first_and_last_first","text":"Download first and last pieces of a file first. This option requires qBittorrent version 4.1.0 or later.","title":"first_and_last_first"},{"location":"plugins/sonarr/configuration/download-clients/#rtorrent-rutorrent","text":"RTorrent (ruTorrent) download client.","title":"RTorrent (ruTorrent)"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.RtorrentDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.RtorrentDownloadClient.host","text":"RTorrent host name.","title":"host"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.RtorrentDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.RtorrentDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.RtorrentDownloadClient.url_base","text":"Path to the XMLRPC endpoint, e.g. http(s)://[host]:[port]/[url_base] . When using RTorrent this usually is RPC2 or plugins/rpc/rpc.php .","title":"url_base"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.RtorrentDownloadClient.username","text":"User name to use when authenticating with the download client.","title":"username"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.RtorrentDownloadClient.password","text":"Password to use to authenticate the download client user.","title":"password"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.RtorrentDownloadClient.category","text":"Associate media from Sonarr with a category. Adding a category specific to Sonarr avoids conflicts with unrelated non-Sonarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.RtorrentDownloadClient.postimport_category","text":"Category for Sonarr to set after it has imported the download. Sonarr will not remove torrents in that category even if seeding has finished. Leave blank, set to null or undefined to keep the same category.","title":"postimport_category"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.RtorrentDownloadClient.recent_priority","text":"Priority to use when grabbing episodes that aired within the last 14 days. Values: verylow low normal high","title":"recent_priority"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.RtorrentDownloadClient.older_priority","text":"Priority to use when grabbing episodes that aired over 14 days ago. Values: verylow low normal high","title":"older_priority"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.RtorrentDownloadClient.add_stopped","text":"Enabling will add torrents and magnets to RTorrent in a stopped state. This may break magnet files.","title":"add_stopped"},{"location":"plugins/sonarr/configuration/download-clients/#torrent-blackhole","text":"Torrent Blackhole download client.","title":"Torrent Blackhole"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.TorrentBlackholeDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.TorrentBlackholeDownloadClient.torrent_folder","text":"Folder in which Sonarr will store .torrent files.","title":"torrent_folder"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.TorrentBlackholeDownloadClient.watch_folder","text":"Folder from which Sonarr should import completed downloads.","title":"watch_folder"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.TorrentBlackholeDownloadClient.save_magnet_files","text":"Save the magnet link if no .torrent file is available. Only useful if the download client supports magnets saved to a file.","title":"save_magnet_files"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.TorrentBlackholeDownloadClient.magnet_file_extension","text":"Extension to use for magnet links.","title":"magnet_file_extension"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.TorrentBlackholeDownloadClient.read_only","text":"Instead of moving files, this will instruct Sonarr to copy or hard link (depending on settings/system configuration).","title":"read_only"},{"location":"plugins/sonarr/configuration/download-clients/#transmissionvuze","text":"Transmission and Vuze use the same configuration parameters. To use Transmission, set the type attribute in the download client to transmission . To use Vuze, set the type attribute in the download client to vuze . Configuration options common to both Transmission and Vuze download clients:","title":"Transmission/Vuze"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.TransmissionDownloadClientBase.host","text":"Transmission/Vuze host name.","title":"host"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.TransmissionDownloadClientBase.port","text":"Download client access port.","title":"port"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.TransmissionDownloadClientBase.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.TransmissionDownloadClientBase.url_base","text":"Adds a prefix to the Transmission/Vuze RPC url, e.g. http://[host]:[port][url_base]rpc . This is set by default in most clients to /transmission/ .","title":"url_base"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.TransmissionDownloadClientBase.username","text":"User name to use when authenticating with the download client, if required.","title":"username"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.TransmissionDownloadClientBase.password","text":"Password to use to authenticate the download client user, if required.","title":"password"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.TransmissionDownloadClientBase.category","text":"Associate media from Sonarr with a category. Creates a [category] subdirectory in the output directory. Adding a category specific to Sonarr avoids conflicts with unrelated non-Sonarr downloads. Using a category is optional, but strongly recommended. category and directory are mutually exclusive, only one of them can be set at a time.","title":"category"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.TransmissionDownloadClientBase.directory","text":"Optional shared folder to put downloads into. Leave blank, set to null or undefined to use the default download client location. category and directory are mutually exclusive, only one of them can be set at a time.","title":"directory"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.TransmissionDownloadClientBase.recent_priority","text":"Priority to use when grabbing episodes that aired within the last 14 days. Values: last first","title":"recent_priority"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.TransmissionDownloadClientBase.older_priority","text":"Priority to use when grabbing episodes that aired over 14 days ago. Values: last first","title":"older_priority"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.TransmissionDownloadClientBase.add_paused","text":"Add media to the download client in the Paused state.","title":"add_paused"},{"location":"plugins/sonarr/configuration/download-clients/#utorrent","text":"uTorrent download client.","title":"uTorrent"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.UtorrentDownloadClient.type","text":"Type value associated with this kind of download client.","title":"type"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.UtorrentDownloadClient.host","text":"uTorrent host name.","title":"host"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.UtorrentDownloadClient.port","text":"Download client access port.","title":"port"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.UtorrentDownloadClient.use_ssl","text":"Use a secure connection when connecting to the download client.","title":"use_ssl"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.UtorrentDownloadClient.url_base","text":"Adds a prefix to the uTorrent URL, e.g. http://[host]:[port]/[url_base]/api .","title":"url_base"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.UtorrentDownloadClient.username","text":"User name to use when authenticating with the download client.","title":"username"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.UtorrentDownloadClient.password","text":"Password to use to authenticate the download client user.","title":"password"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.UtorrentDownloadClient.category","text":"Associate media from Sonarr with a category. Adding a category specific to Sonarr avoids conflicts with unrelated non-Sonarr downloads. Using a category is optional, but strongly recommended.","title":"category"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.UtorrentDownloadClient.postimport_category","text":"Category for Sonarr to set after it has imported the download. Sonarr will not remove torrents in that category even if seeding has finished. Leave blank, set to null or undefined to keep the same category.","title":"postimport_category"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.UtorrentDownloadClient.recent_priority","text":"Priority to use when grabbing episodes that aired within the last 14 days. Values: last first","title":"recent_priority"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.UtorrentDownloadClient.older_priority","text":"Priority to use when grabbing episodes that aired over 14 days ago. Values: last first","title":"older_priority"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.download_clients.UtorrentDownloadClient.initial_state","text":"Initial state for torrents added to uTorrent.","title":"initial_state"},{"location":"plugins/sonarr/configuration/download-clients/#configuring-remote-path-mappings","text":"Remote path mappings are used to associate a path on a download client remote host with its associated path on the local Sonarr instance. The main use case for this is when Sonarr and the download client are not running on the same system, or when Docker is used to isolate these services and the mountpoints for media locations are not consistent between the containers. sonarr : settings : download_clients : definitions : Transmission : type : \"transmission\" host : \"transmission\" port : 9091 remote_path_mappings : delete_unmanaged : false # Optional definitions : - host : \"transmission\" remote_path : \"/remote/path\" local_path : \"/local/path\" ensure : \"present\" # Optional Remote path mappings can be difficult to properly configure. TRaSH-Guides provides an excellent guide that explains what they are for, and how to use them.","title":"Configuring remote path mappings"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.remote_path_mappings.SonarrRemotePathMappingsSettingsConfig.delete_unmanaged","text":"Automatically delete remote path mappings not configured in Buildarr. Deleting existing remote path mappings can cause problems with a running Sonarr instance. Think carefully before you enable this option.","title":"delete_unmanaged"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.remote_path_mappings.SonarrRemotePathMappingsSettingsConfig.definitions","text":"Remote path mapping definitions.","title":"definitions"},{"location":"plugins/sonarr/configuration/download-clients/#remote-path-mapping-parameters","text":"Remote path mapping definitions themselves are relatively simple. They can be configured with a desired ensure state, however, which Buildarr uses to control whether to create or delete the remote path mapping. Ensure this value is set appropriately.","title":"Remote path mapping parameters"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.remote_path_mappings.RemotePathMapping.host","text":"The name of the host, as specified for the remote download client.","title":"host"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.remote_path_mappings.RemotePathMapping.remote_path","text":"Root path to the directory that the download client accesses.","title":"remote_path"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.remote_path_mappings.RemotePathMapping.local_path","text":"The path that Sonarr should use to access the remote path locally.","title":"local_path"},{"location":"plugins/sonarr/configuration/download-clients/#buildarr_sonarr.config.download_clients.remote_path_mappings.RemotePathMapping.ensure","text":"Desired state for this resource. If set to present , the resource is created on the remote instance if it does not exist. If set to absent , the resource will be destroyed on the remote instance if it exists. This takes effect even if the delete_unmanaged is set to False for all remote path mappings.","title":"ensure"},{"location":"plugins/sonarr/configuration/general/","text":"General # General configuration for Sonarr are separated by category. sonarr : settings : general : host : bind_address : \"*\" port : 8989 url_base : null instance_name : \"Sonarr (Example)\" security : authentication : \"none\" proxy : enable : false logging : log_level : \"INFO\" analytics : send_anonymous_usage_data : false updates : branch : \"main\" automatic : false mechanism : \"docker\" backup : folder : \"Backups\" interval : 7 retention : 28 Some of the settings may affect Buildarr's ability to connect with the Sonarr instance. Take care when changing these settings. Host # Sonarr instance connection and name configuration. Many of these settings configure Sonarr's external connection interface. If they are changed, the settings Buildarr uses to connect with this Sonarr instance may need to be updated, so take care when modifying them. Changing any of these settings require a restart of Sonarr to take effect. bind_address : Union [ Literal [ '*' ], IPv4Address ] = '*' class-attribute instance-attribute # Bind address for Sonarr. Set to an IPv4 address bound to a local interface or * to bind on all interfaces. Unless you run Sonarr directly on a host machine (i.e. not via Docker) and want Sonarr to only be available on a specific network or interface, this generally should be left untouched. port : Port = 8989 class-attribute instance-attribute # Unencrypted (HTTP) listening port for Sonarr. If Sonarr is being run via Docker in the default bridge mode, this setting shouldn't be changed. Instead, change the external port it is bound to using --publish <port number>:8989 . ssl_port : Port = 9898 class-attribute instance-attribute # Encrypted (HTTPS) listening port for Sonarr. If Sonarr is being run via Docker in the default bridge mode, this setting shouldn't be changed. Instead, change the external port it is bound to using --publish <port number>:9898 . use_ssl : bool = False class-attribute instance-attribute # Enable the encrypted (HTTPS) listening port in Sonarr. As Sonarr only supports self-signed certificates, it is recommended to put Sonarr behind a HTTPS-terminating reverse proxy such as Nginx, Caddy or Traefik. url_base : Optional [ str ] = None class-attribute instance-attribute # Add a prefix to all Sonarr URLs, e.g. http://localhost:8989/<url_base>/settings/general . Generally used to accommodate reverse proxies where Sonarr is assigned to a subfolder, e.g. https://example.com/sonarr . instance_name : NonEmptyStr = 'Sonarr' class-attribute instance-attribute # Instance name in the browser tab and in syslog. Security # Sonarr instance security (authentication) settings. authentication : AuthenticationMethod = AuthenticationMethod . none class-attribute instance-attribute # Authentication method for logging into Sonarr. By default, do not require authentication. Values: none - No authentication basic - Authentication using HTTP basic auth (browser popup) form - Authentication using a login page Requires a restart of Sonarr to take effect. username : Optional [ str ] = None class-attribute instance-attribute # Username for the administrator user. Required if authentication is enabled. Requires a restart of Sonarr to take effect. password : Optional [ Password ] = None class-attribute instance-attribute # Password for the administrator user. Required if authentication is enabled. Requires a restart of Sonarr to take effect. certificate_validation : CertificateValidation = CertificateValidation . enabled class-attribute instance-attribute # Change how strict HTTPS certification validation is. Do not change unless you understand the risks. Values: enabled - Validate HTTPS certificates for all hosts local-disabled - Disable HTTPS certificate validation for hosts on the local network disabled - Disable HTTPS certificate validation completely Proxy # Proxy configuration for Sonarr. enable : bool = False class-attribute instance-attribute # Use a proxy server to access the Internet. proxy_type : ProxyType = ProxyType . http class-attribute instance-attribute # Type of proxy to connect to. Values: http - HTTP(S) proxy socks4 - SOCKSv4 proxy socks5 - SOCKSv5 proxy (Tor is supported) hostname : Optional [ str ] = None class-attribute instance-attribute # Proxy server hostname. Required if using a proxy is enabled. port : Port = 8080 class-attribute instance-attribute # Proxy server access port. username : Optional [ str ] = None class-attribute instance-attribute # Username to authenticate with. Only enter if authentication is required by the proxy. password : Optional [ Password ] = None class-attribute instance-attribute # Password for the proxy user. Only enter if authentication is required by the proxy. ignored_addresses : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # List of domains/addresses which bypass the proxy. Wildcards ( * ) are supported. bypass_proxy_for_local_addresses : bool = True class-attribute instance-attribute # Do not use the proxy to access local network addresses. Logging # Logging configuration for the Sonarr application. log_level : SonarrLogLevel = SonarrLogLevel . INFO class-attribute instance-attribute # Verbosity of logging output. Values: INFO - Standard log output DEBUG - Debugging log output TRACE - Trace diagnostics log output Analytics # Configuration of analytics and telemetry from within Sonarr. send_anonymous_usage_data : bool = True class-attribute instance-attribute # Send anonymous usage and error information to Sonarr's servers. This includes information on your browser, which Sonarr Web UI pages you use, error reporting and OS/runtime versions. This information is reportedly used to prioritise features and bug fixes. Requires a restart of Sonarr to take effect. Updates # Settings for updating Sonarr. branch : NonEmptyStr = 'main' class-attribute instance-attribute # Branch used by the external update mechanism. Changing this value has no effect on Docker installations. If unsure, leave this undefined in Buildarr and use the value already set in Sonarr. automatic : bool = False class-attribute instance-attribute # Automatically download and install updates. Manual updates can still be performed from System -> Updates. This option must be left set to false on Docker installations. mechanism : UpdateMechanism = UpdateMechanism . docker class-attribute instance-attribute # Set the mechanism for updating Sonarr. Must be set to docker on Docker installations. Values: builtin - Sonarr built-in updater mechanism script - Use the configured update script external - External update mechanism apt - Debian APT package docker - Docker image script_path : Optional [ str ] = None class-attribute instance-attribute # Path to a custom script that takes an extracted update package and handles the remainder of the update process. Required if mechanism is set to script . Backup # Settings for Sonarr automatic backups. folder : NonEmptyStr = 'Backups' class-attribute instance-attribute # Folder to backup Sonarr data to. Relative paths will be under Sonarr's AppData directory. interval : int = Field ( 7 , ge = 1 , le = 7 ) class-attribute instance-attribute # Interval between automatic backups, in days. Must be set somewhere between 1 and 7 days. retention : int = Field ( 28 , ge = 1 , le = 90 ) class-attribute instance-attribute # Retention period for backups, in days. Backups older than the retention period will be cleaned up automatically. Must be set somewhere between 1 and 90 days.","title":"General"},{"location":"plugins/sonarr/configuration/general/#general","text":"General configuration for Sonarr are separated by category. sonarr : settings : general : host : bind_address : \"*\" port : 8989 url_base : null instance_name : \"Sonarr (Example)\" security : authentication : \"none\" proxy : enable : false logging : log_level : \"INFO\" analytics : send_anonymous_usage_data : false updates : branch : \"main\" automatic : false mechanism : \"docker\" backup : folder : \"Backups\" interval : 7 retention : 28 Some of the settings may affect Buildarr's ability to connect with the Sonarr instance. Take care when changing these settings.","title":"General"},{"location":"plugins/sonarr/configuration/general/#host","text":"Sonarr instance connection and name configuration. Many of these settings configure Sonarr's external connection interface. If they are changed, the settings Buildarr uses to connect with this Sonarr instance may need to be updated, so take care when modifying them. Changing any of these settings require a restart of Sonarr to take effect.","title":"Host"},{"location":"plugins/sonarr/configuration/general/#buildarr_sonarr.config.general.HostGeneralSettings.bind_address","text":"Bind address for Sonarr. Set to an IPv4 address bound to a local interface or * to bind on all interfaces. Unless you run Sonarr directly on a host machine (i.e. not via Docker) and want Sonarr to only be available on a specific network or interface, this generally should be left untouched.","title":"bind_address"},{"location":"plugins/sonarr/configuration/general/#buildarr_sonarr.config.general.HostGeneralSettings.port","text":"Unencrypted (HTTP) listening port for Sonarr. If Sonarr is being run via Docker in the default bridge mode, this setting shouldn't be changed. Instead, change the external port it is bound to using --publish <port number>:8989 .","title":"port"},{"location":"plugins/sonarr/configuration/general/#buildarr_sonarr.config.general.HostGeneralSettings.ssl_port","text":"Encrypted (HTTPS) listening port for Sonarr. If Sonarr is being run via Docker in the default bridge mode, this setting shouldn't be changed. Instead, change the external port it is bound to using --publish <port number>:9898 .","title":"ssl_port"},{"location":"plugins/sonarr/configuration/general/#buildarr_sonarr.config.general.HostGeneralSettings.use_ssl","text":"Enable the encrypted (HTTPS) listening port in Sonarr. As Sonarr only supports self-signed certificates, it is recommended to put Sonarr behind a HTTPS-terminating reverse proxy such as Nginx, Caddy or Traefik.","title":"use_ssl"},{"location":"plugins/sonarr/configuration/general/#buildarr_sonarr.config.general.HostGeneralSettings.url_base","text":"Add a prefix to all Sonarr URLs, e.g. http://localhost:8989/<url_base>/settings/general . Generally used to accommodate reverse proxies where Sonarr is assigned to a subfolder, e.g. https://example.com/sonarr .","title":"url_base"},{"location":"plugins/sonarr/configuration/general/#buildarr_sonarr.config.general.HostGeneralSettings.instance_name","text":"Instance name in the browser tab and in syslog.","title":"instance_name"},{"location":"plugins/sonarr/configuration/general/#security","text":"Sonarr instance security (authentication) settings.","title":"Security"},{"location":"plugins/sonarr/configuration/general/#buildarr_sonarr.config.general.SecurityGeneralSettings.authentication","text":"Authentication method for logging into Sonarr. By default, do not require authentication. Values: none - No authentication basic - Authentication using HTTP basic auth (browser popup) form - Authentication using a login page Requires a restart of Sonarr to take effect.","title":"authentication"},{"location":"plugins/sonarr/configuration/general/#buildarr_sonarr.config.general.SecurityGeneralSettings.username","text":"Username for the administrator user. Required if authentication is enabled. Requires a restart of Sonarr to take effect.","title":"username"},{"location":"plugins/sonarr/configuration/general/#buildarr_sonarr.config.general.SecurityGeneralSettings.password","text":"Password for the administrator user. Required if authentication is enabled. Requires a restart of Sonarr to take effect.","title":"password"},{"location":"plugins/sonarr/configuration/general/#buildarr_sonarr.config.general.SecurityGeneralSettings.certificate_validation","text":"Change how strict HTTPS certification validation is. Do not change unless you understand the risks. Values: enabled - Validate HTTPS certificates for all hosts local-disabled - Disable HTTPS certificate validation for hosts on the local network disabled - Disable HTTPS certificate validation completely","title":"certificate_validation"},{"location":"plugins/sonarr/configuration/general/#proxy","text":"Proxy configuration for Sonarr.","title":"Proxy"},{"location":"plugins/sonarr/configuration/general/#buildarr_sonarr.config.general.ProxyGeneralSettings.enable","text":"Use a proxy server to access the Internet.","title":"enable"},{"location":"plugins/sonarr/configuration/general/#buildarr_sonarr.config.general.ProxyGeneralSettings.proxy_type","text":"Type of proxy to connect to. Values: http - HTTP(S) proxy socks4 - SOCKSv4 proxy socks5 - SOCKSv5 proxy (Tor is supported)","title":"proxy_type"},{"location":"plugins/sonarr/configuration/general/#buildarr_sonarr.config.general.ProxyGeneralSettings.hostname","text":"Proxy server hostname. Required if using a proxy is enabled.","title":"hostname"},{"location":"plugins/sonarr/configuration/general/#buildarr_sonarr.config.general.ProxyGeneralSettings.port","text":"Proxy server access port.","title":"port"},{"location":"plugins/sonarr/configuration/general/#buildarr_sonarr.config.general.ProxyGeneralSettings.username","text":"Username to authenticate with. Only enter if authentication is required by the proxy.","title":"username"},{"location":"plugins/sonarr/configuration/general/#buildarr_sonarr.config.general.ProxyGeneralSettings.password","text":"Password for the proxy user. Only enter if authentication is required by the proxy.","title":"password"},{"location":"plugins/sonarr/configuration/general/#buildarr_sonarr.config.general.ProxyGeneralSettings.ignored_addresses","text":"List of domains/addresses which bypass the proxy. Wildcards ( * ) are supported.","title":"ignored_addresses"},{"location":"plugins/sonarr/configuration/general/#buildarr_sonarr.config.general.ProxyGeneralSettings.bypass_proxy_for_local_addresses","text":"Do not use the proxy to access local network addresses.","title":"bypass_proxy_for_local_addresses"},{"location":"plugins/sonarr/configuration/general/#logging","text":"Logging configuration for the Sonarr application.","title":"Logging"},{"location":"plugins/sonarr/configuration/general/#buildarr_sonarr.config.general.LoggingGeneralSettings.log_level","text":"Verbosity of logging output. Values: INFO - Standard log output DEBUG - Debugging log output TRACE - Trace diagnostics log output","title":"log_level"},{"location":"plugins/sonarr/configuration/general/#analytics","text":"Configuration of analytics and telemetry from within Sonarr.","title":"Analytics"},{"location":"plugins/sonarr/configuration/general/#buildarr_sonarr.config.general.AnalyticsGeneralSettings.send_anonymous_usage_data","text":"Send anonymous usage and error information to Sonarr's servers. This includes information on your browser, which Sonarr Web UI pages you use, error reporting and OS/runtime versions. This information is reportedly used to prioritise features and bug fixes. Requires a restart of Sonarr to take effect.","title":"send_anonymous_usage_data"},{"location":"plugins/sonarr/configuration/general/#updates","text":"Settings for updating Sonarr.","title":"Updates"},{"location":"plugins/sonarr/configuration/general/#buildarr_sonarr.config.general.UpdatesGeneralSettings.branch","text":"Branch used by the external update mechanism. Changing this value has no effect on Docker installations. If unsure, leave this undefined in Buildarr and use the value already set in Sonarr.","title":"branch"},{"location":"plugins/sonarr/configuration/general/#buildarr_sonarr.config.general.UpdatesGeneralSettings.automatic","text":"Automatically download and install updates. Manual updates can still be performed from System -> Updates. This option must be left set to false on Docker installations.","title":"automatic"},{"location":"plugins/sonarr/configuration/general/#buildarr_sonarr.config.general.UpdatesGeneralSettings.mechanism","text":"Set the mechanism for updating Sonarr. Must be set to docker on Docker installations. Values: builtin - Sonarr built-in updater mechanism script - Use the configured update script external - External update mechanism apt - Debian APT package docker - Docker image","title":"mechanism"},{"location":"plugins/sonarr/configuration/general/#buildarr_sonarr.config.general.UpdatesGeneralSettings.script_path","text":"Path to a custom script that takes an extracted update package and handles the remainder of the update process. Required if mechanism is set to script .","title":"script_path"},{"location":"plugins/sonarr/configuration/general/#backup","text":"Settings for Sonarr automatic backups.","title":"Backup"},{"location":"plugins/sonarr/configuration/general/#buildarr_sonarr.config.general.BackupGeneralSettings.folder","text":"Folder to backup Sonarr data to. Relative paths will be under Sonarr's AppData directory.","title":"folder"},{"location":"plugins/sonarr/configuration/general/#buildarr_sonarr.config.general.BackupGeneralSettings.interval","text":"Interval between automatic backups, in days. Must be set somewhere between 1 and 7 days.","title":"interval"},{"location":"plugins/sonarr/configuration/general/#buildarr_sonarr.config.general.BackupGeneralSettings.retention","text":"Retention period for backups, in days. Backups older than the retention period will be cleaned up automatically. Must be set somewhere between 1 and 90 days.","title":"retention"},{"location":"plugins/sonarr/configuration/host/","text":"Host Configuration # By default, Buildarr will look for a single instance at http://sonarr:8989 . Most configurations are different, and to accommodate those, you can configure how Buildarr connects to individual Sonarr instances. Configuration of a single Sonarr instance: sonarr : hostname : \"sonarr.example.com\" port : 8989 protocol : \"http\" settings : ... Configuration of multiple instances: sonarr : # Configuration and settings common to all instances. port : 8989 settings : ... instances : # Sonarr instance 1-specific configuration. sonarr1 : hostname : \"sonarr1.example.com\" settings : ... # Sonarr instance 2-specific configuration. sonarr2 : hostname : \"sonarr2.example.com\" api_key : \"...\" # Explicitly define API key settings : ... hostname : NonEmptyStr = 'sonarr' class-attribute instance-attribute # Hostname of the Sonarr instance to connect to. When defining a single instance using the global sonarr configuration block, the default hostname is sonarr . When using multiple instance-specific configurations, the default hostname is the name given to the instance in the instances attribute. sonarr : instances : sonarr1 : # <--- This becomes the default hostname ... port : Port = 8989 class-attribute instance-attribute # Port number of the Sonarr instance to connect to. protocol : SonarrProtocol = 'http' class-attribute instance-attribute # Communication protocol to use to connect to Sonarr. api_key : Optional [ SonarrApiKey ] = None class-attribute instance-attribute # API key to use to authenticate with the Sonarr instance. If undefined or set to None , automatically retrieve the API key. This can only be done on Sonarr instances with authentication disabled. version : Optional [ str ] = None class-attribute instance-attribute # The expected version of the Sonarr instance. If undefined or set to None , the version is auto-detected. This value is also used when generating a Docker Compose file. When undefined or set to None , the version tag will be set to latest . settings : SonarrSettingsConfig = SonarrSettingsConfig () class-attribute instance-attribute # Sonarr settings. Configuration options for Sonarr itself are set within this structure.","title":"Host Configuration"},{"location":"plugins/sonarr/configuration/host/#host-configuration","text":"By default, Buildarr will look for a single instance at http://sonarr:8989 . Most configurations are different, and to accommodate those, you can configure how Buildarr connects to individual Sonarr instances. Configuration of a single Sonarr instance: sonarr : hostname : \"sonarr.example.com\" port : 8989 protocol : \"http\" settings : ... Configuration of multiple instances: sonarr : # Configuration and settings common to all instances. port : 8989 settings : ... instances : # Sonarr instance 1-specific configuration. sonarr1 : hostname : \"sonarr1.example.com\" settings : ... # Sonarr instance 2-specific configuration. sonarr2 : hostname : \"sonarr2.example.com\" api_key : \"...\" # Explicitly define API key settings : ...","title":"Host Configuration"},{"location":"plugins/sonarr/configuration/host/#buildarr_sonarr.config.SonarrInstanceConfig.hostname","text":"Hostname of the Sonarr instance to connect to. When defining a single instance using the global sonarr configuration block, the default hostname is sonarr . When using multiple instance-specific configurations, the default hostname is the name given to the instance in the instances attribute. sonarr : instances : sonarr1 : # <--- This becomes the default hostname ...","title":"hostname"},{"location":"plugins/sonarr/configuration/host/#buildarr_sonarr.config.SonarrInstanceConfig.port","text":"Port number of the Sonarr instance to connect to.","title":"port"},{"location":"plugins/sonarr/configuration/host/#buildarr_sonarr.config.SonarrInstanceConfig.protocol","text":"Communication protocol to use to connect to Sonarr.","title":"protocol"},{"location":"plugins/sonarr/configuration/host/#buildarr_sonarr.config.SonarrInstanceConfig.api_key","text":"API key to use to authenticate with the Sonarr instance. If undefined or set to None , automatically retrieve the API key. This can only be done on Sonarr instances with authentication disabled.","title":"api_key"},{"location":"plugins/sonarr/configuration/host/#buildarr_sonarr.config.SonarrInstanceConfig.version","text":"The expected version of the Sonarr instance. If undefined or set to None , the version is auto-detected. This value is also used when generating a Docker Compose file. When undefined or set to None , the version tag will be set to latest .","title":"version"},{"location":"plugins/sonarr/configuration/host/#buildarr_sonarr.config.SonarrInstanceConfig.settings","text":"Sonarr settings. Configuration options for Sonarr itself are set within this structure.","title":"settings"},{"location":"plugins/sonarr/configuration/import-lists/","text":"Import Lists # Using import lists, Sonarr can monitor and import episodes from external sources. sonarr : settings : import_lists : delete_unmanaged : False # Default is `false` delete_unmanaged_exclusions : true # Default is `false` definitions : Plex : # Name of import list definition type : \"plex-watchlist\" # Type of import list to use # Attributes common to all watch list types enable_automatic_add : true monitor : \"all-episodes\" series_type : \"standard\" season_folder : true tags : - \"example\" # Plex-specific attributes access_token : \"...\" # Add more import lists here. exclusions : 72662 : \"Teletubbies\" # TVDB ID is key, set an artibrary title as value Media can be queued on the source, and Sonarr will automatically import them, look for suitable releases, and download them. Media that you don't want to import can be ignored using the exclusions attribute. delete_unmanaged : bool = False class-attribute instance-attribute # Automatically delete import lists not defined in Buildarr. delete_unmanaged_exclusions : bool = False class-attribute instance-attribute # Automatically delete import list excusions not defined in Buildarr. definitions : Dict [ str , Annotated [ ImportListType , Field ( discriminator = 'type' )]] = {} class-attribute instance-attribute # Import list definitions go here. exclusions : Dict [ PositiveInt , NonEmptyStr ] = {} class-attribute instance-attribute # Dictionary of TV series that should be excluded from being imported. The key is the TVDB ID of the series to exclude, the value is a title to give the series in the Sonarr UI. Configuring import lists # The following For more information on how an import list should be setup, refer to this guide on WikiArr . All import list types can have the following attributes configured. enable_automatic_add : bool = True class-attribute instance-attribute # Automatically add series to Sonarr upon syncing. monitor : Monitor = Monitor . all_episodes class-attribute instance-attribute # Define how Sonarr should monitor existing and new episodes of series. Values: all-episodes - Monitor all episodes except specials future-episodes - Monitor episodes that have not aired yet missing-episodes - Monitor episodes that do not have files or have not aired yet existing-episodes - Monitor episodes that have files or have not aired yet pilot-episode - Monitor only the pilot episode of a series first-season - Monitor all episodes of the first season (all other seasons will be ignored) only-latest-season - Monitor all episodes of the latest season and future seasons none - No episodes will be monitored root_folder : NonEmptyStr instance-attribute # The root folder to add list items to. This attribute is required. quality_profile : NonEmptyStr instance-attribute # The name of the quality profile list items will be added with. This attribute is required. language_profile : NonEmptyStr instance-attribute # The name of the language profile list items will be added with. This attribute is required. series_type : SeriesType = SeriesType . standard class-attribute instance-attribute # The type of series that get imported from this import list. This option affects how Sonarr handles the media, such as renaming. Values: standard - Episodes released with an SxxEyy pattern daily - Episodes released daily or less frequently that use year-month-day (2017-05-25) anime - Episodes released using an absolute episode number season_folder : bool = True class-attribute instance-attribute # Use a season folder for series imported from this import list. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Tags to assign to items imported from this import list. Sonarr # Import items from another Sonarr instance. The linked Sonarr instance must be the same major version as this defined Sonarr instance. For example, a Sonarr V3 instance cannot connect with a Sonarr V4 instance, and vice versa. ... import_lists : definitions : Sonarr : type : \"sonarr\" # Global import list options. root_folder : \"/path/to/videos\" quality_profile : \"HD/SD\" language_profile : \"English\" # Sonarr import list-specific options. full_url : \"http://sonarr:8989\" api_key : \"1a2b3c4d5e1a2b3c4d5e1a2b3c4d5e1a\" source_quality_profiles : - 11 ... source_language_profiles : - 22 ... source_tags : - 33 ... This import list supports instance references to another Buildarr-defined Sonarr instance using instance_name . In this mode, you can specify instance_name in place of api_key , and use actual names for the source language profiles, quality profiles and tags, instead of IDs which are subject to change. Here is an example of one Sonarr instance ( sonarr-4k ) referencing another instance ( sonarr-hd ), using it as an import list. sonarr : instances : sonarr-hd : hostname : \"localhost\" port : 8989 sonarr-4k : hostname : \"localhost\" port : 8990 settings : import_lists : definitions : Sonarr (HD) : type : \"sonarr\" # Global import list options. root_folder : \"/path/to/videos\" quality_profile : \"4K\" language_profile : \"English\" # Sonarr import list-specific options. full_url : \"http://sonarr:8989\" instance_name : \"sonarr-hd\" source_quality_profiles : - \"HD/SD\" source_language_profiles : - \"English\" source_tags : - \"shows\" An important thing to keep in mind is that unless Buildarr is on the same network as the rest of the *Arr stack, the hostnames and ports may differ to what the Sonarr instances will use to communicate with each other. full_url should be set to what the Sonarr instance itself will use to link to the target instance. type : Literal [ 'sonarr' ] = 'sonarr' class-attribute instance-attribute # Type value associated with this kind of import list. instance_name : Optional [ InstanceName ] = Field ( None , plugin = 'sonarr' ) class-attribute instance-attribute # The name of the Sonarr instance within Buildarr, if linking this Sonarr instance with another Buildarr-defined Sonarr instance. New in version 0.3.0. full_url : AnyHttpUrl instance-attribute # The URL that this Sonarr instance will use to connect to the source Sonarr instance. api_key : Optional [ SonarrApiKey ] = None class-attribute instance-attribute # API key used to access the source Sonarr instance. If a Sonarr instance managed by Buildarr is not referenced using instance_name , this attribute is required. source_quality_profiles : Set [ Union [ PositiveInt , NonEmptyStr ]] = Field ( set (), alias = 'source_quality_profile_ids' ) class-attribute instance-attribute # List of IDs (or names) of the quality profiles on the source instance to import from. Quality profile names can only be used if instance_name is used to link to a Buildarr-defined Sonarr instance. If linking to a Sonarr instance outside Buildarr, IDs must be used. Changed in version 0.3.0 : Renamed from source_quality_profile_ids (which is still valid as an alias), and added support for quality profile names. source_language_profiles : Set [ Union [ PositiveInt , NonEmptyStr ]] = Field ( set (), alias = 'source_language_profile_ids' ) class-attribute instance-attribute # List of IDs (or names) of the language profiles on the source instance to import from. Language profile names can only be used if instance_name is used to link to a Buildarr-defined Sonarr instance. If linking to a Sonarr instance outside Buildarr, IDs must be used. Changed in version 0.3.0 : Renamed from source_language_profile_ids (which is still valid as an alias), and added support for language profile names. source_tags : Set [ Union [ PositiveInt , NonEmptyStr ]] = Field ( set (), alias = 'source_tag_ids' ) class-attribute instance-attribute # List of IDs (or names) of the tags on the source instance to import from. Tag names can only be used if instance_name is used to link to a Buildarr-defined Sonarr instance. If linking to a Sonarr instance outside Buildarr, IDs must be used. Changed in version 0.3.0 : Renamed from source_tag_ids (which is still valid as an alias), and added support for tag names. Plex # Import items from a Plex watchlist. type : Literal [ 'plex-watchlist' ] = 'plex-watchlist' class-attribute instance-attribute # Type value associated with this kind of import list. access_token : Password instance-attribute # Plex authentication token. If unsure on where to find this token, follow this guide from Plex.tv . Trakt # Import added media from a list on the Trakt media tracker. Note Sonarr directly authenticates with Trakt to generate tokens for it to use. At the moment, the easiest way to generate the tokens for Buildarr is to do it using the GUI within Sonarr, and use the following shell command to retrieve the generated configuration. $ curl -X \"GET\" \"<sonarr-url>/api/v3/notification\" -H \"X-Api-Key: <api-key>\" The following parameters are common to all Trakt import list types. The authenticated-related parameters ( access_token , refresh_token , expires , auth_user ) are required. access_token : Password instance-attribute # Access token for Sonarr from Trakt. refresh_token : Password instance-attribute # Refresh token for Sonarr from Trakt. expires : datetime instance-attribute # Expiry date-time of the access token, preferably in ISO-8601 format and in UTC. Example: 2023-05-10T15:34:08.117451Z auth_user : TraktAuthUser instance-attribute # The username being authenticated in Trakt. rating : NonEmptyStr = '0-100' class-attribute instance-attribute # Filter series by rating range, with a maximum range of 0-100. username : Optional [ str ] = None class-attribute instance-attribute # Username for the list to import from. Leave undefined, empty or set to None to use the auth user. genres : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Filter series by Trakt genre slug. years : Optional [ YearRange ] = None class-attribute instance-attribute # Filter series by year or year range. (e.g. 2009 or 2009-2015 ) limit : PositiveInt = 100 class-attribute instance-attribute # Limit the number of series to get. trakt_additional_parameters : Optional [ str ] = None class-attribute instance-attribute # Additional parameters to send to the Trakt API. List # Import an arbitrary list from Trakt into Sonarr. type : Literal [ 'trakt-list' ] = 'trakt-list' class-attribute instance-attribute # Type value associated with this kind of import list. list_name : NonEmptyStr instance-attribute # Name of the list to import. The list must be public, or you must have access to the list. Popular List # Import media according to popularity-based lists on Trakt. type : Literal [ 'trakt-popularlist' ] = 'trakt-popularlist' class-attribute instance-attribute # Type value associated with this kind of import list. list_type : TraktPopularListType = TraktPopularListType . popular class-attribute instance-attribute # Popularity-based list to import. Values: trending popular anticipated top_watched_by_week top_watched_by_month top_watched_by_year top_watched_by_alltime recommended_by_week recommended_by_month recommended_by_year recommended_by_alltime User # Import a user-level list from Trakt. type : Literal [ 'trakt-user' ] = 'trakt-user' class-attribute instance-attribute # Type value associated with this kind of import list. list_type : TraktUserListType = TraktUserListType . user_watch_list class-attribute instance-attribute # User list type to import. Values: user_watch_list user_watched_list user_collection_list","title":"Import Lists"},{"location":"plugins/sonarr/configuration/import-lists/#import-lists","text":"Using import lists, Sonarr can monitor and import episodes from external sources. sonarr : settings : import_lists : delete_unmanaged : False # Default is `false` delete_unmanaged_exclusions : true # Default is `false` definitions : Plex : # Name of import list definition type : \"plex-watchlist\" # Type of import list to use # Attributes common to all watch list types enable_automatic_add : true monitor : \"all-episodes\" series_type : \"standard\" season_folder : true tags : - \"example\" # Plex-specific attributes access_token : \"...\" # Add more import lists here. exclusions : 72662 : \"Teletubbies\" # TVDB ID is key, set an artibrary title as value Media can be queued on the source, and Sonarr will automatically import them, look for suitable releases, and download them. Media that you don't want to import can be ignored using the exclusions attribute.","title":"Import Lists"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.SonarrImportListsSettingsConfig.delete_unmanaged","text":"Automatically delete import lists not defined in Buildarr.","title":"delete_unmanaged"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.SonarrImportListsSettingsConfig.delete_unmanaged_exclusions","text":"Automatically delete import list excusions not defined in Buildarr.","title":"delete_unmanaged_exclusions"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.SonarrImportListsSettingsConfig.definitions","text":"Import list definitions go here.","title":"definitions"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.SonarrImportListsSettingsConfig.exclusions","text":"Dictionary of TV series that should be excluded from being imported. The key is the TVDB ID of the series to exclude, the value is a title to give the series in the Sonarr UI.","title":"exclusions"},{"location":"plugins/sonarr/configuration/import-lists/#configuring-import-lists","text":"The following For more information on how an import list should be setup, refer to this guide on WikiArr . All import list types can have the following attributes configured.","title":"Configuring import lists"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.ImportList.enable_automatic_add","text":"Automatically add series to Sonarr upon syncing.","title":"enable_automatic_add"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.ImportList.monitor","text":"Define how Sonarr should monitor existing and new episodes of series. Values: all-episodes - Monitor all episodes except specials future-episodes - Monitor episodes that have not aired yet missing-episodes - Monitor episodes that do not have files or have not aired yet existing-episodes - Monitor episodes that have files or have not aired yet pilot-episode - Monitor only the pilot episode of a series first-season - Monitor all episodes of the first season (all other seasons will be ignored) only-latest-season - Monitor all episodes of the latest season and future seasons none - No episodes will be monitored","title":"monitor"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.ImportList.root_folder","text":"The root folder to add list items to. This attribute is required.","title":"root_folder"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.ImportList.quality_profile","text":"The name of the quality profile list items will be added with. This attribute is required.","title":"quality_profile"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.ImportList.language_profile","text":"The name of the language profile list items will be added with. This attribute is required.","title":"language_profile"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.ImportList.series_type","text":"The type of series that get imported from this import list. This option affects how Sonarr handles the media, such as renaming. Values: standard - Episodes released with an SxxEyy pattern daily - Episodes released daily or less frequently that use year-month-day (2017-05-25) anime - Episodes released using an absolute episode number","title":"series_type"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.ImportList.season_folder","text":"Use a season folder for series imported from this import list.","title":"season_folder"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.ImportList.tags","text":"Tags to assign to items imported from this import list.","title":"tags"},{"location":"plugins/sonarr/configuration/import-lists/#sonarr","text":"Import items from another Sonarr instance. The linked Sonarr instance must be the same major version as this defined Sonarr instance. For example, a Sonarr V3 instance cannot connect with a Sonarr V4 instance, and vice versa. ... import_lists : definitions : Sonarr : type : \"sonarr\" # Global import list options. root_folder : \"/path/to/videos\" quality_profile : \"HD/SD\" language_profile : \"English\" # Sonarr import list-specific options. full_url : \"http://sonarr:8989\" api_key : \"1a2b3c4d5e1a2b3c4d5e1a2b3c4d5e1a\" source_quality_profiles : - 11 ... source_language_profiles : - 22 ... source_tags : - 33 ... This import list supports instance references to another Buildarr-defined Sonarr instance using instance_name . In this mode, you can specify instance_name in place of api_key , and use actual names for the source language profiles, quality profiles and tags, instead of IDs which are subject to change. Here is an example of one Sonarr instance ( sonarr-4k ) referencing another instance ( sonarr-hd ), using it as an import list. sonarr : instances : sonarr-hd : hostname : \"localhost\" port : 8989 sonarr-4k : hostname : \"localhost\" port : 8990 settings : import_lists : definitions : Sonarr (HD) : type : \"sonarr\" # Global import list options. root_folder : \"/path/to/videos\" quality_profile : \"4K\" language_profile : \"English\" # Sonarr import list-specific options. full_url : \"http://sonarr:8989\" instance_name : \"sonarr-hd\" source_quality_profiles : - \"HD/SD\" source_language_profiles : - \"English\" source_tags : - \"shows\" An important thing to keep in mind is that unless Buildarr is on the same network as the rest of the *Arr stack, the hostnames and ports may differ to what the Sonarr instances will use to communicate with each other. full_url should be set to what the Sonarr instance itself will use to link to the target instance.","title":"Sonarr"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.SonarrImportList.type","text":"Type value associated with this kind of import list.","title":"type"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.SonarrImportList.instance_name","text":"The name of the Sonarr instance within Buildarr, if linking this Sonarr instance with another Buildarr-defined Sonarr instance. New in version 0.3.0.","title":"instance_name"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.SonarrImportList.full_url","text":"The URL that this Sonarr instance will use to connect to the source Sonarr instance.","title":"full_url"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.SonarrImportList.api_key","text":"API key used to access the source Sonarr instance. If a Sonarr instance managed by Buildarr is not referenced using instance_name , this attribute is required.","title":"api_key"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.SonarrImportList.source_quality_profiles","text":"List of IDs (or names) of the quality profiles on the source instance to import from. Quality profile names can only be used if instance_name is used to link to a Buildarr-defined Sonarr instance. If linking to a Sonarr instance outside Buildarr, IDs must be used. Changed in version 0.3.0 : Renamed from source_quality_profile_ids (which is still valid as an alias), and added support for quality profile names.","title":"source_quality_profiles"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.SonarrImportList.source_language_profiles","text":"List of IDs (or names) of the language profiles on the source instance to import from. Language profile names can only be used if instance_name is used to link to a Buildarr-defined Sonarr instance. If linking to a Sonarr instance outside Buildarr, IDs must be used. Changed in version 0.3.0 : Renamed from source_language_profile_ids (which is still valid as an alias), and added support for language profile names.","title":"source_language_profiles"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.SonarrImportList.source_tags","text":"List of IDs (or names) of the tags on the source instance to import from. Tag names can only be used if instance_name is used to link to a Buildarr-defined Sonarr instance. If linking to a Sonarr instance outside Buildarr, IDs must be used. Changed in version 0.3.0 : Renamed from source_tag_ids (which is still valid as an alias), and added support for tag names.","title":"source_tags"},{"location":"plugins/sonarr/configuration/import-lists/#plex","text":"Import items from a Plex watchlist.","title":"Plex"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.PlexWatchlistImportList.type","text":"Type value associated with this kind of import list.","title":"type"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.PlexWatchlistImportList.access_token","text":"Plex authentication token. If unsure on where to find this token, follow this guide from Plex.tv .","title":"access_token"},{"location":"plugins/sonarr/configuration/import-lists/#trakt","text":"Import added media from a list on the Trakt media tracker. Note Sonarr directly authenticates with Trakt to generate tokens for it to use. At the moment, the easiest way to generate the tokens for Buildarr is to do it using the GUI within Sonarr, and use the following shell command to retrieve the generated configuration. $ curl -X \"GET\" \"<sonarr-url>/api/v3/notification\" -H \"X-Api-Key: <api-key>\" The following parameters are common to all Trakt import list types. The authenticated-related parameters ( access_token , refresh_token , expires , auth_user ) are required.","title":"Trakt"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.TraktImportList.access_token","text":"Access token for Sonarr from Trakt.","title":"access_token"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.TraktImportList.refresh_token","text":"Refresh token for Sonarr from Trakt.","title":"refresh_token"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.TraktImportList.expires","text":"Expiry date-time of the access token, preferably in ISO-8601 format and in UTC. Example: 2023-05-10T15:34:08.117451Z","title":"expires"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.TraktImportList.auth_user","text":"The username being authenticated in Trakt.","title":"auth_user"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.TraktImportList.rating","text":"Filter series by rating range, with a maximum range of 0-100.","title":"rating"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.TraktImportList.username","text":"Username for the list to import from. Leave undefined, empty or set to None to use the auth user.","title":"username"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.TraktImportList.genres","text":"Filter series by Trakt genre slug.","title":"genres"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.TraktImportList.years","text":"Filter series by year or year range. (e.g. 2009 or 2009-2015 )","title":"years"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.TraktImportList.limit","text":"Limit the number of series to get.","title":"limit"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.TraktImportList.trakt_additional_parameters","text":"Additional parameters to send to the Trakt API.","title":"trakt_additional_parameters"},{"location":"plugins/sonarr/configuration/import-lists/#list","text":"Import an arbitrary list from Trakt into Sonarr.","title":"List"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.TraktListImportList.type","text":"Type value associated with this kind of import list.","title":"type"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.TraktListImportList.list_name","text":"Name of the list to import. The list must be public, or you must have access to the list.","title":"list_name"},{"location":"plugins/sonarr/configuration/import-lists/#popular-list","text":"Import media according to popularity-based lists on Trakt.","title":"Popular List"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.TraktPopularlistImportList.type","text":"Type value associated with this kind of import list.","title":"type"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.TraktPopularlistImportList.list_type","text":"Popularity-based list to import. Values: trending popular anticipated top_watched_by_week top_watched_by_month top_watched_by_year top_watched_by_alltime recommended_by_week recommended_by_month recommended_by_year recommended_by_alltime","title":"list_type"},{"location":"plugins/sonarr/configuration/import-lists/#user","text":"Import a user-level list from Trakt.","title":"User"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.TraktUserImportList.type","text":"Type value associated with this kind of import list.","title":"type"},{"location":"plugins/sonarr/configuration/import-lists/#buildarr_sonarr.config.import_lists.TraktUserImportList.list_type","text":"User list type to import. Values: user_watch_list user_watched_list user_collection_list","title":"list_type"},{"location":"plugins/sonarr/configuration/indexers/","text":"Indexers # Indexers are used to monitor for new releases of media on external trackers. When a suitable release has been found, Sonarr registers it for download on one of the configured download clients. sonarr : config : indexers : minimum_age : 0 retention : 0 maximum_size : 0 rss_sync_interval : 15 delete_unmanaged : false # Better to leave off for the most part definitions : Nyaa : # Indexer name type : \"nyaa\" # Type of indexer # Configuration common to all indexers enable_rss : true enable_automatic_search : true enable_interactive_search : true anime_standard_format_search : true indexer_priority : 25 download_client : null tags : - \"example\" # Nyaa-specific configuration website_url : \"https://example.com\" # Define more indexers here. The following parameters are available for configuring indexers and how they are handled by Sonarr. For more information on how Sonarr finds epsiodes, refer to the FAQ on WikiArr . minimum_age : int = Field ( 0 , ge = 0 ) class-attribute instance-attribute # Minimum age (in minutes) of NZBs before they are grabbed. (Usenet only) Use this to give new releases time to propagate to your Usenet provider. retention : int = Field ( 0 , ge = 0 ) class-attribute instance-attribute # Retention of releases. (Usenet only) Set to 0 for unlimited retention. maximum_size : int = Field ( 0 , ge = 0 ) class-attribute instance-attribute # Maximum size for a release to be grabbed, in megabytes (MB). Set to 0 to set for unlimited size. rss_sync_interval : int = Field ( 15 , ge = 0 ) class-attribute instance-attribute # Interval (in minutes) to sync RSS feeds with indexers. Set to 0 to disable syncing. This also disables automatic release grabbing. delete_unmanaged : bool = False class-attribute instance-attribute # Automatically delete indexers not configured by Buildarr. Take care when enabling this option, as it will also delete indexers created by external applications such as Prowlarr. If unsure, leave set at the default of false . definitions : Dict [ str , Annotated [ IndexerType , Field ( discriminator = 'type' )]] = {} class-attribute instance-attribute # Indexers to manage via Buildarr are defined here. Configuring indexers # Here is an example of an indexer being configured in the indexers configuration block in Buildarr. ... indexers : definitions : Nyaa : # Indexer name type : \"nyaa\" # Type of indexer # Configuration common to all indexers enable_rss : true enable_automatic_search : true enable_interactive_search : true anime_standard_format_search : true indexer_priority : 25 download_client : null tags : - \"example\" # Nyaa-specific configuration website_url : \"https://example.com\" # Define more indexers here. There are configuration parameters common to all indexer types, and parameters common to only specific types of indexers. The following configuration attributes can be defined on all indexer types. enable_rss : bool = True class-attribute instance-attribute # If enabled, use this indexer to watch for files that are wanted and missing or have not yet reached their cutoff. enable_automatic_search : bool = True class-attribute instance-attribute # If enabled, use this indexer for automatic searches, including Search on Add. enable_interactive_search : bool = True class-attribute instance-attribute # If enabled, use this indexer for manual interactive searches. priority : int = Field ( 25 , ge = 1 , le = 50 , alias = 'indexer_priority' ) class-attribute instance-attribute # Priority of this indexer to prefer one indexer over another in release tiebreaker scenarios. 1 is highest priority and 50 is lowest priority. Changed in version 0.4.1 : Renamed from indexer_priority to priority . The original name is still available as an alias. download_client : Optional [ NonEmptyStr ] = None class-attribute instance-attribute # The name of the download client to use for grabs from this indexer. tags : List [ NonEmptyStr ] = [] class-attribute instance-attribute # Only use this indexer for series with at least one matching tag. Leave blank to use with all series. Fanzub # An indexer which uses a Fanzub-compatible RSS feed to monitor for releases. type : Literal [ 'fanzub' ] = 'fanzub' class-attribute instance-attribute # Type value associated with this kind of indexer. rss_url : RssUrl instance-attribute # A URL to a Fanzub compatible RSS feed. anime_standard_format_search : bool = False class-attribute instance-attribute # Also search for anime using the standard numbering. Only applies for Anime series types. Newznab # An indexer for monitoring a Newznab-compliant Usenet indexing site. Sonarr defines presets for several popular sites. type : Literal [ 'newznab' ] = 'newznab' class-attribute instance-attribute # Type value associated with this kind of indexer. url : AnyHttpUrl instance-attribute # URL of the Newznab-compatible indexing site. api_path : NonEmptyStr = '/api' class-attribute instance-attribute # Newznab API endpoint. Usually /api . categories : Set [ NabCategory ] = { NabCategory . TV_SD , NabCategory . TV_HD } class-attribute instance-attribute # Categories to monitor for standard/daily shows. Define as empty to disable. Values: TV-WEBDL TV-Foreign TV-SD TV-HD TV-UHD TV-Other TV-Sports TV-Anime TV-Documentary anime_categories : Set [ NabCategory ] = set () class-attribute instance-attribute # Categories to monitor for anime. Define as empty to disable. Values: TV-WEBDL TV-Foreign TV-SD TV-HD TV-UHD TV-Other TV-Sports TV-Anime TV-Documentary anime_standard_format_search : bool = False class-attribute instance-attribute # Also search for anime using the standard numbering. Only applies for Anime series types. additional_parameters : Optional [ str ] = None class-attribute instance-attribute # Additional Newznab API parameters. OmgWtfNZBs # An indexer for monitoring OmgWtfNZBs. type : Literal [ 'omgwtfnzbs' ] = 'omgwtfnzbs' class-attribute instance-attribute # Type value associated with this kind of indexer. username : NonEmptyStr instance-attribute # Username for the OmgWtfNZBs account. api_key : Password instance-attribute # API key for the OmgWtfNZBs API. delay : int = Field ( 30 , ge = 0 ) class-attribute instance-attribute # Time (in minutes) to delay new NZBs before they appear on the RSS feed. Torrent Indexers # Configuration attributes common to all torrent indexers. minimum_seeders : PositiveInt = 1 class-attribute instance-attribute # The minimum number of seeders required before downloading a release. seed_ratio : Optional [ float ] = None class-attribute instance-attribute # The seed ratio a torrent should reach before stopping. If unset or set to null , use the download client's defaults. seed_time : Optional [ int ] = None class-attribute instance-attribute # The amount of time (in minutes) a torrent should be seeded before stopping. If unset or set to null , use the download client's defaults. seasonpack_seed_time : Optional [ int ] = None class-attribute instance-attribute # The amount of time (in minutes) a season-pack torrent should be seeded before stopping. If unset or set to null , use the download client's defaults. BroadcasTheNet # Indexer for monitoring for new releases on BroacasTheNet. type : Literal [ 'broadcasthenet' ] = 'broadcasthenet' class-attribute instance-attribute # Type value associated with this kind of indexer. api_url : AnyHttpUrl = 'https://api.broadcasthe.net' class-attribute instance-attribute # BroadcasTheNet API URL. api_key : Password instance-attribute # BroadcasTheNet API key. Filelist # Monitor for new releases on FileList.io. type : Literal [ 'filelist' ] = 'filelist' class-attribute instance-attribute # Type value associated with this kind of indexer. username : NonEmptyStr instance-attribute # FileList username. passkey : Password instance-attribute # FileList account API key. api_url : AnyHttpUrl = 'https://filelist.io' class-attribute instance-attribute # FileList API URL. Do not change this unless you know what you're doing, as your API key will be sent to this host. categories : Set [ FilelistCategory ] = { FilelistCategory . TV_SD , FilelistCategory . TV_HD , FilelistCategory . TV_4K } class-attribute instance-attribute # Categories to monitor for standard/daily show new releases. Set to an empty list to not monitor for standard/daily shows. Values: Anime Animation TV 4K TV HD TV SD Sport anime_categories : Set [ FilelistCategory ] = set () class-attribute instance-attribute # Categories to monitor for anime new releases. Leave empty to not monitor for anime. Values: Anime Animation TV 4K TV HD TV SD Sport HDBits # Monitor for new releases on HDBits. type : Literal [ 'hdbits' ] = 'hdbits' class-attribute instance-attribute # Type value associated with this kind of indexer. username : NonEmptyStr instance-attribute # HDBits account username. api_key : Password instance-attribute # HDBits API key assigned to the account. api_url : AnyHttpUrl = 'https://hdbits.org' class-attribute instance-attribute # HDBits API URL. Do not change this unless you know what you're doing, as your API key will be sent to this host. IP Torrents # Monitor for releases using the IP Torrents native API. Note IP Torrents' native API does not support automatic searching. It is recommended to instead configure IP Torrents as a Torznab indexer. type : Literal [ 'iptorrents' ] = 'iptorrents' class-attribute instance-attribute # Type value associated with this kind of indexer. feed_url : RssUrl instance-attribute # The full RSS feed url generated by IP Torrents, using only the categories you selected (HD, SD, x264, etc ...). Nyaa # Monitor for new anime releases on the configured Nyaa domain. Nyaa only supports searching for Anime series type releases. type : Literal [ 'nyaa' ] = 'nyaa' class-attribute instance-attribute # Type value associated with this kind of indexer. website_url : AnyHttpUrl instance-attribute # HTTPS URL for accessing Nyaa. anime_standard_format_search : bool = False class-attribute instance-attribute # Also search for anime using the standard numbering. Only applies for Anime series types. additional_parameters : Optional [ str ] = '&cats=1_0&filter=1' class-attribute instance-attribute # Parameters to send in the Nyaa search request. Note that if you change the category, you will have to add required/restricted rules about the subgroups to avoid foreign language releases. Rarbg # Monitor for new releases on the RARBG torrent tracker. type : Literal [ 'rarbg' ] = 'rarbg' class-attribute instance-attribute # Type value associated with this kind of indexer. api_url : AnyHttpUrl instance-attribute # RARBG API url. ranked_only : bool = False class-attribute instance-attribute # Only include ranked results. captcha_token : Optional [ str ] = None class-attribute instance-attribute # CAPTCHA clearance token used to handle CloudFlare anti-DDoS measures on shared-IP VPNs. Torrent RSS Feed # Generic parser for monitoring a torrent RSS feed. Note This indexer does not support automatic searching. It is recommended to use an indexer that natively communicates with a tracker using an API. type : Literal [ 'torrentrssfeed' ] = 'torrentrssfeed' class-attribute instance-attribute # Type value associated with this kind of indexer. full_rss_feed_url : RssUrl instance-attribute # RSS feed to monitor. cookie : Optional [ str ] = None class-attribute instance-attribute # Session cookie for accessing the RSS feed. If the RSS feed requires one, this should be retrieved manually via a web browser. allow_zero_size : bool = False class-attribute instance-attribute # Allow access to releases that don't specify release size. As size checks will not be performed, be careful when enabling this option. TorrentLeech # Monitor for new releases on TorrentLeech. Note This indexer does not support automatic searching. type : Literal [ 'torrentleech' ] = 'torrentleech' class-attribute instance-attribute # Type value associated with this kind of indexer. website_url : AnyHttpUrl = 'http://rss.torrentleech.org' class-attribute instance-attribute # TorrentLeech feed API URL. api_key : Password instance-attribute # TorrentLeech API key. Torznab # Monitor and search for new releases on a Torznab-compliant torrent indexing site. Sonarr defines presets for several popular sites. type : Literal [ 'torznab' ] = 'torznab' class-attribute instance-attribute # Type value associated with this kind of indexer. url : AnyHttpUrl instance-attribute # URL of the Torznab-compatible indexing site. api_path : NonEmptyStr = '/api' class-attribute instance-attribute # Tornab API endpoint. Usually /api . categories : Set [ NabCategory ] = { NabCategory . TV_SD , NabCategory . TV_HD } class-attribute instance-attribute # Categories to monitor for standard/daily shows. Define as empty to disable. Values: TV-WEBDL TV-Foreign TV-SD TV-HD TV-UHD TV-Other TV-Sports TV-Anime TV-Documentary anime_categories : Set [ NabCategory ] = set () class-attribute instance-attribute # Categories to monitor for anime. Values: TV-WEBDL TV-Foreign TV-SD TV-HD TV-UHD TV-Other TV-Sports TV-Anime TV-Documentary anime_standard_format_search : bool = False class-attribute instance-attribute # Also search for anime using the standard numbering. Only applies for Anime series types. additional_parameters : Optional [ str ] = None class-attribute instance-attribute # Additional Torznab API parameters.","title":"Indexers"},{"location":"plugins/sonarr/configuration/indexers/#indexers","text":"Indexers are used to monitor for new releases of media on external trackers. When a suitable release has been found, Sonarr registers it for download on one of the configured download clients. sonarr : config : indexers : minimum_age : 0 retention : 0 maximum_size : 0 rss_sync_interval : 15 delete_unmanaged : false # Better to leave off for the most part definitions : Nyaa : # Indexer name type : \"nyaa\" # Type of indexer # Configuration common to all indexers enable_rss : true enable_automatic_search : true enable_interactive_search : true anime_standard_format_search : true indexer_priority : 25 download_client : null tags : - \"example\" # Nyaa-specific configuration website_url : \"https://example.com\" # Define more indexers here. The following parameters are available for configuring indexers and how they are handled by Sonarr. For more information on how Sonarr finds epsiodes, refer to the FAQ on WikiArr .","title":"Indexers"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.SonarrIndexersSettingsConfig.minimum_age","text":"Minimum age (in minutes) of NZBs before they are grabbed. (Usenet only) Use this to give new releases time to propagate to your Usenet provider.","title":"minimum_age"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.SonarrIndexersSettingsConfig.retention","text":"Retention of releases. (Usenet only) Set to 0 for unlimited retention.","title":"retention"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.SonarrIndexersSettingsConfig.maximum_size","text":"Maximum size for a release to be grabbed, in megabytes (MB). Set to 0 to set for unlimited size.","title":"maximum_size"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.SonarrIndexersSettingsConfig.rss_sync_interval","text":"Interval (in minutes) to sync RSS feeds with indexers. Set to 0 to disable syncing. This also disables automatic release grabbing.","title":"rss_sync_interval"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.SonarrIndexersSettingsConfig.delete_unmanaged","text":"Automatically delete indexers not configured by Buildarr. Take care when enabling this option, as it will also delete indexers created by external applications such as Prowlarr. If unsure, leave set at the default of false .","title":"delete_unmanaged"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.SonarrIndexersSettingsConfig.definitions","text":"Indexers to manage via Buildarr are defined here.","title":"definitions"},{"location":"plugins/sonarr/configuration/indexers/#configuring-indexers","text":"Here is an example of an indexer being configured in the indexers configuration block in Buildarr. ... indexers : definitions : Nyaa : # Indexer name type : \"nyaa\" # Type of indexer # Configuration common to all indexers enable_rss : true enable_automatic_search : true enable_interactive_search : true anime_standard_format_search : true indexer_priority : 25 download_client : null tags : - \"example\" # Nyaa-specific configuration website_url : \"https://example.com\" # Define more indexers here. There are configuration parameters common to all indexer types, and parameters common to only specific types of indexers. The following configuration attributes can be defined on all indexer types.","title":"Configuring indexers"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.Indexer.enable_rss","text":"If enabled, use this indexer to watch for files that are wanted and missing or have not yet reached their cutoff.","title":"enable_rss"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.Indexer.enable_automatic_search","text":"If enabled, use this indexer for automatic searches, including Search on Add.","title":"enable_automatic_search"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.Indexer.enable_interactive_search","text":"If enabled, use this indexer for manual interactive searches.","title":"enable_interactive_search"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.Indexer.priority","text":"Priority of this indexer to prefer one indexer over another in release tiebreaker scenarios. 1 is highest priority and 50 is lowest priority. Changed in version 0.4.1 : Renamed from indexer_priority to priority . The original name is still available as an alias.","title":"priority"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.Indexer.download_client","text":"The name of the download client to use for grabs from this indexer.","title":"download_client"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.Indexer.tags","text":"Only use this indexer for series with at least one matching tag. Leave blank to use with all series.","title":"tags"},{"location":"plugins/sonarr/configuration/indexers/#fanzub","text":"An indexer which uses a Fanzub-compatible RSS feed to monitor for releases.","title":"Fanzub"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.FanzubIndexer.type","text":"Type value associated with this kind of indexer.","title":"type"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.FanzubIndexer.rss_url","text":"A URL to a Fanzub compatible RSS feed.","title":"rss_url"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.FanzubIndexer.anime_standard_format_search","text":"Also search for anime using the standard numbering. Only applies for Anime series types.","title":"anime_standard_format_search"},{"location":"plugins/sonarr/configuration/indexers/#newznab","text":"An indexer for monitoring a Newznab-compliant Usenet indexing site. Sonarr defines presets for several popular sites.","title":"Newznab"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.NewznabIndexer.type","text":"Type value associated with this kind of indexer.","title":"type"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.NewznabIndexer.url","text":"URL of the Newznab-compatible indexing site.","title":"url"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.NewznabIndexer.api_path","text":"Newznab API endpoint. Usually /api .","title":"api_path"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.NewznabIndexer.categories","text":"Categories to monitor for standard/daily shows. Define as empty to disable. Values: TV-WEBDL TV-Foreign TV-SD TV-HD TV-UHD TV-Other TV-Sports TV-Anime TV-Documentary","title":"categories"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.NewznabIndexer.anime_categories","text":"Categories to monitor for anime. Define as empty to disable. Values: TV-WEBDL TV-Foreign TV-SD TV-HD TV-UHD TV-Other TV-Sports TV-Anime TV-Documentary","title":"anime_categories"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.NewznabIndexer.anime_standard_format_search","text":"Also search for anime using the standard numbering. Only applies for Anime series types.","title":"anime_standard_format_search"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.NewznabIndexer.additional_parameters","text":"Additional Newznab API parameters.","title":"additional_parameters"},{"location":"plugins/sonarr/configuration/indexers/#omgwtfnzbs","text":"An indexer for monitoring OmgWtfNZBs.","title":"OmgWtfNZBs"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.OmgwtfnzbsIndexer.type","text":"Type value associated with this kind of indexer.","title":"type"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.OmgwtfnzbsIndexer.username","text":"Username for the OmgWtfNZBs account.","title":"username"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.OmgwtfnzbsIndexer.api_key","text":"API key for the OmgWtfNZBs API.","title":"api_key"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.OmgwtfnzbsIndexer.delay","text":"Time (in minutes) to delay new NZBs before they appear on the RSS feed.","title":"delay"},{"location":"plugins/sonarr/configuration/indexers/#torrent-indexers","text":"Configuration attributes common to all torrent indexers.","title":"Torrent Indexers"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.TorrentIndexer.minimum_seeders","text":"The minimum number of seeders required before downloading a release.","title":"minimum_seeders"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.TorrentIndexer.seed_ratio","text":"The seed ratio a torrent should reach before stopping. If unset or set to null , use the download client's defaults.","title":"seed_ratio"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.TorrentIndexer.seed_time","text":"The amount of time (in minutes) a torrent should be seeded before stopping. If unset or set to null , use the download client's defaults.","title":"seed_time"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.TorrentIndexer.seasonpack_seed_time","text":"The amount of time (in minutes) a season-pack torrent should be seeded before stopping. If unset or set to null , use the download client's defaults.","title":"seasonpack_seed_time"},{"location":"plugins/sonarr/configuration/indexers/#broadcasthenet","text":"Indexer for monitoring for new releases on BroacasTheNet.","title":"BroadcasTheNet"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.BroadcasthenetIndexer.type","text":"Type value associated with this kind of indexer.","title":"type"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.BroadcasthenetIndexer.api_url","text":"BroadcasTheNet API URL.","title":"api_url"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.BroadcasthenetIndexer.api_key","text":"BroadcasTheNet API key.","title":"api_key"},{"location":"plugins/sonarr/configuration/indexers/#filelist","text":"Monitor for new releases on FileList.io.","title":"Filelist"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.FilelistIndexer.type","text":"Type value associated with this kind of indexer.","title":"type"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.FilelistIndexer.username","text":"FileList username.","title":"username"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.FilelistIndexer.passkey","text":"FileList account API key.","title":"passkey"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.FilelistIndexer.api_url","text":"FileList API URL. Do not change this unless you know what you're doing, as your API key will be sent to this host.","title":"api_url"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.FilelistIndexer.categories","text":"Categories to monitor for standard/daily show new releases. Set to an empty list to not monitor for standard/daily shows. Values: Anime Animation TV 4K TV HD TV SD Sport","title":"categories"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.FilelistIndexer.anime_categories","text":"Categories to monitor for anime new releases. Leave empty to not monitor for anime. Values: Anime Animation TV 4K TV HD TV SD Sport","title":"anime_categories"},{"location":"plugins/sonarr/configuration/indexers/#hdbits","text":"Monitor for new releases on HDBits.","title":"HDBits"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.HdbitsIndexer.type","text":"Type value associated with this kind of indexer.","title":"type"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.HdbitsIndexer.username","text":"HDBits account username.","title":"username"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.HdbitsIndexer.api_key","text":"HDBits API key assigned to the account.","title":"api_key"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.HdbitsIndexer.api_url","text":"HDBits API URL. Do not change this unless you know what you're doing, as your API key will be sent to this host.","title":"api_url"},{"location":"plugins/sonarr/configuration/indexers/#ip-torrents","text":"Monitor for releases using the IP Torrents native API. Note IP Torrents' native API does not support automatic searching. It is recommended to instead configure IP Torrents as a Torznab indexer.","title":"IP Torrents"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.IptorrentsIndexer.type","text":"Type value associated with this kind of indexer.","title":"type"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.IptorrentsIndexer.feed_url","text":"The full RSS feed url generated by IP Torrents, using only the categories you selected (HD, SD, x264, etc ...).","title":"feed_url"},{"location":"plugins/sonarr/configuration/indexers/#nyaa","text":"Monitor for new anime releases on the configured Nyaa domain. Nyaa only supports searching for Anime series type releases.","title":"Nyaa"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.NyaaIndexer.type","text":"Type value associated with this kind of indexer.","title":"type"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.NyaaIndexer.website_url","text":"HTTPS URL for accessing Nyaa.","title":"website_url"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.NyaaIndexer.anime_standard_format_search","text":"Also search for anime using the standard numbering. Only applies for Anime series types.","title":"anime_standard_format_search"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.NyaaIndexer.additional_parameters","text":"Parameters to send in the Nyaa search request. Note that if you change the category, you will have to add required/restricted rules about the subgroups to avoid foreign language releases.","title":"additional_parameters"},{"location":"plugins/sonarr/configuration/indexers/#rarbg","text":"Monitor for new releases on the RARBG torrent tracker.","title":"Rarbg"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.RarbgIndexer.type","text":"Type value associated with this kind of indexer.","title":"type"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.RarbgIndexer.api_url","text":"RARBG API url.","title":"api_url"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.RarbgIndexer.ranked_only","text":"Only include ranked results.","title":"ranked_only"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.RarbgIndexer.captcha_token","text":"CAPTCHA clearance token used to handle CloudFlare anti-DDoS measures on shared-IP VPNs.","title":"captcha_token"},{"location":"plugins/sonarr/configuration/indexers/#torrent-rss-feed","text":"Generic parser for monitoring a torrent RSS feed. Note This indexer does not support automatic searching. It is recommended to use an indexer that natively communicates with a tracker using an API.","title":"Torrent RSS Feed"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.TorrentrssfeedIndexer.type","text":"Type value associated with this kind of indexer.","title":"type"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.TorrentrssfeedIndexer.full_rss_feed_url","text":"RSS feed to monitor.","title":"full_rss_feed_url"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.TorrentrssfeedIndexer.cookie","text":"Session cookie for accessing the RSS feed. If the RSS feed requires one, this should be retrieved manually via a web browser.","title":"cookie"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.TorrentrssfeedIndexer.allow_zero_size","text":"Allow access to releases that don't specify release size. As size checks will not be performed, be careful when enabling this option.","title":"allow_zero_size"},{"location":"plugins/sonarr/configuration/indexers/#torrentleech","text":"Monitor for new releases on TorrentLeech. Note This indexer does not support automatic searching.","title":"TorrentLeech"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.TorrentleechIndexer.type","text":"Type value associated with this kind of indexer.","title":"type"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.TorrentleechIndexer.website_url","text":"TorrentLeech feed API URL.","title":"website_url"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.TorrentleechIndexer.api_key","text":"TorrentLeech API key.","title":"api_key"},{"location":"plugins/sonarr/configuration/indexers/#torznab","text":"Monitor and search for new releases on a Torznab-compliant torrent indexing site. Sonarr defines presets for several popular sites.","title":"Torznab"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.TorznabIndexer.type","text":"Type value associated with this kind of indexer.","title":"type"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.TorznabIndexer.url","text":"URL of the Torznab-compatible indexing site.","title":"url"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.TorznabIndexer.api_path","text":"Tornab API endpoint. Usually /api .","title":"api_path"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.TorznabIndexer.categories","text":"Categories to monitor for standard/daily shows. Define as empty to disable. Values: TV-WEBDL TV-Foreign TV-SD TV-HD TV-UHD TV-Other TV-Sports TV-Anime TV-Documentary","title":"categories"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.TorznabIndexer.anime_categories","text":"Categories to monitor for anime. Values: TV-WEBDL TV-Foreign TV-SD TV-HD TV-UHD TV-Other TV-Sports TV-Anime TV-Documentary","title":"anime_categories"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.TorznabIndexer.anime_standard_format_search","text":"Also search for anime using the standard numbering. Only applies for Anime series types.","title":"anime_standard_format_search"},{"location":"plugins/sonarr/configuration/indexers/#buildarr_sonarr.config.indexers.TorznabIndexer.additional_parameters","text":"Additional Torznab API parameters.","title":"additional_parameters"},{"location":"plugins/sonarr/configuration/media-management/","text":"Media Management # Naming, file management and root folder configuration. sonarr : settings : media_management : ... For more information on how to configure these options correctly, refer to these guides from WikiArr and TRaSH-Guides . rename_episodes : bool = False class-attribute instance-attribute # Rename imported files to the defined standard format. Sonarr will use the existing file name if renaming is disabled. replace_illegal_characters : bool = True class-attribute instance-attribute # Replace illegal characters within the file name. If set to False , Sonarr will remove them instead. standard_episode_format : NonEmptyStr = '{Series TitleYear} - S {season:00} E {episode:00} - {Episode CleanTitle} [{Preferred Words }{Quality Full}]{[MediaInfo VideoDynamicRangeType]}{[Mediainfo AudioCodec}{ Mediainfo AudioChannels]}{MediaInfo AudioLanguages}{[MediaInfo VideoCodec]}{-Release Group}' class-attribute instance-attribute # File renaming format for a standard episode file. The default specified here is the current TRaSH-Guides recommended format, but it will not be applied to the Sonarr instance unless it is explicitly defined in the configuration file. daily_episode_format : NonEmptyStr = '{Series TitleYear} - {Air-Date} - {Episode CleanTitle} [{Preferred Words }{Quality Full}]{[MediaInfo VideoDynamicRangeType]}{[Mediainfo AudioCodec}{ Mediainfo AudioChannels]}{MediaInfo AudioLanguages}{[MediaInfo VideoCodec]}{-Release Group}' class-attribute instance-attribute # File renaming format for a daily episode file. The default specified here is the current TRaSH-Guides recommended format, but it will not be applied to the Sonarr instance unless it is explicitly defined in the configuration file. anime_episode_format : NonEmptyStr = '{Series TitleYear} - S {season:00} E {episode:00} - {absolute:000} - {Episode CleanTitle} [{Preferred Words }{Quality Full}]{[MediaInfo VideoDynamicRangeType]}[{MediaInfo VideoBitDepth}bit]{[MediaInfo VideoCodec]}[{Mediainfo AudioCodec} { Mediainfo AudioChannels}]{MediaInfo AudioLanguages}{-Release Group}' class-attribute instance-attribute # File renaming format for an anime episode file. The default specified here is the current TRaSH-Guides recommended format, but it will not be applied to the Sonarr instance unless it is explicitly defined in the configuration file. series_folder_format : NonEmptyStr = '{Series TitleYear}' class-attribute instance-attribute # Renaming format for a series folder. The default specified here is the current TRaSH-Guides recommended format, but it will not be applied to the Sonarr instance unless it is explicitly defined in the configuration file. season_folder_format : NonEmptyStr = 'Season {season:00} ' class-attribute instance-attribute # Renaming format for a season folder of a series. The default specified here is the current TRaSH-Guides recommended format, but it will not be applied to the Sonarr instance unless it is explicitly defined in the configuration file. specials_folder_format : NonEmptyStr = 'Specials' class-attribute instance-attribute # Renaming format for a specials folder of a series. The default specified here is the current TRaSH-Guides recommended format, but it will not be applied to the Sonarr instance unless it is explicitly defined in the configuration file. multiepisode_style : MultiEpisodeStyle = MultiEpisodeStyle . range class-attribute instance-attribute # Formatting style for the episode numbers of a multi-episode media file. create_empty_series_folders : bool = False class-attribute instance-attribute # Create missing series folders during disk scan. delete_empty_folders : bool = False class-attribute instance-attribute # Delete empty series and season folders during disk scan and when episode files are deleted. episode_title_required : EpisodeTitleRequired = EpisodeTitleRequired . always class-attribute instance-attribute # Prevent importing for up to 48 hours if the episode title is in the naming format and the episode title is TBA. Values: always bulk-season-releases never sonarr : settings : media_management : episode_title_required : \"always\" skip_free_space_check : bool = False class-attribute instance-attribute # Skip the free space check for the series root folder. Only enable when Sonarr is unable to detect free space from your series root folder. minimum_free_space : int = Field ( 100 , ge = 100 ) class-attribute instance-attribute # Prevent import if it would leave less than the specified amount of disk space (in megabytes) available. Minimum value is 100 MB. use_hardlinks : bool = True class-attribute instance-attribute # Use hard links when trying to copy files from torrents that are still being seeded. Occasionally, file locks may prevent renaming files that are being seeded. You may temporarily disable seeding and use Sonarr's rename function as a work around. import_extra_files : bool = False class-attribute instance-attribute # Import matching extra files (subtitles, .nfo file, etc) after importing an episode file. unmonitor_deleted_episodes : bool = False class-attribute instance-attribute # Episodes deleted from disk are automatically unmonitored in Sonarr. propers_and_repacks : PropersAndRepacks = PropersAndRepacks . do_not_prefer class-attribute instance-attribute # Whether or not to automatically upgrade to Propers/Repacks. Values: prefer-and-upgrade do-not-upgrade-automatically do-not-prefer sonarr : settings : media_management : propers_and_repacks : \"do-not-prefer\" Use 'Do not Prefer' to sort by preferred word score over propers/repacks. Use 'Prefer and Upgrade' for automatic upgrades to propers/repacks. analyze_video_files : bool = True class-attribute instance-attribute # Extract video information such as resolution, runtime and codec information from files. This requires Sonarr to read parts of the file, which may cause high disk or network activity during scans. rescan_series_folder_after_refresh : RescanSeriesFolderAfterRefresh = RescanSeriesFolderAfterRefresh . always class-attribute instance-attribute # Rescan the series folder after refreshing the series. Values: always after_manual_refresh never sonarr : settings : media_management : rescan_series_folder_after_refresh : \"always\" NOTE: Sonarr will not automatically detect changes to files if this option is not set to always . change_file_date : ChangeFileDate = ChangeFileDate . none class-attribute instance-attribute # Change file date on import/rescan. Values: none local-air-date utc-air-date sonarr : settings : media_management : change_file_date : \"none\" recycling_bin : Optional [ NonEmptyStr ] = None class-attribute instance-attribute # Episode files will go here when deleted instead of being permanently deleted. recycling_bin_cleanup : int = Field ( 7 , ge = 0 ) class-attribute instance-attribute # Files in the recycle bin older than the selected number of days will be cleaned up automatically. Set to 0 to disable automatic cleanup. set_permissions : bool = False class-attribute instance-attribute # Set whether or not chmod should run when files are imported/renamed. If you're unsure what this and the chmod / chown series of attributes do, do not alter them. chmod_folder : ChmodFolder = ChmodFolder . drwxr_xr_x class-attribute instance-attribute # Permissions to set on media folders and files during import/rename. File permissions are set without execute bits. This only works if the user running Sonarr is the owner of the file. It's better to ensure the download client sets the permissions properly. Values: drwxr-xr-x / 755 drwxrwxr-x / 775 drwxrwx--- / 770 drwxr-x--- / 750 drwxrwxrwx / 777 sonarr : settings : media_management : chmod_folder : \"drwxr-xr-x\" chown_group : Optional [ str ] = None class-attribute instance-attribute # Group name or gid. Use gid for remote file systems. This only works if the user running Sonarr is the owner of the file. It's better to ensure the download client uses the same group as Sonarr. root_folders : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # This allows you to create a root path for a place to either place new imported downloads, or to allow Sonarr to scan existing media. sonarr : settings : media_management : root_folders : - \"/path/to/rootfolder\" delete_unmanaged_root_folders : bool = False class-attribute instance-attribute # Delete root folder definitions from Sonarr if they are not explicitly defined in Buildarr. Before enabling this option, ensure all the root folders you want Sonarr to scan are defined in Buildarr, as Sonarr might remove imported media from its database when root folder definitions are deleted. New in version 0.1.2.","title":"Media Management"},{"location":"plugins/sonarr/configuration/media-management/#media-management","text":"Naming, file management and root folder configuration. sonarr : settings : media_management : ... For more information on how to configure these options correctly, refer to these guides from WikiArr and TRaSH-Guides .","title":"Media Management"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.rename_episodes","text":"Rename imported files to the defined standard format. Sonarr will use the existing file name if renaming is disabled.","title":"rename_episodes"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.replace_illegal_characters","text":"Replace illegal characters within the file name. If set to False , Sonarr will remove them instead.","title":"replace_illegal_characters"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.standard_episode_format","text":"File renaming format for a standard episode file. The default specified here is the current TRaSH-Guides recommended format, but it will not be applied to the Sonarr instance unless it is explicitly defined in the configuration file.","title":"standard_episode_format"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.daily_episode_format","text":"File renaming format for a daily episode file. The default specified here is the current TRaSH-Guides recommended format, but it will not be applied to the Sonarr instance unless it is explicitly defined in the configuration file.","title":"daily_episode_format"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.anime_episode_format","text":"File renaming format for an anime episode file. The default specified here is the current TRaSH-Guides recommended format, but it will not be applied to the Sonarr instance unless it is explicitly defined in the configuration file.","title":"anime_episode_format"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.series_folder_format","text":"Renaming format for a series folder. The default specified here is the current TRaSH-Guides recommended format, but it will not be applied to the Sonarr instance unless it is explicitly defined in the configuration file.","title":"series_folder_format"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.season_folder_format","text":"Renaming format for a season folder of a series. The default specified here is the current TRaSH-Guides recommended format, but it will not be applied to the Sonarr instance unless it is explicitly defined in the configuration file.","title":"season_folder_format"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.specials_folder_format","text":"Renaming format for a specials folder of a series. The default specified here is the current TRaSH-Guides recommended format, but it will not be applied to the Sonarr instance unless it is explicitly defined in the configuration file.","title":"specials_folder_format"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.multiepisode_style","text":"Formatting style for the episode numbers of a multi-episode media file.","title":"multiepisode_style"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.create_empty_series_folders","text":"Create missing series folders during disk scan.","title":"create_empty_series_folders"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.delete_empty_folders","text":"Delete empty series and season folders during disk scan and when episode files are deleted.","title":"delete_empty_folders"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.episode_title_required","text":"Prevent importing for up to 48 hours if the episode title is in the naming format and the episode title is TBA. Values: always bulk-season-releases never sonarr : settings : media_management : episode_title_required : \"always\"","title":"episode_title_required"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.skip_free_space_check","text":"Skip the free space check for the series root folder. Only enable when Sonarr is unable to detect free space from your series root folder.","title":"skip_free_space_check"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.minimum_free_space","text":"Prevent import if it would leave less than the specified amount of disk space (in megabytes) available. Minimum value is 100 MB.","title":"minimum_free_space"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.use_hardlinks","text":"Use hard links when trying to copy files from torrents that are still being seeded. Occasionally, file locks may prevent renaming files that are being seeded. You may temporarily disable seeding and use Sonarr's rename function as a work around.","title":"use_hardlinks"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.import_extra_files","text":"Import matching extra files (subtitles, .nfo file, etc) after importing an episode file.","title":"import_extra_files"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.unmonitor_deleted_episodes","text":"Episodes deleted from disk are automatically unmonitored in Sonarr.","title":"unmonitor_deleted_episodes"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.propers_and_repacks","text":"Whether or not to automatically upgrade to Propers/Repacks. Values: prefer-and-upgrade do-not-upgrade-automatically do-not-prefer sonarr : settings : media_management : propers_and_repacks : \"do-not-prefer\" Use 'Do not Prefer' to sort by preferred word score over propers/repacks. Use 'Prefer and Upgrade' for automatic upgrades to propers/repacks.","title":"propers_and_repacks"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.analyze_video_files","text":"Extract video information such as resolution, runtime and codec information from files. This requires Sonarr to read parts of the file, which may cause high disk or network activity during scans.","title":"analyze_video_files"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.rescan_series_folder_after_refresh","text":"Rescan the series folder after refreshing the series. Values: always after_manual_refresh never sonarr : settings : media_management : rescan_series_folder_after_refresh : \"always\" NOTE: Sonarr will not automatically detect changes to files if this option is not set to always .","title":"rescan_series_folder_after_refresh"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.change_file_date","text":"Change file date on import/rescan. Values: none local-air-date utc-air-date sonarr : settings : media_management : change_file_date : \"none\"","title":"change_file_date"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.recycling_bin","text":"Episode files will go here when deleted instead of being permanently deleted.","title":"recycling_bin"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.recycling_bin_cleanup","text":"Files in the recycle bin older than the selected number of days will be cleaned up automatically. Set to 0 to disable automatic cleanup.","title":"recycling_bin_cleanup"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.set_permissions","text":"Set whether or not chmod should run when files are imported/renamed. If you're unsure what this and the chmod / chown series of attributes do, do not alter them.","title":"set_permissions"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.chmod_folder","text":"Permissions to set on media folders and files during import/rename. File permissions are set without execute bits. This only works if the user running Sonarr is the owner of the file. It's better to ensure the download client sets the permissions properly. Values: drwxr-xr-x / 755 drwxrwxr-x / 775 drwxrwx--- / 770 drwxr-x--- / 750 drwxrwxrwx / 777 sonarr : settings : media_management : chmod_folder : \"drwxr-xr-x\"","title":"chmod_folder"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.chown_group","text":"Group name or gid. Use gid for remote file systems. This only works if the user running Sonarr is the owner of the file. It's better to ensure the download client uses the same group as Sonarr.","title":"chown_group"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.root_folders","text":"This allows you to create a root path for a place to either place new imported downloads, or to allow Sonarr to scan existing media. sonarr : settings : media_management : root_folders : - \"/path/to/rootfolder\"","title":"root_folders"},{"location":"plugins/sonarr/configuration/media-management/#buildarr_sonarr.config.media_management.SonarrMediaManagementSettingsConfig.delete_unmanaged_root_folders","text":"Delete root folder definitions from Sonarr if they are not explicitly defined in Buildarr. Before enabling this option, ensure all the root folders you want Sonarr to scan are defined in Buildarr, as Sonarr might remove imported media from its database when root folder definitions are deleted. New in version 0.1.2.","title":"delete_unmanaged_root_folders"},{"location":"plugins/sonarr/configuration/metadata/","text":"Metadata # Sonarr can output metadata alongside media files in a variety of formats to suit the media playing being users. Multiple of these can be configured at a time. To enable a metadata format, set enable to true in the configuration block in Buildarr. Kodi (XBMC) / Emby # Output metadata files in a format suitable for Kodi (XBMC) or Emby. sonarr : settings : metadata : kodi_emby : enable : true series_metadata : true series_metadata_url : true episode_metadata : true series_images : true season_images : true episode_images : true series_metadata : bool = False class-attribute instance-attribute # Create tvshow.nfo with full series metadata. series_metadata_url : bool = False class-attribute instance-attribute # Add the TVDB show URL to tvshow.nfo . Can be combined with series_metadata . episode_metadata : bool = False class-attribute instance-attribute # Create episode-specific metadata as <filename>.nfo . series_images : bool = False class-attribute instance-attribute # Save series images to fanart.jpg , poster.jpg and banner.jpg . season_images : bool = False class-attribute instance-attribute # Save season images to season##-poster.jpg / season-specials-poster.jpg and season##-banner.jpg / season-specials-banner.jpg . episode_images : bool = False class-attribute instance-attribute # Save episode images to <filename>-thumb.jpg . Roksbox # Output metadata files in a format suitable for Roksbox. sonarr : settings : metadata : roksbox : enable : true episode_metadata : true series_images : true season_images : true episode_images : true episode_metadata : bool = False class-attribute instance-attribute # Create episode-specific metadata as Season##/<filename>.xml . series_images : bool = False class-attribute instance-attribute # Save series images to <Series Title>.jpg . season_images : bool = False class-attribute instance-attribute # Save season images to Season ##.jpg . episode_images : bool = False class-attribute instance-attribute # Save episode images to Season##/<filename>.jpg . WDTV # Output metadata files in a format suitable for WDTV. sonarr : settings : metadata : wdtv : enable : true episode_metadata : true series_images : true season_images : true episode_images : true episode_metadata : bool = False class-attribute instance-attribute # Create episode-specific metadata as <filename>.nfo . series_images : bool = False class-attribute instance-attribute # Save series images to fanart.jpg , poster.jpg and banner.jpg . season_images : bool = False class-attribute instance-attribute # Save as images to season##-poster.jpg / season-specials-poster.jpg and season##-banner.jpg / season-specials-banner.jpg . episode_images : bool = False class-attribute instance-attribute # Save episode images to <filename>-thumb.jpg .","title":"Metadata"},{"location":"plugins/sonarr/configuration/metadata/#metadata","text":"Sonarr can output metadata alongside media files in a variety of formats to suit the media playing being users. Multiple of these can be configured at a time. To enable a metadata format, set enable to true in the configuration block in Buildarr.","title":"Metadata"},{"location":"plugins/sonarr/configuration/metadata/#kodi-xbmc-emby","text":"Output metadata files in a format suitable for Kodi (XBMC) or Emby. sonarr : settings : metadata : kodi_emby : enable : true series_metadata : true series_metadata_url : true episode_metadata : true series_images : true season_images : true episode_images : true","title":"Kodi (XBMC) / Emby"},{"location":"plugins/sonarr/configuration/metadata/#buildarr_sonarr.config.metadata.KodiEmbyMetadata.series_metadata","text":"Create tvshow.nfo with full series metadata.","title":"series_metadata"},{"location":"plugins/sonarr/configuration/metadata/#buildarr_sonarr.config.metadata.KodiEmbyMetadata.series_metadata_url","text":"Add the TVDB show URL to tvshow.nfo . Can be combined with series_metadata .","title":"series_metadata_url"},{"location":"plugins/sonarr/configuration/metadata/#buildarr_sonarr.config.metadata.KodiEmbyMetadata.episode_metadata","text":"Create episode-specific metadata as <filename>.nfo .","title":"episode_metadata"},{"location":"plugins/sonarr/configuration/metadata/#buildarr_sonarr.config.metadata.KodiEmbyMetadata.series_images","text":"Save series images to fanart.jpg , poster.jpg and banner.jpg .","title":"series_images"},{"location":"plugins/sonarr/configuration/metadata/#buildarr_sonarr.config.metadata.KodiEmbyMetadata.season_images","text":"Save season images to season##-poster.jpg / season-specials-poster.jpg and season##-banner.jpg / season-specials-banner.jpg .","title":"season_images"},{"location":"plugins/sonarr/configuration/metadata/#buildarr_sonarr.config.metadata.KodiEmbyMetadata.episode_images","text":"Save episode images to <filename>-thumb.jpg .","title":"episode_images"},{"location":"plugins/sonarr/configuration/metadata/#roksbox","text":"Output metadata files in a format suitable for Roksbox. sonarr : settings : metadata : roksbox : enable : true episode_metadata : true series_images : true season_images : true episode_images : true","title":"Roksbox"},{"location":"plugins/sonarr/configuration/metadata/#buildarr_sonarr.config.metadata.RoksboxMetadata.episode_metadata","text":"Create episode-specific metadata as Season##/<filename>.xml .","title":"episode_metadata"},{"location":"plugins/sonarr/configuration/metadata/#buildarr_sonarr.config.metadata.RoksboxMetadata.series_images","text":"Save series images to <Series Title>.jpg .","title":"series_images"},{"location":"plugins/sonarr/configuration/metadata/#buildarr_sonarr.config.metadata.RoksboxMetadata.season_images","text":"Save season images to Season ##.jpg .","title":"season_images"},{"location":"plugins/sonarr/configuration/metadata/#buildarr_sonarr.config.metadata.RoksboxMetadata.episode_images","text":"Save episode images to Season##/<filename>.jpg .","title":"episode_images"},{"location":"plugins/sonarr/configuration/metadata/#wdtv","text":"Output metadata files in a format suitable for WDTV. sonarr : settings : metadata : wdtv : enable : true episode_metadata : true series_images : true season_images : true episode_images : true","title":"WDTV"},{"location":"plugins/sonarr/configuration/metadata/#buildarr_sonarr.config.metadata.WdtvMetadata.episode_metadata","text":"Create episode-specific metadata as <filename>.nfo .","title":"episode_metadata"},{"location":"plugins/sonarr/configuration/metadata/#buildarr_sonarr.config.metadata.WdtvMetadata.series_images","text":"Save series images to fanart.jpg , poster.jpg and banner.jpg .","title":"series_images"},{"location":"plugins/sonarr/configuration/metadata/#buildarr_sonarr.config.metadata.WdtvMetadata.season_images","text":"Save as images to season##-poster.jpg / season-specials-poster.jpg and season##-banner.jpg / season-specials-banner.jpg .","title":"season_images"},{"location":"plugins/sonarr/configuration/metadata/#buildarr_sonarr.config.metadata.WdtvMetadata.episode_images","text":"Save episode images to <filename>-thumb.jpg .","title":"episode_images"},{"location":"plugins/sonarr/configuration/quality/","text":"Quality # Quality definitions are used to set the permitted bit rates for each quality level. These can either be set manually within Buildarr, or pre-made profiles can be imported from TRaSH-Guides. sonarr : settings : quality : trash_id : \"bef99584217af744e404ed44a33af589\" # series definitions : Bluray-480p : # \"Quality\" column name (not \"Title\") min : 2 max : 100 # Add additional override quality definitions here Quality definition profiles retrieved from TRaSH-Guides are automatically kept up to date by Buildarr, with the latest values being pushed to Sonarr on an update run. For more information, refer to the guides from WikiArr and TRaSH-Guides . trash_id : Optional [ TrashID ] = None class-attribute instance-attribute # Trash ID of the TRaSH-Guides quality definition profile to load default values from. If there is an update in the profile, the quality definitions will be updated accordingly. definitions : Dict [ str , QualityDefinition ] = {} class-attribute instance-attribute # Explicitly set quality definitions here. The key of the definition is the \"Quality\" column of the Quality Definitions page in Sonarr, not \"Title\". If trash_id is set, any values set here will override the default values provided from the TRaSH-Guides quality definition profile. If trash_id is not set, only explicitly defined quality definitions are managed, and quality definitions not set within Buildarr are left unmodified. Setting quality definitions # Manually set quality definitions can have the following parameters. title : Optional [ str ] = None class-attribute instance-attribute # The name of the quality in the GUI. If unset, set to an empty string or None , it will always be set to the name of the quality itself. (e.g. For the Bluray-480p quality, the GUI title will also be Bluray-480p ) min : float = Field ( ... , ge = 0 , le = QUALITYDEFINITION_MAX - 1 ) class-attribute instance-attribute # The minimum Megabytes per Minute (MB/min) a quality can have. Must be set at least 1MB/min lower than max . The minimum value is 0 , and the maximum value is 399 . max : Optional [ float ] = Field ( ... , ge = 1 , le = QUALITYDEFINITION_MAX ) class-attribute instance-attribute # The maximum Megabytes per Minute (MB/min) a quality can have. Must be set at least 1MB/min higher than min . If set to None or 400 , the maximum bit rate will be unlimited. If not set to None , the minimum value is 1 , and the maximum value is 400 . TRaSH-Guides quality definition profiles # TRaSH-Guides quality definition profiles for Sonarr are tracked here . Trash IDs: bef99584217af744e404ed44a33af589 (Series) 387e6278d8e06083d813358762e0ac63 (Anime)","title":"Quality"},{"location":"plugins/sonarr/configuration/quality/#quality","text":"Quality definitions are used to set the permitted bit rates for each quality level. These can either be set manually within Buildarr, or pre-made profiles can be imported from TRaSH-Guides. sonarr : settings : quality : trash_id : \"bef99584217af744e404ed44a33af589\" # series definitions : Bluray-480p : # \"Quality\" column name (not \"Title\") min : 2 max : 100 # Add additional override quality definitions here Quality definition profiles retrieved from TRaSH-Guides are automatically kept up to date by Buildarr, with the latest values being pushed to Sonarr on an update run. For more information, refer to the guides from WikiArr and TRaSH-Guides .","title":"Quality"},{"location":"plugins/sonarr/configuration/quality/#buildarr_sonarr.config.quality.SonarrQualitySettingsConfig.trash_id","text":"Trash ID of the TRaSH-Guides quality definition profile to load default values from. If there is an update in the profile, the quality definitions will be updated accordingly.","title":"trash_id"},{"location":"plugins/sonarr/configuration/quality/#buildarr_sonarr.config.quality.SonarrQualitySettingsConfig.definitions","text":"Explicitly set quality definitions here. The key of the definition is the \"Quality\" column of the Quality Definitions page in Sonarr, not \"Title\". If trash_id is set, any values set here will override the default values provided from the TRaSH-Guides quality definition profile. If trash_id is not set, only explicitly defined quality definitions are managed, and quality definitions not set within Buildarr are left unmodified.","title":"definitions"},{"location":"plugins/sonarr/configuration/quality/#setting-quality-definitions","text":"Manually set quality definitions can have the following parameters.","title":"Setting quality definitions"},{"location":"plugins/sonarr/configuration/quality/#buildarr_sonarr.config.quality.QualityDefinition.title","text":"The name of the quality in the GUI. If unset, set to an empty string or None , it will always be set to the name of the quality itself. (e.g. For the Bluray-480p quality, the GUI title will also be Bluray-480p )","title":"title"},{"location":"plugins/sonarr/configuration/quality/#buildarr_sonarr.config.quality.QualityDefinition.min","text":"The minimum Megabytes per Minute (MB/min) a quality can have. Must be set at least 1MB/min lower than max . The minimum value is 0 , and the maximum value is 399 .","title":"min"},{"location":"plugins/sonarr/configuration/quality/#buildarr_sonarr.config.quality.QualityDefinition.max","text":"The maximum Megabytes per Minute (MB/min) a quality can have. Must be set at least 1MB/min higher than min . If set to None or 400 , the maximum bit rate will be unlimited. If not set to None , the minimum value is 1 , and the maximum value is 400 .","title":"max"},{"location":"plugins/sonarr/configuration/quality/#trash-guides-quality-definition-profiles","text":"TRaSH-Guides quality definition profiles for Sonarr are tracked here . Trash IDs: bef99584217af744e404ed44a33af589 (Series) 387e6278d8e06083d813358762e0ac63 (Anime)","title":"TRaSH-Guides quality definition profiles"},{"location":"plugins/sonarr/configuration/tags/","text":"Tags # Tags are used to associate media files with certain resources (e.g. release profiles). sonarr : settings : tags : definitions : - \"example1\" - \"example2\" To be able to use those tags in Buildarr, they need to be defined in this configuration section. definitions : List [ NonEmptyStr ] = [] class-attribute instance-attribute # Define tags that are used within Buildarr here. If they are not defined here, you may get errors resulting from non-existent tags from either Buildarr or Sonarr.","title":"Tags"},{"location":"plugins/sonarr/configuration/tags/#tags","text":"Tags are used to associate media files with certain resources (e.g. release profiles). sonarr : settings : tags : definitions : - \"example1\" - \"example2\" To be able to use those tags in Buildarr, they need to be defined in this configuration section.","title":"Tags"},{"location":"plugins/sonarr/configuration/tags/#buildarr_sonarr.config.tags.SonarrTagsSettingsConfig.definitions","text":"Define tags that are used within Buildarr here. If they are not defined here, you may get errors resulting from non-existent tags from either Buildarr or Sonarr.","title":"definitions"},{"location":"plugins/sonarr/configuration/ui/","text":"UI # Sonarr user interface configuration can also be set directly from Buildarr. sonarr : settings : ui : first_day_of_week : \"monday\" week_column_header : \"day-first\" short_date_format : \"word-month-second\" long_date_format : \"day-first\" time_format : \"twentyfour-hour\" show_relative_dates : true enable_color_impaired_mode : false first_day_of_week : FirstDayOfWeek = FirstDayOfWeek . sunday class-attribute instance-attribute # The first day of the week that Sonarr will show in the calendar. Values: sunday - Sunday monday - Monday week_column_header : WeekColumnHeader = WeekColumnHeader . month_first class-attribute instance-attribute # The format of the date in columns when \"Week\" is the active view in the calendar. Values: month-first - Print month first (e.g. Tue 3/25) month-first-padded - Print month first with padded numbers (e.g. Tue 03/25) day-first - Print day first with padded numbers (e.g. Tue 25/3) day-first-padded - Print day first with padded numbers (e.g. Tue 25/03) short_date_format : ShortDateFormat = ShortDateFormat . word_month_first class-attribute instance-attribute # The format of short dates in the user interface. Values: word-month-first - Month as word, print month first (e.g. Mar 4 2014) word-month-second - Month as word, print month second (e.g. 4 Mar 2014) slash-month-first - Slash-separated date, print month first (e.g. 03/4/2014) slash-month-first-padded - Slash-separated date, print month first (e.g. 03/04/2014) slash-day-first - Slash-separated date, print day first (e.g. 04/03/2014) iso8601 - ISO-8601 date (e.g. 2014-03-04) long_date_format : LongDateFormat = LongDateFormat . month_first class-attribute instance-attribute # The format of long dates in the user interface. Values: month-first - Print month first (e.g. Tuesday, March 4 2014) day-first - Print day first (e.g. Tuesday, 4 March 2014) time_format : TimeFormat = TimeFormat . twelve_hour class-attribute instance-attribute # The format of time in the user information. Values: twelve-hour - 12-hour time (e.g. 5pm/5:30pm) twentyfour-hour - 24-hour time (e.g. 17:00/17:30) show_relative_dates : bool = True class-attribute instance-attribute # When set to True , Sonarr will show relative dates (e.g. today, yesterday) instead of absolute dates (e.g. Monday, Tuesday ...). enable_color_impaired_mode : bool = False class-attribute instance-attribute # Enable an altered view style to allow colour-impaired users to better distinguish colour-coded information.","title":"UI"},{"location":"plugins/sonarr/configuration/ui/#ui","text":"Sonarr user interface configuration can also be set directly from Buildarr. sonarr : settings : ui : first_day_of_week : \"monday\" week_column_header : \"day-first\" short_date_format : \"word-month-second\" long_date_format : \"day-first\" time_format : \"twentyfour-hour\" show_relative_dates : true enable_color_impaired_mode : false","title":"UI"},{"location":"plugins/sonarr/configuration/ui/#buildarr_sonarr.config.ui.SonarrUISettingsConfig.first_day_of_week","text":"The first day of the week that Sonarr will show in the calendar. Values: sunday - Sunday monday - Monday","title":"first_day_of_week"},{"location":"plugins/sonarr/configuration/ui/#buildarr_sonarr.config.ui.SonarrUISettingsConfig.week_column_header","text":"The format of the date in columns when \"Week\" is the active view in the calendar. Values: month-first - Print month first (e.g. Tue 3/25) month-first-padded - Print month first with padded numbers (e.g. Tue 03/25) day-first - Print day first with padded numbers (e.g. Tue 25/3) day-first-padded - Print day first with padded numbers (e.g. Tue 25/03)","title":"week_column_header"},{"location":"plugins/sonarr/configuration/ui/#buildarr_sonarr.config.ui.SonarrUISettingsConfig.short_date_format","text":"The format of short dates in the user interface. Values: word-month-first - Month as word, print month first (e.g. Mar 4 2014) word-month-second - Month as word, print month second (e.g. 4 Mar 2014) slash-month-first - Slash-separated date, print month first (e.g. 03/4/2014) slash-month-first-padded - Slash-separated date, print month first (e.g. 03/04/2014) slash-day-first - Slash-separated date, print day first (e.g. 04/03/2014) iso8601 - ISO-8601 date (e.g. 2014-03-04)","title":"short_date_format"},{"location":"plugins/sonarr/configuration/ui/#buildarr_sonarr.config.ui.SonarrUISettingsConfig.long_date_format","text":"The format of long dates in the user interface. Values: month-first - Print month first (e.g. Tuesday, March 4 2014) day-first - Print day first (e.g. Tuesday, 4 March 2014)","title":"long_date_format"},{"location":"plugins/sonarr/configuration/ui/#buildarr_sonarr.config.ui.SonarrUISettingsConfig.time_format","text":"The format of time in the user information. Values: twelve-hour - 12-hour time (e.g. 5pm/5:30pm) twentyfour-hour - 24-hour time (e.g. 17:00/17:30)","title":"time_format"},{"location":"plugins/sonarr/configuration/ui/#buildarr_sonarr.config.ui.SonarrUISettingsConfig.show_relative_dates","text":"When set to True , Sonarr will show relative dates (e.g. today, yesterday) instead of absolute dates (e.g. Monday, Tuesday ...).","title":"show_relative_dates"},{"location":"plugins/sonarr/configuration/ui/#buildarr_sonarr.config.ui.SonarrUISettingsConfig.enable_color_impaired_mode","text":"Enable an altered view style to allow colour-impaired users to better distinguish colour-coded information.","title":"enable_color_impaired_mode"},{"location":"plugins/sonarr/configuration/profiles/delay/","text":"Delay Profiles # Delay profiles allow you to reduce the number of releases that will be downloaded for an episode by adding a delay while Sonarr continues to watch for releases that better match your preferences. sonarr : settings : profiles : delay_profiles : # Set to `true` or `false` as desired. (Default `false`) # Works a bit differently to other profile types, see # the `delete_unmanaged` attribute docs. delete_unmanaged : true definitions : # Ordered in priority, highest priority first. - preferred_protocol : \"usenet-prefer\" usenet_delay : 0 torrent_delay : 0 bypass_if_highest_quality : true tags : - \"tv-shows\" # Add additional delay profiles here as needed. ... # Default delay profile goes last, and MUST be defined # if you have defined any other delay profiles. - preferred_protocol : \"torrent-prefer\" usenet_delay : 1440 torrent_delay : 1440 bypass_if_highest_quality : false # Tags will be ignored for default delay profile. In Buildarr, due to the unique way how delay profiles work, they are defined using an ordered list structure, prioritised from first to last (top to bottom). The last delay profile in the list is assumed to be the default delay profile. Every non-default delay profile must have tags defined, and the default delay profile must have no tags defined. For more information, see this guide from WikiArr . General configuration # Configuration parameters for controlling how Buildarr handles delay profiles. delete_unmanaged = False class-attribute instance-attribute # Controls how Buildarr manages existing delay profiles in Sonarr when no delay profiles are defined in Buildarr. When set to True and there are no delay profiles defined in Buildarr, delete all delay profiles except the default delay profile (which can't be deleted). When set to False and there are no delay profiles defined in Buildarr, do not modify the existing delay profiles in Sonarr at all. Due to the unique way delay profiles are structured, when they are defined in Buildarr, they always overwrite the existing delay profiles on the remote Sonarr instance and configure it exactly as laid out in Buildarr, irrespective of this value. If unsure, leave this value set to False . definitions : List [ DelayProfile ] = [] class-attribute instance-attribute # Define delay profiles to configure on Sonarr here. The final delay profile in the list is assumed to be the default delay profile. Creating a delay profile # Delay profiles are defined as an ordered list of objects. A preferred protocol must be specified for all delay profiles. Tags must be defined on all except the final profile (the default profile), where tags must not be defined. ... delay_profiles : definitions : # Ordered in priority, highest priority first. - preferred_protocol : \"usenet-prefer\" # Required usenet_delay : 0 torrent_delay : 0 bypass_if_highest_quality : true tags : - \"tv-shows\" # Add additional delay profiles here as needed. ... # Default delay profile goes last, and MUST be defined # if you have defined any other delay profiles. - preferred_protocol : \"torrent-prefer\" # Required usenet_delay : 1440 torrent_delay : 1440 bypass_if_highest_quality : false # Tags will be ignored for default delay profile. preferred_protocol : PreferredProtocol instance-attribute # Choose which protocol(s) to use and which one is preferred when choosing between otherwise equal releases. Values: usenet-prefer (Prefer Usenet) torrent-prefer (Prefer Torrent) usenet-only (Only Usenet) torrent-only (Only Torrent) usenet_delay : int = Field ( 0 , ge = 0 ) class-attribute instance-attribute # Delay (in minutes) to wait before grabbing a release from Usenet. torrent_delay : int = Field ( 0 , ge = 0 ) class-attribute instance-attribute # Delay (in minutes) to wait before grabbing a torrent. bypass_if_highest_quality : bool = False class-attribute instance-attribute # Bypass the delay if a found release is the highest quality allowed in the quality profile that applies to it, and uses the preferred protocol as defined in this delay profile. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # Tags to assign to this delay profile. This delay profile will apply to series with at least one matching tag.","title":"Delay Profiles"},{"location":"plugins/sonarr/configuration/profiles/delay/#delay-profiles","text":"Delay profiles allow you to reduce the number of releases that will be downloaded for an episode by adding a delay while Sonarr continues to watch for releases that better match your preferences. sonarr : settings : profiles : delay_profiles : # Set to `true` or `false` as desired. (Default `false`) # Works a bit differently to other profile types, see # the `delete_unmanaged` attribute docs. delete_unmanaged : true definitions : # Ordered in priority, highest priority first. - preferred_protocol : \"usenet-prefer\" usenet_delay : 0 torrent_delay : 0 bypass_if_highest_quality : true tags : - \"tv-shows\" # Add additional delay profiles here as needed. ... # Default delay profile goes last, and MUST be defined # if you have defined any other delay profiles. - preferred_protocol : \"torrent-prefer\" usenet_delay : 1440 torrent_delay : 1440 bypass_if_highest_quality : false # Tags will be ignored for default delay profile. In Buildarr, due to the unique way how delay profiles work, they are defined using an ordered list structure, prioritised from first to last (top to bottom). The last delay profile in the list is assumed to be the default delay profile. Every non-default delay profile must have tags defined, and the default delay profile must have no tags defined. For more information, see this guide from WikiArr .","title":"Delay Profiles"},{"location":"plugins/sonarr/configuration/profiles/delay/#general-configuration","text":"Configuration parameters for controlling how Buildarr handles delay profiles.","title":"General configuration"},{"location":"plugins/sonarr/configuration/profiles/delay/#buildarr_sonarr.config.profiles.delay.SonarrDelayProfilesSettingsConfig.delete_unmanaged","text":"Controls how Buildarr manages existing delay profiles in Sonarr when no delay profiles are defined in Buildarr. When set to True and there are no delay profiles defined in Buildarr, delete all delay profiles except the default delay profile (which can't be deleted). When set to False and there are no delay profiles defined in Buildarr, do not modify the existing delay profiles in Sonarr at all. Due to the unique way delay profiles are structured, when they are defined in Buildarr, they always overwrite the existing delay profiles on the remote Sonarr instance and configure it exactly as laid out in Buildarr, irrespective of this value. If unsure, leave this value set to False .","title":"delete_unmanaged"},{"location":"plugins/sonarr/configuration/profiles/delay/#buildarr_sonarr.config.profiles.delay.SonarrDelayProfilesSettingsConfig.definitions","text":"Define delay profiles to configure on Sonarr here. The final delay profile in the list is assumed to be the default delay profile.","title":"definitions"},{"location":"plugins/sonarr/configuration/profiles/delay/#creating-a-delay-profile","text":"Delay profiles are defined as an ordered list of objects. A preferred protocol must be specified for all delay profiles. Tags must be defined on all except the final profile (the default profile), where tags must not be defined. ... delay_profiles : definitions : # Ordered in priority, highest priority first. - preferred_protocol : \"usenet-prefer\" # Required usenet_delay : 0 torrent_delay : 0 bypass_if_highest_quality : true tags : - \"tv-shows\" # Add additional delay profiles here as needed. ... # Default delay profile goes last, and MUST be defined # if you have defined any other delay profiles. - preferred_protocol : \"torrent-prefer\" # Required usenet_delay : 1440 torrent_delay : 1440 bypass_if_highest_quality : false # Tags will be ignored for default delay profile.","title":"Creating a delay profile"},{"location":"plugins/sonarr/configuration/profiles/delay/#buildarr_sonarr.config.profiles.delay.DelayProfile.preferred_protocol","text":"Choose which protocol(s) to use and which one is preferred when choosing between otherwise equal releases. Values: usenet-prefer (Prefer Usenet) torrent-prefer (Prefer Torrent) usenet-only (Only Usenet) torrent-only (Only Torrent)","title":"preferred_protocol"},{"location":"plugins/sonarr/configuration/profiles/delay/#buildarr_sonarr.config.profiles.delay.DelayProfile.usenet_delay","text":"Delay (in minutes) to wait before grabbing a release from Usenet.","title":"usenet_delay"},{"location":"plugins/sonarr/configuration/profiles/delay/#buildarr_sonarr.config.profiles.delay.DelayProfile.torrent_delay","text":"Delay (in minutes) to wait before grabbing a torrent.","title":"torrent_delay"},{"location":"plugins/sonarr/configuration/profiles/delay/#buildarr_sonarr.config.profiles.delay.DelayProfile.bypass_if_highest_quality","text":"Bypass the delay if a found release is the highest quality allowed in the quality profile that applies to it, and uses the preferred protocol as defined in this delay profile.","title":"bypass_if_highest_quality"},{"location":"plugins/sonarr/configuration/profiles/delay/#buildarr_sonarr.config.profiles.delay.DelayProfile.tags","text":"Tags to assign to this delay profile. This delay profile will apply to series with at least one matching tag.","title":"tags"},{"location":"plugins/sonarr/configuration/profiles/language/","text":"Language Profiles # Language profiles define preferred audio languages for media files, and tell Sonarr how media files should be upgraded if a more preferred language version becomes available. sonarr : settings : profiles : language_profiles : definitions : # Add language profiles here. # The name of the block becomes the name of the quality profile. Anime : upgrades_allowed : true upgrade_until : \"Japanese\" # Highest priority quality first, lowest priority goes last. languages : - \"Japanese\" - \"English\" # Add additional language profiles here as needed. In Buildarr, language profiles are defined using a dictonary structure. The languages listed in the languages attribute are enabled, and prioritised from first to last (top to bottom). Languages not in this list are not selected for download. For more information, see this guide from WikiArr . General configuration # Configuration parameters for controlling how Buildarr handles language profiles. delete_unmanaged = False class-attribute instance-attribute # Automatically delete language profiles not defined in Buildarr. definitions : Dict [ str , LanguageProfile ] = {} class-attribute instance-attribute # Define language profiles to configure on Sonarr here. If there are no language profiles defined and delete_unmanaged is False , Buildarr will not modify existing language profiles, but if delete_unmanaged is True , Buildarr will delete all existing profiles. Be careful when using delete_unmanaged . Creating a language profile # A language profile is defined under the language_profiles block as shown below. ... language_profiles : definitions : Anime : # Name of the language profile upgrades_allowed : true upgrade_until : \"Japanese\" # Required if upgrades are allowed languages : # Required - \"Japanese\" - \"English\" upgrades_allowed : bool = False class-attribute instance-attribute # Enable automatic upgrading if a version of a media file in a more preferred language becomes available. If disabled, languages will not be upgraded. upgrade_until : Optional [ Language ] = None class-attribute instance-attribute # The highest priority language to upgrade an episode to. Usually this would be set to the highest priority language in the profile. This attribute is required if upgrades_allowed is set to True . languages : Annotated [ List [ Language ], Field ( min_items = 1 )] instance-attribute # The languages episodes are allowed to be in. The order of the list determines priority (highest priority first, lowest priority last). Use the name of the language in English (e.g. Japanese , not Nihongo or \u65e5\u672c\u8a9e ). ... languages : - \"Japanese\" - \"English\" At least one language must be specified. Available languages # These are the available languages that can be selected in a language profile. Arabic Bulgarian Chinese Czech Danish Dutch English Finnish Flemish French German Greek Hebrew Hindi Hungarian Icelandic Italian Japanese Korean Lithuanian Malayalam Norwegian Polish Portuguese Russian Spanish Swedish Turkish Ukrainian Vietnamese","title":"Language Profiles"},{"location":"plugins/sonarr/configuration/profiles/language/#language-profiles","text":"Language profiles define preferred audio languages for media files, and tell Sonarr how media files should be upgraded if a more preferred language version becomes available. sonarr : settings : profiles : language_profiles : definitions : # Add language profiles here. # The name of the block becomes the name of the quality profile. Anime : upgrades_allowed : true upgrade_until : \"Japanese\" # Highest priority quality first, lowest priority goes last. languages : - \"Japanese\" - \"English\" # Add additional language profiles here as needed. In Buildarr, language profiles are defined using a dictonary structure. The languages listed in the languages attribute are enabled, and prioritised from first to last (top to bottom). Languages not in this list are not selected for download. For more information, see this guide from WikiArr .","title":"Language Profiles"},{"location":"plugins/sonarr/configuration/profiles/language/#general-configuration","text":"Configuration parameters for controlling how Buildarr handles language profiles.","title":"General configuration"},{"location":"plugins/sonarr/configuration/profiles/language/#buildarr_sonarr.config.profiles.language.SonarrLanguageProfilesSettingsConfig.delete_unmanaged","text":"Automatically delete language profiles not defined in Buildarr.","title":"delete_unmanaged"},{"location":"plugins/sonarr/configuration/profiles/language/#buildarr_sonarr.config.profiles.language.SonarrLanguageProfilesSettingsConfig.definitions","text":"Define language profiles to configure on Sonarr here. If there are no language profiles defined and delete_unmanaged is False , Buildarr will not modify existing language profiles, but if delete_unmanaged is True , Buildarr will delete all existing profiles. Be careful when using delete_unmanaged .","title":"definitions"},{"location":"plugins/sonarr/configuration/profiles/language/#creating-a-language-profile","text":"A language profile is defined under the language_profiles block as shown below. ... language_profiles : definitions : Anime : # Name of the language profile upgrades_allowed : true upgrade_until : \"Japanese\" # Required if upgrades are allowed languages : # Required - \"Japanese\" - \"English\"","title":"Creating a language profile"},{"location":"plugins/sonarr/configuration/profiles/language/#buildarr_sonarr.config.profiles.language.LanguageProfile.upgrades_allowed","text":"Enable automatic upgrading if a version of a media file in a more preferred language becomes available. If disabled, languages will not be upgraded.","title":"upgrades_allowed"},{"location":"plugins/sonarr/configuration/profiles/language/#buildarr_sonarr.config.profiles.language.LanguageProfile.upgrade_until","text":"The highest priority language to upgrade an episode to. Usually this would be set to the highest priority language in the profile. This attribute is required if upgrades_allowed is set to True .","title":"upgrade_until"},{"location":"plugins/sonarr/configuration/profiles/language/#buildarr_sonarr.config.profiles.language.LanguageProfile.languages","text":"The languages episodes are allowed to be in. The order of the list determines priority (highest priority first, lowest priority last). Use the name of the language in English (e.g. Japanese , not Nihongo or \u65e5\u672c\u8a9e ). ... languages : - \"Japanese\" - \"English\" At least one language must be specified.","title":"languages"},{"location":"plugins/sonarr/configuration/profiles/language/#available-languages","text":"These are the available languages that can be selected in a language profile. Arabic Bulgarian Chinese Czech Danish Dutch English Finnish Flemish French German Greek Hebrew Hindi Hungarian Icelandic Italian Japanese Korean Lithuanian Malayalam Norwegian Polish Portuguese Russian Spanish Swedish Turkish Ukrainian Vietnamese","title":"Available languages"},{"location":"plugins/sonarr/configuration/profiles/quality/","text":"Quality Profiles # Quality profiles determine the allowed quality levels for media, and the behaviour of how to upgrade media files if higher quality versions become available. Within a quality profile you set upgrade settings, the maximum quality level to automatically upgrade media to, the allowed quality levels, and the priority given to those quality levels. sonarr : settings : profiles : quality_profiles : # Set to `true` or `false` as desired. (Default `false`) delete_unmanaged : true definitions : # Add Quality profiles here. # The name of the block becomes the name of the quality profile. SDTV : upgrades_allowed : true upgrade_until : \"Bluray-1080p\" # Highest priority quality first, lowest priority goes last. qualities : - \"Bluray-480p\" - \"DVD\" - name : \"WEB 480p\" members : - \"WEBDL-480p\" - \"WEBRip-480p\" - \"SDTV\" # Add additional quality profiles here as needed. In Buildarr, quality profiles are defined using a dictonary structure. The quality levels listed in the qualities attribute are the qualities to enable, and are prioritised from first to last (top to bottom). Quality groups, where multiple qualities are given the same priority level, can also be defined. General configuration # Configuration parameters for controlling how Buildarr handles quality profiles. delete_unmanaged : bool = False class-attribute instance-attribute # Automatically delete quality profiles not defined in Buildarr. Out of the box Sonarr provides some pre-defined quality profiles. Take care when enabling this option, as those will also be deleted. definitions : Dict [ str , QualityProfile ] = {} class-attribute instance-attribute # Define quality profiles to configure on Sonarr here. If there are no quality profiles defined and delete_unmanaged is False , Buildarr will not modify existing quality profiles, but if delete_unmanaged is True , Buildarr will delete all existing profiles. Be careful when using delete_unmanaged . Creating a quality profile # The main things to consider when creating a quality profile are what quality settings to enable, and how to prioritise each. ... quality_profiles : SDTV : upgrades_allowed : true upgrade_until : \"Bluray-1080p\" qualities : - \"Bluray-480p\" - \"DVD\" - name : \"WEB 480p\" members : - \"WEBDL-480p\" - \"WEBRip-480p\" - \"SDTV\" In Buildarr, the quality listed first (at the top) is given the highest priority, with subsequent qualities given lower priority. Qualities not explicitly defined are disabled (not downloaded). Sonarr supports grouping multiple qualities together to give them the same priority. In Buildarr, these are expressed by giving a name to the group, and listing the qualities under the members attribute. For more insight into reasonable values for quality profiles, refer to these guides from WikiArr and TRaSH-Guides ( WEB-DL , anime ). upgrades_allowed : bool = False class-attribute instance-attribute # Enable automatic upgrading if a higher quality version of the media file becomes available. If disabled, media files will not be upgraded after they have been downloaded. upgrade_until : Optional [ NonEmptyStr ] = None class-attribute instance-attribute # The maximum quality level to upgrade an episode to. For a quality group, specify the group name. Once this quality is reached Sonarr will no longer download episodes. This attribute is required if upgrades_allowed is set to True . qualities : Annotated [ List [ Union [ NonEmptyStr , QualityGroup ]], Field ( min_items = 1 )] instance-attribute # The qualities to enable downloading episodes for. The order determines the priority (highest priority first, lowest priority last). Individual qualities can be specified using the name (e.g. Bluray-480p ). Qualities can also be grouped together in a structure to give them the same priority level. A new version of the episode will not be downloaded if it is at least one of the qualities listed in the group, until a higher quality version is found. ... qualities : - name : \"WEB 480p\" members : - \"WEBDL-480p\" - \"WEBRip-480p\" At least one quality must be specified.","title":"Quality Profiles"},{"location":"plugins/sonarr/configuration/profiles/quality/#quality-profiles","text":"Quality profiles determine the allowed quality levels for media, and the behaviour of how to upgrade media files if higher quality versions become available. Within a quality profile you set upgrade settings, the maximum quality level to automatically upgrade media to, the allowed quality levels, and the priority given to those quality levels. sonarr : settings : profiles : quality_profiles : # Set to `true` or `false` as desired. (Default `false`) delete_unmanaged : true definitions : # Add Quality profiles here. # The name of the block becomes the name of the quality profile. SDTV : upgrades_allowed : true upgrade_until : \"Bluray-1080p\" # Highest priority quality first, lowest priority goes last. qualities : - \"Bluray-480p\" - \"DVD\" - name : \"WEB 480p\" members : - \"WEBDL-480p\" - \"WEBRip-480p\" - \"SDTV\" # Add additional quality profiles here as needed. In Buildarr, quality profiles are defined using a dictonary structure. The quality levels listed in the qualities attribute are the qualities to enable, and are prioritised from first to last (top to bottom). Quality groups, where multiple qualities are given the same priority level, can also be defined.","title":"Quality Profiles"},{"location":"plugins/sonarr/configuration/profiles/quality/#general-configuration","text":"Configuration parameters for controlling how Buildarr handles quality profiles.","title":"General configuration"},{"location":"plugins/sonarr/configuration/profiles/quality/#buildarr_sonarr.config.profiles.quality.SonarrQualityProfilesSettingsConfig.delete_unmanaged","text":"Automatically delete quality profiles not defined in Buildarr. Out of the box Sonarr provides some pre-defined quality profiles. Take care when enabling this option, as those will also be deleted.","title":"delete_unmanaged"},{"location":"plugins/sonarr/configuration/profiles/quality/#buildarr_sonarr.config.profiles.quality.SonarrQualityProfilesSettingsConfig.definitions","text":"Define quality profiles to configure on Sonarr here. If there are no quality profiles defined and delete_unmanaged is False , Buildarr will not modify existing quality profiles, but if delete_unmanaged is True , Buildarr will delete all existing profiles. Be careful when using delete_unmanaged .","title":"definitions"},{"location":"plugins/sonarr/configuration/profiles/quality/#creating-a-quality-profile","text":"The main things to consider when creating a quality profile are what quality settings to enable, and how to prioritise each. ... quality_profiles : SDTV : upgrades_allowed : true upgrade_until : \"Bluray-1080p\" qualities : - \"Bluray-480p\" - \"DVD\" - name : \"WEB 480p\" members : - \"WEBDL-480p\" - \"WEBRip-480p\" - \"SDTV\" In Buildarr, the quality listed first (at the top) is given the highest priority, with subsequent qualities given lower priority. Qualities not explicitly defined are disabled (not downloaded). Sonarr supports grouping multiple qualities together to give them the same priority. In Buildarr, these are expressed by giving a name to the group, and listing the qualities under the members attribute. For more insight into reasonable values for quality profiles, refer to these guides from WikiArr and TRaSH-Guides ( WEB-DL , anime ).","title":"Creating a quality profile"},{"location":"plugins/sonarr/configuration/profiles/quality/#buildarr_sonarr.config.profiles.quality.QualityProfile.upgrades_allowed","text":"Enable automatic upgrading if a higher quality version of the media file becomes available. If disabled, media files will not be upgraded after they have been downloaded.","title":"upgrades_allowed"},{"location":"plugins/sonarr/configuration/profiles/quality/#buildarr_sonarr.config.profiles.quality.QualityProfile.upgrade_until","text":"The maximum quality level to upgrade an episode to. For a quality group, specify the group name. Once this quality is reached Sonarr will no longer download episodes. This attribute is required if upgrades_allowed is set to True .","title":"upgrade_until"},{"location":"plugins/sonarr/configuration/profiles/quality/#buildarr_sonarr.config.profiles.quality.QualityProfile.qualities","text":"The qualities to enable downloading episodes for. The order determines the priority (highest priority first, lowest priority last). Individual qualities can be specified using the name (e.g. Bluray-480p ). Qualities can also be grouped together in a structure to give them the same priority level. A new version of the episode will not be downloaded if it is at least one of the qualities listed in the group, until a higher quality version is found. ... qualities : - name : \"WEB 480p\" members : - \"WEBDL-480p\" - \"WEBRip-480p\" At least one quality must be specified.","title":"qualities"},{"location":"plugins/sonarr/configuration/profiles/release/","text":"Release Profiles # Release profiles are used to select releases to download that best fit the criteria for what you want to retrieve for your media library. Since not all releases are created equal, and each release group has their own way of packaging and encoding their material, being able to dial-in what Sonarr selects is important to getting good results. sonarr : settings : profiles : release_profiles : definitions : Example : must_contain : - '\\.*\\.mkv$/i' must_not_contain : - '-FAKEGROUP' preferred : - term : '/\\b(amzn|amazon)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i' score : 100 - term : '/(-BRiNK|-CHX|-GHOSTS|-EVO|)\\b/i' score : -10000 Release Sources (Streaming Service) : trash_id : 1B018E0C53EC825085DD911102E2CA36 P2P Groups + Repack/Proper : trash_id : 71899E6C303A07AF0E4746EFF9873532 In Buildarr, release profiles are defined using a dictonary structure. Each profile has either a set of filters determining the kind of releases that should be prioritised (or ignored), or a reference to an external provider of pre-made release profiles like TRaSH-Guides. For more information on release profiles, refer to this page on WikiArr . General configuration # Configuration parameters for controlling how Buildarr handles release profiles. delete_unmanaged : bool = False class-attribute instance-attribute # Automatically delete release profiles not defined in Buildarr. definitions : Dict [ str , ReleaseProfile ] = {} class-attribute instance-attribute # Define release profiles to configure on Sonarr here. If there are no release profiles defined and delete_unmanaged is False , Buildarr will not modify existing release profiles, but if delete_unmanaged is True , Buildarr will delete all existing profiles. Be careful when using delete_unmanaged . Creating a release profile # Release profiles are defined in Sonarr like this. sonarr : settings : profiles : release_profiles : definitions : Example : must_contain : - '\\.*\\.mkv$/i' must_not_contain : - '-FAKEGROUP' preferred : - term : '/\\b(amzn|amazon)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i' score : 100 - term : '/(-BRiNK|-CHX|-GHOSTS|-EVO|)\\b/i' score : -10000 The below attributes are common to all release profiles. enable : bool = True class-attribute instance-attribute # Enable the release profile in Sonarr. If set to False , the release profile will be uploaded to Sonarr, but inactive. include_preferred_when_renaming : bool = False class-attribute instance-attribute # Add preferred words to the file name as {Preferred Words} when doing automatic renaming in Sonarr. indexer : Optional [ NonEmptyStr ] = None class-attribute instance-attribute # When set to None or an empty string, use any available indexer. tags : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # A list of one or more strings representing tags that will be applied to this release profile. All tags on an existing release profile (if present) are removed and replaced with only the tags in this list. If an empty list is explicitly defined, no tags will be set on the release profile, and any existing tags (if present) are removed. Manually defining filters # When not importing release profiles from external sources like TRaSH-Guides, settings for how to prefer and ignore releases must be defined within the release profile using the following parameters. must_contain : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # A list of terms to mark as \"Must Contain\" in Sonarr. The release will be rejected if it does not contain one or more of terms (case insensitive) or regular expressions. must_not_contain : Set [ NonEmptyStr ] = set () class-attribute instance-attribute # A list of terms to mark as \"Must Not Contain\" in Sonarr. The release will be rejected if it contains one or more of terms (case insensitive) or regular expressions. preferred : List [ PreferredWord ] = [] class-attribute instance-attribute # Assign a score to terms (or a regular expression patterns) found in the file name of a release, and prefer it or not prefer it depending on the result of comparing a release file name against all terms. ... release_profiles : Example : preferred : - term : \"/\b(amzn|amazon)\b(?=[ ._-]web[ ._-]?(dl|rip)\b)/i\" score : 100 - term : \"/(-BRiNK|-CHX|-GHOSTS|-EVO|)\b/i\" score : -10000 The release will be preferred based on each term's score. Positive scores will be more preferred, and negative scores will be less preferred. Importing release profiles from TRaSH-Guides # TRaSH-Guides maintains a list of release profiles for a variety of use cases. Release Profile RegEx (WEB-DL) Release Profile RegEx (Anime) Buildarr supports downloading these release profiles from the TRaSH-Guides metadata repository , and pushing the latest changes to Sonarr directly, without having to manually input them. sonarr : settings : profiles : release_profiles : definitions : Release Sources (Streaming Service) : trash_id : 1B018E0C53EC825085DD911102E2CA36 P2P Groups + Repack/Proper : trash_id : 71899E6C303A07AF0E4746EFF9873532 When using imported release profiles, the filters within the release profile itself cannot be modified, but there are some customisation options that alter how Buildarr interprets them. These are identical to the customisation options for release profiles provided by Recyclarr . trash_id : Optional [ TrashID ] = None class-attribute instance-attribute # The trash ID of the release profile to import from TRaSH-Guides metadata. If not specified, Buildarr assumes the release profile filters are manually defined. filter : TrashFilter = TrashFilter () class-attribute instance-attribute # Defines various ways that release profile terms from the guide are synchronised with Sonarr. These terms have individual trash IDs, and using this filter allows you to pick and choose which parts of the release profile you want to use. ... release_profiles : definitions : Optionals : trash_id : 76e060895c5b8a765c310933da0a5357 filter : include : - ea83f4740cec4df8112f3d6dd7c82751 # Prefer Season Packs - cec8880b847dd5d31d29167ee0112b57 # Ignore 720p/1080p HEVC (Golden Rule) # All the other preferred words in the 'Optionals' profile # are ignored. The attributes include and exclude are mutually exclusive. If both are defined, include is used. include : List [ TrashID ] = [] class-attribute instance-attribute # A list of trash_id values representing terms ( Required , Ignored , or Preferred ) that should be included in the created Release Profile in Sonarr. Terms that are not specified here are excluded automatically. exclude : List [ TrashID ] = [] class-attribute instance-attribute # A list of trash_id values representing terms ( Required , Ignored , or Preferred ) that should be excluded from the created Release Profile in Sonarr. Terms that are not specified here are included automatically. strict_negative_scores : bool = False class-attribute instance-attribute # Enables preferred term scores less than 0 to be instead treated as \"Must Not Contain\" (ignored) terms. For example, if something is \"Preferred\" with a score of -10, it will instead be put in the \"Must Not Contain\" section of the uploaded release profile. TRaSH-Guides release profile import examples # Here are some examples of importing well used release profiles from TRaSH-Guides. Release Profile RegEx (WEB-DL) # sonarr : settings : profiles : release_profiles : definitions : Release Sources (Streaming Service) : trash_id : 1B018E0C53EC825085DD911102E2CA36 P2P Groups + Repack/Proper : trash_id : 71899E6C303A07AF0E4746EFF9873532 Low Quality Groups : trash_id : EBC725268D687D588A20CBC5F97E538B Optionals : trash_id : 76e060895c5b8a765c310933da0a5357 filter : include : - ea83f4740cec4df8112f3d6dd7c82751 # Prefer Season Packs - 6f2aefa61342a63387f2a90489e90790 # Dislike renamed/retagged releases - 19cd5ecc0a24bf493a75e80a51974cdd # Dislike retagged/obfuscated groups - 6a7b462c6caee4a991a9d8aa38ce2405 # Dislike release ending: en - 236a3626a07cacf5692c73cc947bc280 # Dislike release containing: 1- - cec8880b847dd5d31d29167ee0112b57 # Ignore 720p/1080p HEVC re-encodes (Golden Rule) - 436f5a7d08fbf02ba25cb5e5dfe98e55 # Ignore Dolby Vision without HDR10 fallback - f3f0f3691c6a1988d4a02963e69d11f2 # Ignore The Group -SCENE - 5bc23c3a055a1a5d8bbe4fb49d80e0cb # Ignore so-called scene releases - 538bad00ee6f8aced8e0db5218b8484c # Ignore Bad Dual Audio Groups - 4861d8238f9234606df6721df6e27deb # Ignore AV1 Release Profile RegEx (Anime) # sonarr : settings : profiles : release_profiles : definitions : Anime Profile 1 : # * Prefer uncensored # * Prefer Multi-Audio or Dual-Audio # https://trash-guides.info/Sonarr/Sonarr-Release-Profile-RegEx-Anime/#first-release-profile trash_id : d428eda85af1df8904b4bbe4fc2f537c strict_negative_scores : true Anime Profile 2 : # Prioritise/ignore releases based on group. # You may need to adjust the profile based on actual results. # https://trash-guides.info/Sonarr/Sonarr-Release-Profile-RegEx-Anime/#second-release-profile trash_id : 6cd9e10bb5bb4c63d2d7cd3279924c7b strict_negative_scores : true","title":"Release Profiles"},{"location":"plugins/sonarr/configuration/profiles/release/#release-profiles","text":"Release profiles are used to select releases to download that best fit the criteria for what you want to retrieve for your media library. Since not all releases are created equal, and each release group has their own way of packaging and encoding their material, being able to dial-in what Sonarr selects is important to getting good results. sonarr : settings : profiles : release_profiles : definitions : Example : must_contain : - '\\.*\\.mkv$/i' must_not_contain : - '-FAKEGROUP' preferred : - term : '/\\b(amzn|amazon)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i' score : 100 - term : '/(-BRiNK|-CHX|-GHOSTS|-EVO|)\\b/i' score : -10000 Release Sources (Streaming Service) : trash_id : 1B018E0C53EC825085DD911102E2CA36 P2P Groups + Repack/Proper : trash_id : 71899E6C303A07AF0E4746EFF9873532 In Buildarr, release profiles are defined using a dictonary structure. Each profile has either a set of filters determining the kind of releases that should be prioritised (or ignored), or a reference to an external provider of pre-made release profiles like TRaSH-Guides. For more information on release profiles, refer to this page on WikiArr .","title":"Release Profiles"},{"location":"plugins/sonarr/configuration/profiles/release/#general-configuration","text":"Configuration parameters for controlling how Buildarr handles release profiles.","title":"General configuration"},{"location":"plugins/sonarr/configuration/profiles/release/#buildarr_sonarr.config.profiles.release.SonarrReleaseProfilesSettingsConfig.delete_unmanaged","text":"Automatically delete release profiles not defined in Buildarr.","title":"delete_unmanaged"},{"location":"plugins/sonarr/configuration/profiles/release/#buildarr_sonarr.config.profiles.release.SonarrReleaseProfilesSettingsConfig.definitions","text":"Define release profiles to configure on Sonarr here. If there are no release profiles defined and delete_unmanaged is False , Buildarr will not modify existing release profiles, but if delete_unmanaged is True , Buildarr will delete all existing profiles. Be careful when using delete_unmanaged .","title":"definitions"},{"location":"plugins/sonarr/configuration/profiles/release/#creating-a-release-profile","text":"Release profiles are defined in Sonarr like this. sonarr : settings : profiles : release_profiles : definitions : Example : must_contain : - '\\.*\\.mkv$/i' must_not_contain : - '-FAKEGROUP' preferred : - term : '/\\b(amzn|amazon)\\b(?=[ ._-]web[ ._-]?(dl|rip)\\b)/i' score : 100 - term : '/(-BRiNK|-CHX|-GHOSTS|-EVO|)\\b/i' score : -10000 The below attributes are common to all release profiles.","title":"Creating a release profile"},{"location":"plugins/sonarr/configuration/profiles/release/#buildarr_sonarr.config.profiles.release.ReleaseProfile.enable","text":"Enable the release profile in Sonarr. If set to False , the release profile will be uploaded to Sonarr, but inactive.","title":"enable"},{"location":"plugins/sonarr/configuration/profiles/release/#buildarr_sonarr.config.profiles.release.ReleaseProfile.include_preferred_when_renaming","text":"Add preferred words to the file name as {Preferred Words} when doing automatic renaming in Sonarr.","title":"include_preferred_when_renaming"},{"location":"plugins/sonarr/configuration/profiles/release/#buildarr_sonarr.config.profiles.release.ReleaseProfile.indexer","text":"When set to None or an empty string, use any available indexer.","title":"indexer"},{"location":"plugins/sonarr/configuration/profiles/release/#buildarr_sonarr.config.profiles.release.ReleaseProfile.tags","text":"A list of one or more strings representing tags that will be applied to this release profile. All tags on an existing release profile (if present) are removed and replaced with only the tags in this list. If an empty list is explicitly defined, no tags will be set on the release profile, and any existing tags (if present) are removed.","title":"tags"},{"location":"plugins/sonarr/configuration/profiles/release/#manually-defining-filters","text":"When not importing release profiles from external sources like TRaSH-Guides, settings for how to prefer and ignore releases must be defined within the release profile using the following parameters.","title":"Manually defining filters"},{"location":"plugins/sonarr/configuration/profiles/release/#buildarr_sonarr.config.profiles.release.ReleaseProfile.must_contain","text":"A list of terms to mark as \"Must Contain\" in Sonarr. The release will be rejected if it does not contain one or more of terms (case insensitive) or regular expressions.","title":"must_contain"},{"location":"plugins/sonarr/configuration/profiles/release/#buildarr_sonarr.config.profiles.release.ReleaseProfile.must_not_contain","text":"A list of terms to mark as \"Must Not Contain\" in Sonarr. The release will be rejected if it contains one or more of terms (case insensitive) or regular expressions.","title":"must_not_contain"},{"location":"plugins/sonarr/configuration/profiles/release/#buildarr_sonarr.config.profiles.release.ReleaseProfile.preferred","text":"Assign a score to terms (or a regular expression patterns) found in the file name of a release, and prefer it or not prefer it depending on the result of comparing a release file name against all terms. ... release_profiles : Example : preferred : - term : \"/\b(amzn|amazon)\b(?=[ ._-]web[ ._-]?(dl|rip)\b)/i\" score : 100 - term : \"/(-BRiNK|-CHX|-GHOSTS|-EVO|)\b/i\" score : -10000 The release will be preferred based on each term's score. Positive scores will be more preferred, and negative scores will be less preferred.","title":"preferred"},{"location":"plugins/sonarr/configuration/profiles/release/#importing-release-profiles-from-trash-guides","text":"TRaSH-Guides maintains a list of release profiles for a variety of use cases. Release Profile RegEx (WEB-DL) Release Profile RegEx (Anime) Buildarr supports downloading these release profiles from the TRaSH-Guides metadata repository , and pushing the latest changes to Sonarr directly, without having to manually input them. sonarr : settings : profiles : release_profiles : definitions : Release Sources (Streaming Service) : trash_id : 1B018E0C53EC825085DD911102E2CA36 P2P Groups + Repack/Proper : trash_id : 71899E6C303A07AF0E4746EFF9873532 When using imported release profiles, the filters within the release profile itself cannot be modified, but there are some customisation options that alter how Buildarr interprets them. These are identical to the customisation options for release profiles provided by Recyclarr .","title":"Importing release profiles from TRaSH-Guides"},{"location":"plugins/sonarr/configuration/profiles/release/#buildarr_sonarr.config.profiles.release.ReleaseProfile.strict_negative_scores","text":"Enables preferred term scores less than 0 to be instead treated as \"Must Not Contain\" (ignored) terms. For example, if something is \"Preferred\" with a score of -10, it will instead be put in the \"Must Not Contain\" section of the uploaded release profile.","title":"strict_negative_scores"},{"location":"plugins/sonarr/configuration/profiles/release/#trash-guides-release-profile-import-examples","text":"Here are some examples of importing well used release profiles from TRaSH-Guides.","title":"TRaSH-Guides release profile import examples"},{"location":"plugins/sonarr/configuration/profiles/release/#release-profile-regex-web-dl","text":"sonarr : settings : profiles : release_profiles : definitions : Release Sources (Streaming Service) : trash_id : 1B018E0C53EC825085DD911102E2CA36 P2P Groups + Repack/Proper : trash_id : 71899E6C303A07AF0E4746EFF9873532 Low Quality Groups : trash_id : EBC725268D687D588A20CBC5F97E538B Optionals : trash_id : 76e060895c5b8a765c310933da0a5357 filter : include : - ea83f4740cec4df8112f3d6dd7c82751 # Prefer Season Packs - 6f2aefa61342a63387f2a90489e90790 # Dislike renamed/retagged releases - 19cd5ecc0a24bf493a75e80a51974cdd # Dislike retagged/obfuscated groups - 6a7b462c6caee4a991a9d8aa38ce2405 # Dislike release ending: en - 236a3626a07cacf5692c73cc947bc280 # Dislike release containing: 1- - cec8880b847dd5d31d29167ee0112b57 # Ignore 720p/1080p HEVC re-encodes (Golden Rule) - 436f5a7d08fbf02ba25cb5e5dfe98e55 # Ignore Dolby Vision without HDR10 fallback - f3f0f3691c6a1988d4a02963e69d11f2 # Ignore The Group -SCENE - 5bc23c3a055a1a5d8bbe4fb49d80e0cb # Ignore so-called scene releases - 538bad00ee6f8aced8e0db5218b8484c # Ignore Bad Dual Audio Groups - 4861d8238f9234606df6721df6e27deb # Ignore AV1","title":"Release Profile RegEx (WEB-DL)"},{"location":"plugins/sonarr/configuration/profiles/release/#release-profile-regex-anime","text":"sonarr : settings : profiles : release_profiles : definitions : Anime Profile 1 : # * Prefer uncensored # * Prefer Multi-Audio or Dual-Audio # https://trash-guides.info/Sonarr/Sonarr-Release-Profile-RegEx-Anime/#first-release-profile trash_id : d428eda85af1df8904b4bbe4fc2f537c strict_negative_scores : true Anime Profile 2 : # Prioritise/ignore releases based on group. # You may need to adjust the profile based on actual results. # https://trash-guides.info/Sonarr/Sonarr-Release-Profile-RegEx-Anime/#second-release-profile trash_id : 6cd9e10bb5bb4c63d2d7cd3279924c7b strict_negative_scores : true","title":"Release Profile RegEx (Anime)"}]}